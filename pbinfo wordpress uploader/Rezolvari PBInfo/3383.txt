<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("cifmaxmin.in");
ofstream cout("cifmaxmin.out");

int maxi = 1, mini = 100;

int main(){
    int n;
    cin >> n;
    int c1=0, c2=0;
    for(int i = 1; i <= n; ++i){
        int x;
        cin >> x;
        if(x % 2 == 0){
            c1++;
            int cmin = 10, cmax = 0;
            while(x){
                if(x % 10 > cmax)
                    cmax = x % 10;
                if(x % 10 < cmin)
                    cmin = x % 10;
                x/=10;
            }
            int nr = cmax * 10 + cmin;
            if(nr > maxi)
                maxi = nr;
        }
        else{
            c2++;
            int cmin = 10, cmax = 0;
            while(x){
                if(x % 10 > cmax)
                    cmax = x % 10;
                if(x % 10 < cmin)
                    cmin = x % 10;
                x/=10;
            }
            int nr = cmin * 10 + cmax;
            if(nr < mini)
                mini = nr;
        }
    }
    cout << maxi << ' ' << c1 << ' ' << mini << ' ' << c2;
}</pre>
