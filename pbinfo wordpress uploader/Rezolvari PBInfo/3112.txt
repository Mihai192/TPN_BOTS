<h1>Cerința</h1>

<p>Într-un text cu cel mult <code>100</code> de caractere cuvintele sunt formate numai din litere mari și mici ale alfabetului englez și sunt separate prin câte un spațiu. Scrieți un program care citește de la tastatură un text de tipul precizat, apoi un număr natural, <code>n</code>, <code>n∈[1,10</code><sup><code>2</code></sup><code>)</code>, şi afişează pe ecran, pe linii separate, cuvintele din text care au exact <code>n</code> litere. Cuvintele sunt afișate în ordinea apariției lor în text, iar dacă nu există niciun astfel de cuvânt, se afișează pe ecran mesajul <code>nu exista</code>.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul textul dat, apoi numărul <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran cuvintele din text cu exact <code>n</code> litere, fiecare pe câte o linie.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n &lt; 100</code></li>
	<li>textul conține cel mult <code>100</code> de caractere; cuvintele sunt formate numai din litere mari și mici ale alfabetului englez și sunt separate prin câte un spațiu</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=1958414068&amp;w=728&amp;lmt=1595357360&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3112%2Fbac-cuvinte&amp;flash=0&amp;wgl=1&amp;dt=1595357360249&amp;bpp=14&amp;bdt=224&amp;idt=182&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=3851471325162&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357360&amp;ga_hid=356965677&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066624&amp;oid=3&amp;pvsid=4364626253070193&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1335%2Fcaractere&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=8RQ4UVEPq5&amp;p=https%3A//www.pbinfo.ro&amp;dtd=191" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPDli6aB3-oCFYLKuwgdw98JdA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">Fat Frumos este cel mai viteaz
6</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">Frumos
viteaz</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cstring>
using namespace std;

bool sl(char d[], int n)
{
    int i = 0;
    while(d[i])
        i++;
    if(i == n)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}

char s[1001];
char m[1001][1001];

int main()
{
    int n;
    cin.getline(s, 101);
    cin >> n;
    int i = 0;
    int j = 0;
    int cnt = 1;
    while(s[i])
    {
        if(s[i] == ' ' &amp;&amp; (s[i+1]!=' ' || s[i+1]!='\0'))
        {
            j = 0;
            cnt++;
        }
        else
        {
            m[cnt][j] = s[i];
            j++;
        }
        i++;
    }
    int c = 0;
    for(int i = 1; i <= cnt; ++i)
        if(sl(m[i], n))
        {
            cout << m[i] << "\n";
            c++;
        }
    if(c == 0)
        cout << "nu exista";
    return 0;
}</pre>
