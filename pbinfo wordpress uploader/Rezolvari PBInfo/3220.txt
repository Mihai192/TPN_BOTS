<p>Alina este pasionată de fotografiile alb-negru. Ea ales o imagine pe care a codificat-o binar într-o matrice de dimensiune <code>n x m</code> cu valori <code>0</code> corespunzătoare pentru alb (pe care le-a numit puncte luminoase) și cu valori <code>1</code> corespunzătoare pentru negru (pe care le-a numit puncte întunecate). Astfel, ea identifică în imaginea codificată zone luminoase și zone întunecate, o zonă fiind o porțiune a matricei care conține elemente cu aceeași valoare, trecerea de la un element la altul al zonei făcându-se doar prin deplasări pe orizontală sau pe verticală. </p>

<h1>Cerința</h1>

<p>Ajutați-o pe Alina să găsească cea mai luminoasă zonă și determinați numărul de puncte luminoase ale acesteia.</p>

<h1>Date de intrare</h1>

<p>Pe prima linie a fișierului text <code>foto.in</code> se găsesc două numere naturale <code>n</code> și <code>m</code> care reprezintă numărul liniilor, respectiv numărul coloanelor matricei. Pe următoarele <code>n</code> linii se găsesc câte <code>m</code> valori binare, separate prin câte un spațiu, reprezentând elementele matricei care codifică imaginea.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>foto.out</code> trebuie să conțină o singură linie pe care se va afla numărul punctelor din cea mai luminoasă zonă a imaginii.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100</code>, <code>1 ≤ m ≤ 100</code>, numere naturale</li>
	<li>dacă nu există nicio zonă luminoasă, se va considera că cea mai luminoasă zonă are <code>0</code> elemente</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595357778&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3220%2Ffoto&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595357777906&amp;bpp=17&amp;bdt=237&amp;idt=217&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=4499576022745&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357778&amp;ga_hid=1259338508&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1282&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=13464531480404&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3244%2Ftabla&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=1onSpJiavz&amp;p=https%3A//www.pbinfo.ro&amp;dtd=223" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNP9ou2C3-oCFcQA5godGXYHUg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>foto.in</code></p>

<pre contenteditable="true" editable="true">6 6
1 0 0 1 1 1
1 1 0 1 0 1
1 0 0 1 0 0
1 1 1 0 1 1
1 0 0 1 1 0
1 0 0 1 1 1</pre>

<p><code>foto.out</code></p>

<pre contenteditable="true" editable="true">5</pre>

<h3>Explicație</h3>

<p>Zona cea mai luminoasă este formată din elementele: <code>(1,2)</code>, <code>(1,3)</code>, <code>(2,3)</code>, <code>(3,2)</code>, <code>(3,3)</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("foto.in");
ofstream cout("foto.out");

int n, m, a[101][101], cnt;
int di[]={0,0,-1,1};
int dj[]={-1,1,0,0};

bool inmat(int i, int j){
    return i >= 1 &amp;&amp; i <= n &amp;&amp; j >= 1 &amp;&amp; j <= m;
}

void fill(int i, int j){
    cnt++;
    a[i][j] = 1;
    for(int d = 0; d <= 3; ++d){
        int ii = i + di[d];
        int jj = j + dj[d];
        if(inmat(ii, jj) &amp;&amp; a[ii][jj] == 0)
            fill(ii, jj);
    }
}

int main(){
    int max = 0;
    cin >> n >> m;
    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
            cin >> a[i][j];
    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
            if(a[i][j] == 0){
                cnt=0;
                fill(i, j);
                if(cnt > max)
                    max = cnt;
            }
    cout << max;
    return 0;
}</pre>
