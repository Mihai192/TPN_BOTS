<h1>Cerința</h1>

<p>Se dă un număr natural <code>n</code>. Să se genereze o matrice pătratică de ordinul <code>3</code><sup><code>n</code></sup>, cu elemente din mulțimea <code>{0, 1}</code>, după modelul covorului lui Sierpinski.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>sierpinski.in</code> conține pe prima linie numărul <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>sierpinski.out</code> va conține pe primele <code>3</code><sup><code>n</code></sup> linii câte <code>3</code><sup><code>n</code></sup> cifre binare, reprezentând elementele matricei.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 6</code></li>
	<li>Atenție la limita de memorie!</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357937&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2082%2Fsierpinski&amp;flash=0&amp;wgl=1&amp;dt=1595357937756&amp;bpp=18&amp;bdt=229&amp;idt=161&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2993678771713&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357938&amp;ga_hid=1789021696&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1022&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066429&amp;oid=3&amp;pvsid=3813130380751817&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1809%2Fpowerrec&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=1MilwBelOB&amp;p=https%3A//www.pbinfo.ro&amp;dtd=169" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLL2u7mD3-oCFdyNsgoddwIPPw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>sierpinski.in</code></p>

<pre contenteditable="true" editable="true">2</pre>

<p><code>sierpinski.out</code></p>

<pre contenteditable="true" editable="true">0 0 0 0 0 0 0 0 0 
0 1 0 0 1 0 0 1 0 
0 0 0 0 0 0 0 0 0 
0 0 0 1 1 1 0 0 0 
0 1 0 1 1 1 0 1 0 
0 0 0 1 1 1 0 0 0 
0 0 0 0 0 0 0 0 0 
0 1 0 0 1 0 0 1 0 
0 0 0 0 0 0 0 0 0 </pre>

<h3>Explicație</h3>

<p></p><center><img src="https://www.pbinfo.ro/resurse/1848d2/covor.png" alt="Covorul lui Sierpinski" width="100%"></center><p></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
using namespace std;

ifstream fin("sierpinski.in");
ofstream fout("sierpinski.out");

int n;
char a[729][92]; 

bool get(int x, int y)
{
    char mask = (1 << (8 - y % 8 - 1));
    return a[x][y / 8] &amp; mask;
}

void set(int x, int y, bool val)
{
    if(get(x, y) != val)
    {
        char mask = (1 << (8 - y % 8 - 1));
        a[x][y / 8] ^= mask;
    }
}

void sierpinski(int x, int y, int l)
{
    
    for(int i = 0; i < l / 3; i++)
        for(int j = 0; j < l / 3; j++)
            set(x + l / 3 + i, y + l / 3 + j, 1);
    if(l > 1)
    {
        sierpinski(x, y, l / 3);
        sierpinski(x, y + l / 3, l / 3);
        sierpinski(x, y + 2 * l / 3, l / 3);
        sierpinski(x + l / 3, y, l / 3);
        sierpinski(x + l / 3, y + 2 * l / 3, l / 3);
        sierpinski(x + 2 * l / 3, y, l / 3);
        sierpinski(x + 2 * l / 3, y + l / 3, l / 3);
        sierpinski(x + 2 * l / 3, y + 2 * l / 3, l / 3);
    }
}

void afisare(int l)
{
    for(int i = 0; i < l; i++)
    {
        for(int j = 0; j < l; j++)
            fout<<get(i, j)<<' ';
        fout<<'\n';
    }
}

int main ()
{
    fin>>n;
    sierpinski(0, 0, pow(3, n));
    afisare(pow(3, n));
}</pre>
