<h1>Cerința</h1>

<p>Se dă o matrice binară (valori <code>0</code> și <code>1</code>). Să se determine care este latura maximă a unui pătrat cu proprietatea că acesta are pe marginea sa doar valori <code>1</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>lsq.in</code> conține pe prima linie numerele <code>N</code> și <code>M</code>, reprezentând numărul de linii și numărul de coloane ale matricei, apoi <code>N</code> linii, pe fiecare câte <code>M</code> valori <code>0</code> sau <code>1</code>, neseparate prin niciun spațiu, reprezentând elementele matricei..</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>lsq.out</code> va conține pe prima linie numărul <code>L</code>, reprezentând lungimea maximă a laturii unui pătrat ce conține doar <code>1</code> pe marginea sa.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N, M ≤ 1000</code></li>
	<li>Se consideră pătrat și cel de latură <code>1</code> (conține doar un element).</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595353244&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2724%2Flsq&amp;flash=0&amp;wgl=1&amp;dt=1595353243853&amp;bpp=13&amp;bdt=217&amp;idt=152&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=7364466078444&amp;frm=20&amp;pv=1&amp;ga_vid=1744050990.1595352838&amp;ga_sid=1595353244&amp;ga_hid=1266739344&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=814&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=647&amp;scr_x=0&amp;scr_y=0&amp;eid=21065755&amp;oid=3&amp;pvsid=131218843623416&amp;pem=168&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1124%2Fpatrate&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C770%2C1200%2C647&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=8bp2ZezVBM&amp;p=https%3A//www.pbinfo.ro&amp;dtd=157" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJzcnvvx3uoCFUGVGAodlJMOBg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>lsq.in</code></p>

<pre contenteditable="true" editable="true">7 7
0000000
0111100
0101111
0100101
0111111
0000011
0000011</pre>

<p><code>lsq.out</code></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p><br>
0 0 0 0 0 0 0<br>
0 <strong>1 1 1 1</strong> 0 0<br>
0 <strong>1</strong> 0 1 <strong>1</strong> 1 1<br>
0 <strong>1</strong> 0 0 <strong>1</strong> 0 1<br>
0 <strong>1 1 1 1</strong> 1 1<br>
0 0 0 0 0 1 1<br>
0 0 0 0 0 1 1</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("lsq.in");
ofstream cout("lsq.out");

int nord[1002][1002] , vest[1002][1002] , n , m , lmax;
char a[1002][1002];

int main()
{
    cin >> n >> m;
    for(int i = 1 ; i <= n ; i++)
        for(int j = 1 ; j <= m ; j++)
        {
            cin >> a[i][j];
            if(a[i][j] == '1')
            {
                nord[i][j] = a[i][j] - '0' + nord[i-1][j];
                vest[i][j] = a[i][j] - '0' + vest[i][j-1];
            }
        }
    for(int i = 1 ; i <= n ; i++)
        for(int j = 1 ; j <= m ; j++)
            for(int k = max(lmax , 1) ; k <= m - j + 1 &amp;&amp; k <= n - i + 1; k++)
            if(vest[i][j + k - 1] - vest[i][j] + 1 == k &amp;&amp; vest[i + k - 1][j + k - 1] - vest[i + k - 1][j] + 1 == k &amp;&amp; ///sus si jos
               nord[i + k - 1][j] - nord[i][j] + 1 == k &amp;&amp; nord[i + k - 1][j + k - 1] - nord[i][j + k - 1] + 1 == k)///stanga si dreapta
                if(k > lmax) lmax = k;

    cout << lmax;
}</pre>
