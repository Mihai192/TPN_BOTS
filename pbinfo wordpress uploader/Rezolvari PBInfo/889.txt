<h1>Cerința</h1>

<p>Se dau două propoziții formate din litere mari și mici ale alfabetului englez și spații. Să se afișeze în ordine alfabetică cuvintele care apar în ambele șiruri.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură cele două propoziții, separate printr-un caracter <code>newline</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran cuvintele comune, scrise cu litere mici, fiecare pe o linie, în ordine alfabetică.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>șirurile date au cel mult <code>255</code> de caractere</li>
	<li>nu se face distincție între literele mari și cele mici</li>
	<li>dacă un cuvânt comun apare de mai multe ori, se va afișa o singură dată</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357175&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F889%2Fcuvintecomune&amp;flash=0&amp;wgl=1&amp;dt=1595357175625&amp;bpp=17&amp;bdt=196&amp;idt=148&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=7584979329326&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357176&amp;ga_hid=1680990504&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1022&amp;biw=1200&amp;bih=693&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358%2C21066429&amp;oid=3&amp;pvsid=549002813401767&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1454%2Fpermutarecuvant&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C693&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=RWadg0mEiQ&amp;p=https%3A//www.pbinfo.ro&amp;dtd=154" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKXphc6A3-oCFUbxsgod2LkHDw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">Ana si Maria au mere si nuci
ana are MERE si Pere si prune</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">ana
mere
si</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cstring>
using namespace std;

char a[200][200] , b[200][200] , r[200][200] , p;

bool egale(int i , int j)
{
    bool ok = true;
    for(int k = 0 ; k < max(strlen(a[i]) , strlen(b[j])) ; ++k)
        if(tolower(a[i][k])!=tolower(b[j][k]))
            ok=false;
    return ok;
}

int main()
{
    char s[300];
    cin.getline(s , 300);
    int i = 0 , j = 0 , cnt = 0;
    while(s[i]!='\0')
        i++;
    s[i]=' ';
    s[i+1]='\0';
    i=0;
    while(s[i]!='\0')
    {
        if(s[i]!=' ')
        {
            a[cnt][j]=s[i];
            j++;
        }
        else
        {
            j=0;
            if(s[i+1]!=' ')
                cnt++;
        }
        i++;
    }
    int n = cnt;
    cin.getline(s , 300);
    i = 0 , j = 0 ; cnt = 0;
    while(s[i]!='\0')
        i++;
    s[i]=' ';
    s[i+1]='\0';
    i=0;
    while(s[i]!='\0')
    {
        if(s[i]!=' ')
        {
            b[cnt][j]=s[i];
            j++;
        }
        else
            cnt++ , j=0;
        i++;
    }
    int m = cnt;
    cnt=0;
    for(int i = 0 ; i < n ; ++i)
    {
        for(int j = 0 ; j < m ; ++j)
        {
            if(egale(i , j))
            {
                int q = 0;
                while(a[i][q]!='\0')
                {
                    r[p][q]=tolower(a[i][q]);
                    q++;
                }
                p++;
            }
        }
    }
    for(int i = 0 ; i < p ; ++i)
    {
        for(int j = i + 1 ; j < p ; ++j)
        {
            if(strcmp(r[i] , r[j]) > 0)
                swap(r[i] , r[j]);
        }
    }
    for(int i = 0 ; i < p ; ++i)
    {
        for(int j = i + 1 ; j < p ; ++j)
        {
            if(strcmp(r[i] , r[j]) == 0)
                r[j][0]='\0';
        }
    }
    for(int i = 0 ; i < p ; ++i)
    {
        if(r[i][0]!='\0')
            cout << r[i] << endl;
    }
    return 0;
}</pre>
