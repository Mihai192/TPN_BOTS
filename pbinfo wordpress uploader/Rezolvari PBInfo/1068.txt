<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
using namespace std;

ifstream cin("suma5.in");
ofstream cout("suma5.out");

int n , m[62][62][62] , sum , aux[62][62][62] , cnt , mini , x , y;

int main()
{
    cin >> n;
    while(sum < n) cnt++ , sum += cnt * cnt;
    cout <<  cnt << " ";
    int i = 1 , j = 1 , k = 1 , p;
    for(int x = 1 ; x <= n ; x++)
    {
        cin >> p;
        m[i][j][k] = p;
        aux[i][j][k] = x;
        if(i == j &amp;&amp; i == k) i++ , j = 1 , k = 1;
        else if(k == i) j++ , k = 1;
        else k++;
    }
    for(int i = cnt - 1 ; i >= 1 ; i--)
        for(int j = 1 ; j <= i ; j++)
            for(int k = 1 ; k <= i ; k++)
                m[i][j][k] = m[i][j][k] + min(m[i + 1][j][k] , min(m[i + 1][j + 1][k] , min(m[i + 1][j][k + 1] , m[i + 1][j + 1][k + 1])));

    cout << m[1][1][1] << endl;
    j = 1 , k = 1;
    for(int i = 1 ; i <= cnt ; i++)
    {
        cout << aux[i][j][k] << " ";
        int ok = 0;
        x = j , y = k , mini = m[i + 1][j][k];
        if(m[i + 1][j][k + 1] < mini) mini = m[i + 1][j][k + 1] , ok = 1;
        if(m[i + 1][j + 1][k] < mini) mini = m[i + 1][j + 1][k] , ok = 2;
        if(m[i + 1][j + 1][k + 1] < mini) mini = m[i + 1][j + 1][k + 1] , ok = 3;
        if(ok == 1) y = k + 1;
        if(ok == 2) x = j + 1;
        if(ok == 3) y = k + 1 , x = j + 1;
        j = x , k = y;
    }

}</pre>
