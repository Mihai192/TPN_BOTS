<h1>Cerința</h1>

<p>Lui Cristian, ca oricărui alt copil, îi plac bomboanele. A primit cadou de la prietenii lui cutii cu bomboane. Fiind multe cutii le-a numerotat: <code>1</code>, <code>2</code>, <code>3</code>, … Desfăcând câteva, a văzut că există o legătură între numărul de pe etichetă și numărul de bomboane din cutie. Astfel în fiecare cutie sunt atâtea bomboane câți divizori pari are numărul de pe cutie. De exemplu cutia cu numărul <code>10</code> conține <code>2</code> bomboane, cutia cu numărul <code>8</code> conține <code>3</code> bomboane ș.a.m.d. </p>

<p>Cristian a ales la întâmplare două etichete <code>x</code> și <code>y</code> dorind să desfacă toate cutiile cu etichete cuprinse între <code>x</code> și <code>y</code>. Ajutați-l să determine prima cutie, etichetată cu <code>a</code>, și utima cutie, etichetată cu <code>b</code>, cu număr maxim de bomboane  (<code>x≤a≤b≤y</code>), câte cutii <code>n</code> sunt cu acest număr de bomboane și care este acest număr <code>d</code> de bomboane.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>bomboane1.in</code> conține pe prima linie numerele naturale nenule <code>x</code> și <code>y</code> separate prin câte un spațiu.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>bomboane1.out</code> va conține o singură linie pe care vor fi scrise cele patru valori determinate, în ordinea din cerință (<code>a b n d</code>), separate prin câte un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ x ≤ a ≤ b ≤ y ≤ 1.000.000.000</code></li>
	<li><code>y - x ≤ 1000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595358883&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1595%2Fbomboane1&amp;flash=0&amp;wgl=1&amp;dt=1595358883793&amp;bpp=11&amp;bdt=223&amp;idt=142&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=6917165155725&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595358884&amp;ga_hid=2039677780&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1332&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358%2C21066393&amp;oid=3&amp;pvsid=1086906212349939&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2037%2Fgrea&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=XiZXZkK8sH&amp;p=https%3A//www.pbinfo.ro&amp;dtd=147" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COOLyPyG3-oCFcbxsgodMwoItg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>bomboane1.in</code></p>

<pre contenteditable="true" editable="true">10 20</pre>

<p><code>bomboane1.out</code></p>

<pre contenteditable="true" editable="true">12 20 3 4</pre>

<h3>Explicație</h3>

<p>Dacă parcurgem toate numerele de la <code>10</code> la <code>20</code> constatăm că numărul maxim de divizori pari este <code>4</code> obținut la  numerele <code>12</code>, <code>16</code> şi <code>20</code> (<code>3</code> numere).</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("bomboane1.in");
ofstream cout("bomboane1.out");

int nrdiv(int n)
{
    int cnt=0;
    for(int i = 2 ; i * i <= n ; ++i)
    {
        if(n%i==0)
        {
            if(i%2==0)
                cnt++;
            if((n/i)%2==0)
                cnt++;
        }
        if(i*i==n &amp;&amp; i%2==0)
            cnt--;
    }
    if(n%2==0)
        cnt++;
    return cnt;
}

int main()
{
    int a , b;
    cin >> a >> b;
    int max=0;
    if(a%2!=0)
        a++;
    if(a%4!=0)
        a+=2;
    for(int i = a ; i <= b ; i+=4)
    {
        if(nrdiv(i) > max)
            max=nrdiv(i);
    }
    int ok=0;
    int rez1=0 , rez2=0 , cnt=0;
    for(int i = a ; i <= b ; i+=4)
    {
        if(nrdiv(i)==max &amp;&amp; ok==0)
            rez1=i , ok++;
        if(nrdiv(i)==max)
            rez2=i , cnt++;
    }
    cout << rez1 << ' ' << rez2 << ' ' << cnt << ' ' << max;
    return 0;
}</pre>
