<p>Factorialul unui număr natural nenul <code>n</code>, notat <code>n!</code>, se defineşte ca fiind produsul numerelor naturale de la <code>1</code> la <code>n</code>. Una dintre modalităţile de reprezentare a factorialului este prin enumerarea factorilor primi pe care îi conţine şi a exponenţilor acestora.</p>

<h1>Cerința</h1>

<p>Fiind dat un număr natural <code>n</code>, scrieţi un program care determină suma exponenţilor factorilor primi corespunzători descompunerii în factori primi a lui <code>n</code> factorial.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>factorial3.in</code> conţine pe prima linie numărul natural <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Fişierul de ieşire <code>factorial3.out</code> va conţine pe prima linie un număr reprezentând suma exponenţilor numerelor prime din descompunerea în factori primi a lui <code>n!</code>.</p>

<h1>Restricții și precizări</h1>

<p>• <code>2 ≤ n ≤ 100000</code></p>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595360514&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2104%2Ffactorial3&amp;flash=0&amp;wgl=1&amp;dt=1595360513997&amp;bpp=10&amp;bdt=211&amp;idt=150&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2604236133274&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360514&amp;ga_hid=1485603142&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1212&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1767535714020719&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2105%2Fmoretime&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=Nnz0L4XYwE&amp;p=https%3A//www.pbinfo.ro&amp;dtd=158" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CI_J8YWN3-oCFUXXuwgdT7MCQg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>factorial3.in</code></p>

<pre contenteditable="true" editable="true">5</pre>

<p><code>factorial3.out</code></p>

<pre contenteditable="true" editable="true">5</pre>

<h3>Explicație</h3>

<p><code>5! = 1*2*3*4*5 = 2</code><sup><code>3</code></sup> <code>* 3</code><sup><code>1</code></sup> <code>* 5</code><sup><code>1</code></sup><br>
<code>3+1+1=5</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("factorial3.in");
ofstream cout("factorial3.out");
int main()
{
    int n , s = 0 , f[100005]={0};
    cin >> n;
    for(int i = 1 ; i <= n ; ++i)
    {
        int d = 2 , x=i;
        while(x > 1)
        {
            int p = 0;
            while(x%d==0) p++, x/=d;
            if(p) f[d]+=p;
            d++;
            if(d*d>x) d=x;
        }
    }
    for(int i = 1 ; i <=n ; ++i)
        s+=f[i];
    cout << s;
}</pre>
