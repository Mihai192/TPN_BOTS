<h1>Cerința</h1>

<p>Se consideră <code>n</code> intervale de numere întregi <code>[A</code><sub><code>i</code></sub>, <code>B</code><sub><code>i</code></sub><code>]</code>, <code>1≤i≤n</code>. Să se determine numărul maxim de intervale care se <strong>suprapun</strong> (<em>au cel puțin o valoare comună</em>).</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>nrmaxinterv.in</code> conține pe prima linie un numărul natural <code>n</code>. Pe următoarele <code>n</code> linii sunt descrise cele <code>n</code> intervale, câte un interval pe linie. Pentru fiecare interval <code>i</code> sunt specificate capetele sale <code>A</code><sub><code>i</code></sub> și <code>B</code><sub><code>i</code></sub>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>nrmaxinterv.out</code> conține pe prima linie numărul natural <code>NR</code>, ce reprezintă numărul maxim de intervale care se suprapun.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100.000</code></li>
	<li><code>-1.000.000.000 ≤ A</code><sub><code>i</code></sub> <code>&lt; B</code><sub><code>i</code></sub> <code>≤ 1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361822&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2126%2Fnrmaxinterv&amp;flash=0&amp;wgl=1&amp;dt=1595361822759&amp;bpp=24&amp;bdt=260&amp;idt=153&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=866577464024&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361823&amp;ga_hid=1681190335&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066392&amp;oid=3&amp;pvsid=2523323199880816&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2F%3Fpagina%3Dprobleme-cautare%26what%3D533-2%26denumire%3Don&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=RVwwooXh0O&amp;p=https%3A//www.pbinfo.ro&amp;dtd=159" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNjh9_WR3-oCFdHGuwgdOaIEUg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>nrmaxinterv.in</code></p>

<pre contenteditable="true" editable="true">5
1 4
0 3
8 12
5 9
5 11</pre>

<p><code>nrmaxinterv.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h3>Explicație</h3>

<p><img alt="" src="https://www.pbinfo.ro/resurse/d7bfda/nrmaxinterv.jpg"></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("nrmaxinterv.in");
ofstream cout("nrmaxinterv.out");

int a[100001] , b[100001];

int main()
{
    int n;
    cin >> n;
    for(int i = 1 ; i <= n ; ++i)
        cin >> a[i] >> b[i];
    sort(a+1 , a+n+1);
    sort(b+1 , b+n+1);
    int i = 1 , j = 1;
    int cntmax=0 , cnt=0;
    while(i <= n &amp;&amp; j <= n)
    {
        if(a[i]<=b[j])
        {
            i++ , cnt++;
            if(cnt > cntmax)
                cntmax=cnt;
        }
        else
            j++ , cnt--;
    }
    cout << cntmax;
    return 0;
}</pre>
