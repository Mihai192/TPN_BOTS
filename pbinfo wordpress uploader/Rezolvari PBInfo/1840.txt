<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale, fie acestea <code>A</code><sub><code>1</code></sub><code>, A</code><sub><code>2</code></sub><code>,..., A</code><sub><code>n</code></sub> și <code>X</code><sub><code>i</code></sub> cel mai mic număr care are aceiași factori primi in descompunere ca şi <code>A</code><sub><code>i</code></sub>, unde <code>1≤i≤n</code>. Aflați produsul <code>X</code><sub><code>1</code></sub><code> * X</code><sub><code>2</code></sub><code> *...* X</code><sub><code>n</code></sub>.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere naturale, separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul <code>P</code>, reprezentand numărul cerut.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595360641&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1840%2Fpmax&amp;flash=0&amp;wgl=1&amp;dt=1595360641152&amp;bpp=23&amp;bdt=177&amp;idt=150&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5156000354354&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360641&amp;ga_hid=2047934711&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1088&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=896133875936305&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F261%2Fintervale&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=n46UAhC2iR&amp;p=https%3A//www.pbinfo.ro&amp;dtd=157" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CL_5wsKN3-oCFQPwsgodKwQLVg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">2
45 20</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">150</pre>

<h3>Explicație</h3>

<p><code>45 = 5 * 3 * 3,  20 = 2 * 2 * 5</code>. Cel mai mic număr care are factorii <code>3</code> și <code>5</code> in descompunere este <code>15</code>, iar cu factorii <code>2</code> și <code>5</code> este <code>10</code>. <br>
<code>15 * 10 = 150</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;
int a[1001] , v[1001] , b[10001];
int mic(int n)
{
    int prod = 1 , d = 2;
    while(n > 1)
    {
        int p = 0;
        while(n%d==0) p++ , n/=d;
        if(p > 0) prod*=d;
        d++;
        if(d * d > n) d = n;
    }
    return prod;
}
int main()
{
    int n;
    cin >> n;
    for(int i = 0 ; i < n ; ++i)
        cin >> a[i];
    for(int i = 0 ; i < n ; ++i)
        v[i]=mic(a[i]);
    b[1]=1;
    int c=1;
    for(int i=0; i<n; i++)
    {
        int t=0;
        for(int j=1; j<=c; j++)
        {
            int cif=b[j]*v[i]+t;
            b[j] = cif % 10;
            t=cif/10;
        }
        while(t)
        {
            b[++c]=t%10;
            t/=10;
        }
    }
    for(int i = c ; i >= 1 ; --i)
        cout << b[i];
    return 0;
}</pre>
