<h1>Cerința</h1>

<p>La grădinița Prichindel sunt copii cuminți și copii obraznici. Moș Crăciun a adus cadouri doar pentru câțiva copii cuminți. Problema este că nu se știe exact care copil e obraznic și care este cuminte. Ajutați-o pe doamna educatoare să afle care copil primește cadou și care nu. Se cunoaște faptul că la grădiniță sunt exact <code>n</code> copii și fiecare copil are inscripționat pe uniformă un  număr natural nenul, distinct.</p>

<p>În prima etapă, sunt scoși din lista Moșului copiii obraznici care sunt cei ce au inscripționate pe uniformă numere prime. În a două etapă, din copiii rămași, sunt scoși și cei care au suma cifrelor de pe pozițiile impare egală cu un număr prim (cifrele se numerotează de la stânga la dreapta, începând cu poziția <code>1</code>, corespunzătoare cifrei cea mai semnificative).</p>

<p>În a treia etapă (ultima), se &nbsp;elimină din lista copiilor cuminți rămași după primele două etape, din <code>k</code> în <code>k</code> până când se ajunge la capătul listei. </p>

<p>Să se determine copiii care au rămas pe lista copiilor cuminți după toate cele trei etape eliminatorii, sau mesajul <code>Toti copiii sunt obraznici!</code>, dacă toți copiii au fost eliminați.</p>

<h1>Date de intrare</h1>

<p>Pe prima linie a fișierului de intrare <code>gradinita.in</code> se află două numere <code>n</code> și <code>k</code> cu semnificația din enunț.&nbsp; Pe a două linie a fișierului de intrare se află <code>n</code> numere naturale, cu semnificația din enunț.</p>

<h1>Date de ieșire</h1>

<p>În fișierul de ieșire <code>gradinita.out</code> se va afișa lista după a treia etapă eliminatorie conform valorii cerinței.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100000</code></li>
	<li><code>1 ≤ x ≤ 100000</code> (unde <code>x</code> reprezintă numărul inscripționat pe uniforma unui copil)</li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>gradinita.in</code></p>

<pre contenteditable="true" editable="true">9 4
3 102 31 333 46 1022 10 4848 21 </pre>

<p><code>gradinita.out</code></p>

<pre contenteditable="true" editable="true">333 46 10  </pre>

<h1>Exemplul 2:</h1>

<p><code>gradinita.in</code></p>

<pre contenteditable="true" editable="true">8 4 
3 102 31 334 43 1022 13  21</pre>

<p><code>gradinita.out</code></p>

<pre contenteditable="true" editable="true">Toti copiii sunt obraznici!</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("gradinita.in");
ofstream cout("gradinita.out");

int n , a[100001] , x , cnt , t;

int prim(int n)
{
    if(n == 0 || n == 1) return 0;
    if(n == 2) return 1;
    if(n % 2 == 0) return 0;
    for(int i = 3 ; i * i <= n ; i += 2) if(n % i == 0) return 0;
    return 1;
}
int nrcif(int n)
{
    int c = 0;
    while(n != 0)
    {
        c++;
        n /= 10;
    }
    return c;
}

int sumcifimp(int n)
{
    if(nrcif(n) % 2 == 0)
        n /= 10;
    int sum = 0;
    while(n != 0)
    {
        sum += n % 10;
        n /= 100;
    }
    return sum;
}

int main()
{
    cin >> n >> t;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> x;
        if(!prim(x) &amp;&amp; !prim(sumcifimp(x))) a[++cnt] = x;
    }
    if(cnt != 0)
    {
        for(int i = 1 ; i <= cnt ; i++)
            if(i % t != 0) cout << a[i] << " ";
    }
    if(cnt == 0 || t == 1) cout << "Toti copiii sunt obraznici!";
}</pre>
