<h1>Cerința</h1>

<p>Se consideră un şir format din <code>n</code> numere întregi. Șirul conține cel puțin un număr pozitiv. Să se determine lungimea maximă a unei secvenţe din şir care are proprietatea că este formată doar din valori strict pozitive.  </p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>platou3.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere întregi separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>platou3.out</code> va conține pe prima linie numărul <code>k</code>, reprezentând lungimea maximă a secvenței determinate.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi din intervalul <code>[-99,99]</code></li>
	<li>O secvenţă a unui şir constă în elemente aflate pe poziţii consecutive în şirul considerat.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595362755&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1880%2Fplatou3&amp;flash=0&amp;wgl=1&amp;dt=1595362755065&amp;bpp=17&amp;bdt=163&amp;idt=150&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=3985389596720&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595362755&amp;ga_hid=1932802183&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066624%2C21066717&amp;oid=3&amp;pvsid=1317633566781833&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1881%2Fplatou4&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=0gp3TJXIH6&amp;p=https%3A//www.pbinfo.ro&amp;dtd=157" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKnNv7KV3-oCFYRCkQUdt7gAAA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>platou3.in</code></p>

<pre contenteditable="true" editable="true">10                          
7 -22 -13 10 31 41 -6 2 10 8</pre>

<p><code>platou3.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h3>Explicație</h3>

<p>În fișierul de intrare, secvențele de lungime maximă (<code>k=3</code>) sunt:  <code>10 31 41</code> și <code>2 10 8</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream fin("platou3.in");
ofstream fout("platou3.out");

int main()
{
    int n;
    fin >> n;
    int a[1000];
    int l = 0 , lmax=0;
    a[0]=-1;
    for(int i = 1 ; i <= n ; ++i)
    fin >> a[i];
    for(int i = 1 ; i <= n ; ++i)
    {
        if(a[i]>0 &amp;&amp; a[i-1]>0)
        {
        l++;
        if(l>lmax)
        lmax=l;
        }
        else
        l=0;
    }
    fout << lmax+1;
    return 0;
}</pre>
