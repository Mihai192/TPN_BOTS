<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale. Să se determine cel mai mare număr perfect mai mic sau egal cu <code>8128</code> care poate fi scris ca produs al unora dintre numerele date. Un număr natural este perfect dacă dublul său este egal cu suma divizorilor săi.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>perfect1.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>perfect1.out</code> va conține pe prima linie numărul <code>S</code>, reprezentând cel mai mare număr perfect care poate fi scris ca produs al unora dintre numerele de pe a doua linie a fișierului de intrare sau mesajul <code>NU</code> dacă nu se nu există un asemenea număr.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare și numerele perfecte determinate vor fi mai mici decât <code>8128</code></li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>perfect1.in</code></p>

<pre contenteditable="true" editable="true">7
2 7 9 2 2 31 2</pre>

<p><code>perfect1.out</code></p>

<pre contenteditable="true" editable="true">496</pre>

<h3>Explicație</h3>

<p>înmultind <code>2*2*2*31*2</code> obținem numărul <code>496</code> .</p>

<h1>Exemplul 2:</h1>

<p><code>perfect1.in</code></p>

<pre contenteditable="true" editable="true">6
2 31 127 2 2 5</pre>

<p><code>perfect1.out</code></p>

<pre contenteditable="true" editable="true">NU</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("perfect1.in");
ofstream cout("perfect1.out");

int n , A[101] , m , maxi , X[101] , x , ok;

void back(int k, long long p)
{
    for(int i = X[k - 1] + 1 ; i <= m ; i++)
    {
        X[k] = i;
        p *= A[X[k]];
        if(p <= 8128)
            if(p == 6 || p == 28 || p == 496 || p == 8128)
            {
                ok = 1;
                if(p > maxi) maxi = p;
            }
            else back(k + 1 , p);
        p /= A[X[k]];
    }
}

int main()
{
    cin >> n;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> x;
        if(8128 % x == 0 || 496 % x == 0 || 28 % x == 0 || 6 % x == 0) A[++m] = x;
    }
    sort(A + 1 , A + m + 1);
    reverse(A + 1 , A + m + 1);
    back(1 , 1);
    if(ok == 0) cout << "NU";
    else  cout << maxi;
    return 0;
}</pre>
