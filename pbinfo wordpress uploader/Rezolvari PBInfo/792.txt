<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("binefrunze1.in");
ofstream cout("binefrunze1.out");

int n, rez[50001], c, v[200001], cc;
bool ok = false;

void citire(int nod, int val){
    int x;
    cin >> x;
    v[++cc] = x;
    if(nod % 2 == 0){
        if(x == 0)
            ok = true;
        else
            ok = false;
    }
    else{
        if(x == 0 &amp;&amp; ok){
            ok = false;
            rez[++c] = val;
        }
        else{
            ok = false;
        }
    }
    if(x){
        citire(nod * 2, x);
        citire(nod * 2 + 1, x);
    }
}

int main(){
    citire(1, 0);
    sort(rez + 1, rez + c + 1);
    sort(v + 1, v + cc + 1);
    int j = c;
    for(int i = cc; i >= 1; --i){
        if(v[i] != rez[j] &amp;&amp; v[i] != 0)
            cout << v[i] << ' ';
        else if(v[i] != 0)
            j--;
    }
    return 0;
}</pre>
