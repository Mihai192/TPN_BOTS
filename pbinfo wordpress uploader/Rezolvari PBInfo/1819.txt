<p>Pe un teren dreptunghiular de dimensiuni <code>m</code> şi <code>n</code>, din loc în loc sunt plantaţi copaci. Pentru fiecare copac se cunosc rândul şi coloana pe care este plantat, între ei fiind spaţii neplantate. Doi copaci se consideră consecutivi dacă mergând pe coloane, numai de la nord către sud, între ei sunt doar spaţii neplantate.</p>

<h1>Cerința</h1>

<p>Să se determine cea mai mare distanţă dintre doi copaci consecutivi şi toate perechile de copaci între care există această distanţă.</p>

<h1>Date de intrare</h1>

<p>Fişierul <code>copaci.in</code> conţine pe prima linie, <code>m</code>, <code>n</code> si <code>k</code> (<code>m</code> numărul de randuri, <code>n</code> numărul de coloane şi <code>k</code> numărul de copaci), separate prin cate un spaţiu; pe fiecare dintre următoarele <code>k</code> linii, câte o pereche de numere <code>x</code>, <code>y</code> (separate prin cate un spaţiu) reprezentând rândul, respectiv coloana pe care se află un copac.</p>

<h1>Date de ieșire</h1>

<p>Fişierul <code>copaci.out</code> va conţine pe prima linie distanţa maximă dintre doi copaci consecutivi, iar pe fiecare dintre următoarele linii câte patru numere întregi <code>x1, y1, x2, y2</code> (separate prin cate un spaţiu), reprezentând coordonatele (rândul şi coloana) a doi copaci consecutivi între care distanţa este maximă.</p>

<h1>Observaţii</h1>

<ul>
	<li>Distanţa dintre dintre doi copaci consecutivi este dată de numărul de spaţii neplantate dintre ei.</li>
	<li>Dacă sunt mai multe perechi de copaci între care distanţa este maximă acestea se vor afişa în ordinea crescătoare a numărului de coloană.</li>
</ul>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 &lt; m,n ≤ 500</code></li>
	<li><code>2 ≤ k ≤ 10000</code></li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>copaci.in</code></p>

<pre contenteditable="true" editable="true">3 4 2
2 4
3 4</pre>

<p><code>copaci.out</code></p>

<pre contenteditable="true" editable="true">0
2 4 3 4</pre>

<h3>Explicație</h3>

<p>Sunt <code>2</code> copaci plantaţi pe coloana a 4-a şi între ei nu se află nici un spaţiu neplantat.</p>

<h1>Exemplul 2:</h1>

<p><code>copaci.in</code></p>

<pre contenteditable="true" editable="true">6 7 7
1 1
1 4
2 6
3 3
4 2
5 4
6 3</pre>

<p><code>copaci.out</code></p>

<pre contenteditable="true" editable="true">8
1 1 4 2
5 4 2 6</pre>

<h3>Explicație</h3>

<p>Sunt <code>7</code> copaci. Distanţa maximă între <code>2</code> copaci consecutivi este egală cu <code>8</code>.<br>
Sunt <code>2</code> perechi de copaci care se află la această distanţă. Prima pereche are copacii pe coloanele <code>1</code> respectiv <code>2</code>, a doua pereche are copacii pe coloanele <code>4</code> respectiv <code>6</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("copaci.in");
ofstream cout("copaci.out");
bool a[501][501];
int main()
{
    int n , m , p , x , y , l = 0 , lmax = -1 , st = -1;
    cin >> n >> m >> p;
    for(int i = 0 ; i < p ; ++i)
    {
        cin >> x >> y;
        a[x][y] = 1;
    }
    for(int j = 1 ; j <= m ; ++j)
        for(int i = 1 ; i <= n ; ++i)
        {
            if(a[i][j] == 1)
            {
                if(l > lmax &amp;&amp; st != -1) lmax = l;
                st = a[i][j];
                l = 0;
            }
            if(a[i][j] == 0)l++;
        }
    st=-1;
    cout << lmax << endl;
    int dr = 0;
    for(int j = 1 ; j <= m ; ++j)
        for(int i = 1 ; i <= n ; ++i)
        {
            if(a[i][j]==1)
            {
                if(l == lmax &amp;&amp; st != -1)
                    cout << dr << ' ' << st << ' ' << i << ' ' << j << endl;
                st = j , dr = i;
                l = 0;
            }
            if(a[i][j]==0) l++;
        }
    return 0;
}</pre>
