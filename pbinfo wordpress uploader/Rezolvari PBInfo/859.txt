<p>Spunem că două cuvinte rimează dacă se termină cu consoană și începând de la ultima vocală sunt identice sau se termină cu vocală și începând de la penultima vocală sunt identice. De exemplu: <code>concret</code> rimează cu <code>parchet</code> (cazul <code>1</code>), iar <code>lopata</code> rimează cu <code>bucata</code> (cazul <code>2</code>).</p>

<h1>Cerința</h1>

<p>Se dă o mulțime cu <code>n</code> cuvinte distincte. Să se împartă în submulțimi de cuvinte cu proprietatea că oricare două cuvinte din aceeași submulțime rimează și oricare două cuvinte care rimează sunt în aceeași submulțime.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>rime.in</code> conține pe prima linie numărul <code>n</code>, iar pe următoarele linii cele <code>n</code> cuvinte. Este posibil să existe mai multe cuvinte pe aceeași linie (caz în care cuvintele sunt separate prin spațiu, virgula (<code>,</code>) sau punct virgula (<code>;</code>) )</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>rime.out</code> va conține pe prima linie numărul <code>C</code> de mulțimi determinate.<br>
Următoarele <code>C</code> linii conțin câte o mulțime. Cuvintele din aceeași mulțime sunt ordonate lexicografic și separate prin exact un spațiu, iar mulțimile sunt date în ordine lexicografică după primul cuvânt.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 500</code>;</li>
	<li>cuvintele sunt format din cel mult <code>20</code> de litere din alfabetul englez;</li>
	<li>toate liniile din fișierul de intrare conțin cel mult <code>255</code> caractere.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356923&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F859%2Frime&amp;flash=0&amp;wgl=1&amp;dt=1595356923007&amp;bpp=18&amp;bdt=206&amp;idt=152&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2802801025455&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356923&amp;ga_hid=153804405&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1176&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358&amp;oid=3&amp;pvsid=1447991574618223&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F861%2Fdublare&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=56d6oPWbtD&amp;p=https%3A//www.pbinfo.ro&amp;dtd=158" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLfpy9X_3uoCFVJBkQUdiZ0MOw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>rime.in</code></p>

<pre contenteditable="true" editable="true">6
lopata, baiat parchet 
concret , bucata; apret</pre>

<p><code>rime.out</code></p>

<pre contenteditable="true" editable="true">3
apret concret parchet 
baiat 
bucata lopata </pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cstring>
using namespace std;

ifstream cin("rime.in");
ofstream cout("rime.out");

char m[501][21];
char suf[501][10];

int main()
{
    int n;
    cin >> n;
    for(int i = 1 ; i <= n ; ++i)
    {
        cin >> m[i];
        int j = strlen(m[i]);
        j--;
        while(!strchr("qwertyuiopasdfghjklzxcvbnm" , m[i][j]) &amp;&amp; j >= 0)
            j--;
        if(m[i][j]<=0)
            i--;
        else
        j++ , m[i][j]='\0';
    }
    for(int i = 1 ; i < n ; ++i)
        for(int j = i+1 ; j <= n ; ++j)
            if(strcmp(m[i] , m[j]) > 0)
                swap(m[i] , m[j]);
    for(int i = 1 ; i <= n ; ++i)
    {
        int x = strlen(m[i]);
        int j = strlen(m[i]);
        j--;
        if(strchr("aeiou" , m[i][j]))
        {
            if(strlen(m[i]) > 1)
                j--;
            while(!strchr("aeiou" , m[i][j]) &amp;&amp; j > 0)
                j--;
            int q = 0;
            for(int k = j ; k < x ; ++k)
                suf[i][q] = m[i][k] , q++;
            suf[i][q]='\0';
        }
        else
        {
            if(strlen(m[i]) > 1)
                j--;
            while(!strchr("aeiou" , m[i][j]) &amp;&amp; j > 0)
                j--;
            int q = 0;
            for(int k = j ; k < x ; ++k)
                suf[i][q]=m[i][k] , q++;
            suf[i][q]='\0';
        }
    }
    int cnt = 0;
    for(int i = 1 ; i <= n ; ++i)
    {
        bool ok = true;
        for(int j = i+1 ; j <= n ; ++j)
            if(strcmp(suf[i] , suf[j])==0)
                ok=false;
        if(ok)
            cnt++;
    }
    cout << cnt << '\n';
    for(int i = 1 ; i <= n ; ++i)
    {
        if(suf[i][0]!='0')
        {
            cout << m[i] << ' ';
            for(int j = i + 1 ; j <= n ; ++j)
                if(strcmp(suf[i] , suf[j]) == 0)
                    cout << m[j] << ' ' , suf[j][0]='0';
            cout << endl;
        }
    }
    return 0;
}</pre>
