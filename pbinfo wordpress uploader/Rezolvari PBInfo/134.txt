<p>Se dă un șir cu <code>n</code> numere naturale și un număr <code>k</code>.</p>

<h1>Cerinţa</h1>

<p>Să se determine o secvență de elemente de lungime <code>k</code> cu suma elementelor maximă.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>secvk.in</code> conţine pe prima linie numerele <code>n</code> și <code>k</code>, iar pe a doua linie <code>n</code> numere naturale separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Fişierul de ieşire <code>secvk.out</code> va conţine pe prima linie <code>k</code> numere, reprezentând elementele secvenței cerute.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ k ≤ n ≤ 100000</code></li>
	<li>numerele de pe a doua linie a fişierului de intrare vor fi mai mici decât <code>1000</code></li>
	<li>dacă există mai multe secvențe de lungime <code>k</code> cu suma maximă se va afișa prima</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361589&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F134%2Fsecvk&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595361589786&amp;bpp=41&amp;bdt=173&amp;idt=184&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=8144208650629&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361590&amp;ga_hid=519077521&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1316123303057515&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F166%2Fsecvmax&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=kzZhBiT0Gw&amp;p=https%3A//www.pbinfo.ro&amp;dtd=190" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CMS07oaR3-oCFXjKuwgdPwIMlw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>secvk.in</code></p>

<pre contenteditable="true" editable="true">8 3
5 6 1 2 6 6 4  3</pre>

<p><code>secvk.out</code></p>

<pre contenteditable="true" editable="true">6 6 4</pre>

<h1>Explicație</h1>

<p>Sumele care se pot obține sunt: <code>12 9 9 14 16 13</code>. Suma maximă este <code>16</code> și se obține pentru secvența <code>6 6 4</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
#include <cstring>
using namespace std;

ifstream fin("secvk.in");
ofstream fout("secvk.out");

int n , a[100001] , k;
int main()
{
    fin >> n >> k;
    for(int i = 1 ; i <= n ; ++i)
        fin >> a[i];
    int smax=0, dr = 0 , s=0;
    for(int i = 1 ; i < k ; ++i)
        s+=a[i];
    for(int i = k ; i <= n ; ++i)
    {
        s+=a[i];
        s-=a[i-k];
        if(s>smax)
        {
            smax=s;
            dr=i;
        }
    }
    for(int i = dr - k + 1 ; i <= dr ; ++i)
        fout << a[i] << ' ';
    
    fin.close();
    fout.close();
    
    return 0;
}</pre>
