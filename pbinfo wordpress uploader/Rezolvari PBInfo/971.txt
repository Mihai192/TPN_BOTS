<p>În zorii zilei, harnicele albinuţe se pregătesc să zboare la cules de nectar. În apropierea stupului, se află o grădină fermecată cu <code>N</code> flori, numerotate <code>1</code>, <code>2</code>,… <code>N</code>. Pentru fiecare floare se cunoaște numărul de petale.</p>

<p>Anumite flori din grădină pot fi flori capcană. O astfel de floare are un număr prim de petale. Dacă o albină s-ar aşeza pe corola florii capcană, atunci floarea i-ar fura o cantitate de nectar egală cu numărul ei de petale.</p>

<p>Alte flori pot fi florile abundenţei. Numărul de petale ale florii abundenţei are un număr impar de divizori. Dacă o albină s-ar aşeza pe corola unei astfel de flori, atunci ea i-ar dărui albinuţei o cantitate de nectar egală cu triplul numărului ei de petale.</p>

<p>Celelalte flori pot fi flori obişnuite. Dacă o albină s-ar aşeza pe corola unei flori obişnuite, atunci floarea i-ar dărui albinuţei o cantitate de nectar egală cu numărul ei de petale.</p>

<p>Regina stupului, le-a poruncit albinuţelor să adune cea mai mare cantitate de nectar care se poate culege din grădină, altfel … vor fi alungate din stup. </p>

<h1>Cerinţă</h1>

<p>Scrieţi un program care să citească numerele naturale <code>N</code> și numărul de petale ale fiecărei flori  şi care să determine cantitatea maximă <code>C</code> de nectar pe care albinuţele o pot aduna din grădina fermecată.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere naturale, reprezentând numărul de petale ale fiecărei flori.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul <code>C</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100 000</code></li>
	<li>fiecare floare are cel mult <code>10 000</code> petale</li>
	<li>Nectarul unei flori poate fi cules de o singură albină.</li>
	<li>Cantitatea maximă <code>C</code> de nectar culeasă este un număr natural, <code>C ≤ 2 000 000 000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595359094&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F971%2Fmax&amp;flash=0&amp;wgl=1&amp;dt=1595359094411&amp;bpp=3&amp;bdt=253&amp;idt=133&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=8658863894768&amp;rume=1&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595359095&amp;ga_hid=1159764980&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=48&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1366&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21065350%2C21066613%2C21066614&amp;oid=2&amp;pvsid=1907359779995629&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F63%2Ffactorizare1&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=invvIAdh7j&amp;p=https%3A//www.pbinfo.ro&amp;dtd=139" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CMqj_uCH3-oCFT_LuwgdPLAJ8Q"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">8
25 13 10 7 1 12 31 102</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">202</pre>

<h1>Explicație</h1>

<p>Cantitatea maximă de nectar se obţine din florile <code>1</code>, <code>3</code>, <code>5</code>, <code>6</code> şi <code>8</code>. <code>C=3x25+10+3x1+12+102=202</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cmath>
using namespace std;

int prim(int n)
{
    int d=2;
    int cnt=1;
    while(n>1)
    {
        int p = 0;
        while(n%d==0)
        {
            n/=d;
            p++;
        }
        cnt*=(p+1);
        d++;
        if(d*d>n)
        d=n;
    }
    if(cnt==2)
    return 1;
    else
    return 0;
}

int main()
{
    int n;
    cin >> n;
    int x;
    int s=0;
    for(int i = 0 ; i < n ; ++i)
    {
        cin >> x;
        int m=sqrt(x);
        if(m*m==x)
        s+=3*x;
        else if(prim(x))
        s+=0;
        else
        s+=x;
    }
    cout << s;
}</pre>
