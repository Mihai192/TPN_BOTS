<h1>cifrab</h1>

<p>Alexandra e pasionată de baze de numerație. Ea vrea sa calculeze cifra de control a unui număr în cea mai mică bază de numerație în care poate fi reprezentat acel număr. Se numește cifră de control a unui număr, cifra care se obține prin adunări repetate a cifrelor numărului până obținem o singură cifră. Exemplu: <code>1294</code> în baza <code>10 are</code> suma cifrelor <code>16</code> care adunate din nou dau cifra de control <code>7</code>. Dar Alexandra are la dispoziție un număr care poate conține nu doar cifre, ci și litere mari ale alfabetului. <code>A</code> înseamnă cifra <code>10</code>, <code>B</code> cifra <code>11</code>, …, <code>Z</code> cifra <code>35</code>. Deci baza maximă posibilă este <code>36</code>.</p>

<h1>Cerința</h1>

<p>Dându-se un număr printr-un șir de caractere format doar din litere mari și cifre, să se determine cea mai mică bază de numerație posibilă, precum și cifra de control a acestui număr în acea bază.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>cifrab.in</code> conţine un șir de caractere format doar din litere mari și cifre, acest șir reprezentând numărul.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>cifrab.out</code> va conţine pe prima linie cea mai mică bază, iar pe a doua linie cifra de control a numărului reprezentat în baza determinată.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>numărul are maximum <code>100 000</code> de cifre</li>
	<li>baza este cuprinsă între <code>2</code> și <code>36</code></li>
	<li><code>20%</code> din teste va avea baza  mai mică sau egală cu <code>10</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=1958414068&amp;w=728&amp;lmt=1595357121&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3116%2Fcifrab&amp;flash=0&amp;wgl=1&amp;dt=1595357121092&amp;bpp=23&amp;bdt=257&amp;idt=187&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=3079749194538&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357121&amp;ga_hid=519802001&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1269&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066357&amp;oid=3&amp;pvsid=855270680945254&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2441%2Fpereche-descentrata&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=cr0iZKnueD&amp;p=https%3A//www.pbinfo.ro&amp;dtd=197" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLbBh7SA3-oCFbTFuwgddboH3A"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>cifrab.in</code></p>

<pre contenteditable="true" editable="true">349</pre>

<p><code>cifrab.out</code></p>

<pre contenteditable="true" editable="true">10
7</pre>

<h3>Explicație</h3>

<p>Cea mai mică bază este <code>10</code> și calculând cifra de control în baza <code>10</code> se obțin pe rând valorile <code>349, 16, 7</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("cifrab.in");
ofstream cout("cifrab.out");

int a[100005], n;
char s[100005];

bool cif(char ch)
{
    return '0' <= ch &amp;&amp; '9' >= ch;
}

int rest(int b)
{
    int r = 0;
    for(int i = 0 ; i < n; ++i)
        r = (b * r + a[i]) % (b - 1);
    return r;
}

int main()
{
    cin >> s;
    int i = 0;
    int bmax = 0;
    while(s[i])
    {
        if(cif(s[i]))
        {
            a[i] = s[i] - '0';
        }
        else
            a[i] = s[i] - 'A' + 10;
        i++;
        if(a[i-1] > bmax)
            bmax = a[i-1];
    }
    n = i;
    cout << bmax + 1 << endl;
    int rez = rest(bmax+1);
    if(rez == 0)
        rez = bmax;
    if(rez >= 10)
        cout <<(char) (rez + 'A' - 10);
    else
        cout << rez;
    return 0;
}</pre>
