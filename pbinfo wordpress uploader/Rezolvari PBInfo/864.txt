<h1>Cerința</h1>

<p>Se dă o matrice cu <code>n</code> linii și <code>m</code> coloane și elemente <code>0</code> sau <code>1</code>, reprezentând planul unui teren în care <code>0</code> reprezintă o zonă accesibilă, iar <code>1</code> reprezintă o zonă inaccesibilă. O zonă a terenului are ca și coordonate linia și coloana corespunzătoare din matrice.  Într-o zonă cunoscută a matricei se află un robot, iar în altă zonă, de asemenea cunoscută, se află o roboțică. Determinați numărul minim de pași prin care robotul va ajunge la roboțică. Dacă nu este posibil ca robotul să ajungă la roboțică, rezultatul va fi <code>-1</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>roboti.in</code> conține pe prima linie numerele <code>n m</code>. Următoarele <code>n</code> linii conțin câte <code>m</code> valori, <code>0</code> sau <code>1</code>. Următoarele două linii conțin câte două valori, reprezentând coordonatele robotului, respectiv ale roboțicii.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>roboti.out</code> va conține pe prima linie valoarea cerută.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n , m ≤ 1000</code></li>
	<li>zonele pe care se află inițial cei doi roboți sunt libere și sunt diferite</li>
	<li>un pas reprezintă trecerea robotului din zona curentă într-o zonă vecină cu aceasta pe linie sau pe coloană, fără a părăsi matricea.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356646&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F864%2Froboti&amp;flash=0&amp;wgl=1&amp;dt=1595356646602&amp;bpp=13&amp;bdt=242&amp;idt=180&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2151849010042&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356647&amp;ga_hid=1410709832&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=30&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1110&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=33158893906100&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F882%2Flac&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=fqfPbRb6Ks&amp;p=https%3A//www.pbinfo.ro&amp;dtd=187" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNGg5dH-3uoCFRDFuwgdiEwOWg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>roboti.in</code></p>

<pre contenteditable="true" editable="true">4 5
1 0 0 0 1
0 0 1 0 0
0 0 0 0 1
1 1 0 0 1
1 2
2 5</pre>

<p><code>roboti.out</code></p>

<pre contenteditable="true" editable="true">4</pre>

<h1>Explicație</h1>

<p>Un traseu al robotului format din <code>4</code> pași este evidențiat mai jos.</p>

<table>
		<tbody><tr>
			<td> 1 </td>
			<td><strong>0</strong></td>
			<td><strong>0</strong></td>
			<td><strong>0</strong></td>
			<td> 1 </td>
		</tr>
		<tr>
			<td> 0 </td>
			<td> 0 </td>
			<td> 1 </td>
			<td><strong>0</strong></td>
			<td><strong>0</strong></td>
		</tr>
		<tr>
			<td> 0 </td>
			<td> 0 </td>
			<td> 0 </td>
			<td> 0 </td>
			<td> 1 </td>
		</tr>
		<tr>
			<td> 1 </td>
			<td> 1 </td>
			<td> 0 </td>
			<td> 0 </td>
			<td> 1 </td>
		</tr>
</tbody></table>

<p>Există și alte trasee posibile, dar lungimea lor este mai mare.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("roboti.in");
ofstream cout("roboti.out");
const int di[]={-1 , 0 , 1 , 0};
const int dj[]={0 , 1 , 0 , -1};
int n , m , a[1002][1002] , x[1000001] , y[1000001];
int ip , jp , is , js;///coordonatele

bool inside(int i , int j)
{
    return i>=1 &amp;&amp; i<=n &amp;&amp; j>=1 &amp;&amp; j<=m;
}
int main()
{
    ///citire
    cin >> n >> m;
    for(int i = 1 ; i <=n ; ++i)
    {
        for(int j = 1 ; j <=m ; ++j)
            cin >> a[i][j];
    }
    cin >> ip >> jp >> is >> js;
    ///LEE
    int st = 1 , dr = 1;///capetele cozii
    a[ip][jp] = 1;///pornirea
    x[1]=ip;
    y[1]=jp;
    while(st <= dr &amp;&amp; a[is][js]==0)
    {
        int i= x[st] , j = y[st];///poz curenta
        for(int k = 0 ; k < 4 ; k++)
        {
            ///caculam pozitiie urmatoare
            int ii = i+di[k];
            int jj = j+dj[k];
            if(inside(ii , jj) &amp;&amp; a[ii][jj]==0)
            {
                dr++;///crestem coada
                x[dr]=ii;
                y[dr]=jj;
                a[ii][jj]=a[i][j]+1;///cu 1 mai departe
            }
        }
        st++;///avans in coada
    }
    cout << a[is][js]-1;
    return 0;
}</pre>
