<h1>Cerinţa</h1>

<p>Se dau două şiruri <code>a</code> şi <code>b</code>, cu <code>n</code>, respectiv <code>m</code> elemente, numere naturale, <strong>ordonate crescător</strong>. Să se construiască un al treilea şir, <code>c</code>, care să conţină, în ordine crescătoare, elementele din şirurile <code>a</code> şi <code>b</code>.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>interclasare.in</code> conţine pe prima linie numărul <code>n</code>; urmează <code>n</code> numere naturale, ordonate crescător, ce pot fi dispuse pe mai multe linii. Linia următoare conţine numărul <code>m</code> şi urmează <code>m</code> numere naturale, ordonate crescător, ce pot fi dispuse pe mai multe linii.</p>

<h1>Date de ieşire</h1>

<p>Fişierul de ieşire <code>interclasare.out</code> va conţine elementele şirului construit, câte <code>10</code> valori pe o linie, elementele de pe o linie fiind separate printr-un spaţiu. Ultima linie a fişierului poate să conţină mai puţin de <code>10</code> valori.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n, m ≤ 100.000</code></li>
	<li>valorile elementelor celor două şiruri vor fi mai mici decât <code>1.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=1958414068&amp;w=728&amp;lmt=1595361770&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F241%2Finterclasare&amp;flash=0&amp;wgl=1&amp;dt=1595361770246&amp;bpp=6&amp;bdt=178&amp;idt=134&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5275618791514&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361770&amp;ga_hid=568144322&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066715&amp;oid=3&amp;pvsid=717769585942069&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F250%2Finterclasare1&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=QLuqqeJ88I&amp;p=https%3A//www.pbinfo.ro&amp;dtd=144" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJ6y8tyR3-oCFbjGuwgdZ4MKog"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>interclasare.in</code></p>

<pre contenteditable="true" editable="true">7
1 3 4 6
7 8 8 
8
2 4 5 6 8
9 9 12</pre>

<p><code>interclasare.out</code></p>

<pre contenteditable="true" editable="true">1 2 3 4 4 5 6 6 7 8 
8 8 9 9 12 </pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
using namespace std;

ifstream cin("interclasare.in");
ofstream cout("interclasare.out");

int main()
{
    int n, m, k = 0;
    int a[100001], b[100001], c[200001];
    cin >> n;
    for(int i = 1; i <= n; ++i)
        cin >> a[i];
    cin >> m;
    for(int i = 1; i <= m; ++i)
        cin >> b[i];

    int i = 1, j = 1;

    while(i <= n &amp;&amp; j <= m)
        if(a[i] < b[j])
            c[++k] = a[i], i++;
        else
            c[++k] = b[j], j++;

    while(i <= n)
        c[++k] = a[i], i++;

    while(j <= m)
        c[++k] = b[j], j++;

    for(int i = 1; i <= k; ++i){
        cout << c[i] << " ";
        if(i % 10 == 0)
            cout << endl;
    }

    return 0;
}</pre>
