<h1>Cerința</h1>

<p>Se dă un tablou cu <code>n</code> elemente, numere naturale. Să se elimine din tablou toate elementele care sunt palindrom.</p>

<p>Se vor defini și apela următoarele subprograme:</p>

<ul>
	<li><code>citire</code>, care citește de la tastatură valoarea lui <code>n</code> și cele <code>n</code> elemente ale tabloului</li>
	<li><code>afisare</code>, care afișează pe ecran elementele tabloului, separate prin exact un spațiu</li>
	<li><code>palindrom</code>, care verifică dacă un număr dat ca parametru este palindrom</li>
	<li><code>eliminare</code>, care elimină din tablou un element a cărui poziție este dată ca parametru.</li>
</ul>

<p><strong>În programele C/C++ nu se vor folosi variabile globale</strong>.</p>

<h1>Date de intrare</h1>

<p>Se citește de la tastatură numărul <code>n</code>, iar apoi cele <code>n</code> elemente ale tabloului.</p>

<h1>Date de ieșire</h1>

<p>Se vor afișa pe ecran elementele tabloului, separate prin exact un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>elementele tabloului vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595358193&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F915%2Felimpalindrom&amp;flash=0&amp;wgl=1&amp;dt=1595358192991&amp;bpp=5&amp;bdt=225&amp;idt=154&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=6523216477479&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595358193&amp;ga_hid=213788919&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1162&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2390039495841552&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F914%2Fhalfsort1&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=KhYOq1VLTQ&amp;p=https%3A//www.pbinfo.ro&amp;dtd=162" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJHdlbOE3-oCFcuWsgod39AFig"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">7
17 181 22 56 4 20 420 </pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">17 56 20 420</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

void citire(int&amp; n, int a[]){
    cin >> n;
    for(int i = 1; i <= n; ++i)
        cin >> a[i];
}

bool palindrom(int n){
    int cn = n;
    int ogl = 0;
    while(n){
        ogl = ogl * 10 + n % 10;
        n/=10;
    }
    return cn == ogl;
}

void eliminare(int a[], int&amp; i, int&amp; n){
    for(int j = i + 1; j <= n; ++j)
        a[j-1] = a[j];
    n--;
    i--;
}

void afisare(int n, int a[]){
    for(int i = 1; i <= n; ++i)
        cout << a[i] << " ";
}

int main()
{
    int n, a[1001];
    citire(n, a);

    for(int i = 1; i <= n; ++i)
        if(palindrom(a[i]))
            eliminare(a, i, n);

    afisare(n, a);
    return 0;
}</pre>
