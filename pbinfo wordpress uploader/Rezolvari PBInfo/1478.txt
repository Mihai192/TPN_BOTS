<p>Prin <span class="caps">OCR</span> (Optical Character Recognition) se înţelege tehnologia prin care un program de calculator identifică textul dintr-un fișier în care acesta nu e stocat ca şiruri de caractere, ci ca ansamblu de pixeli (imagine).</p>

<p>Să presupunem că am scanat o imagine alb negru care conţine doar cifre. Cifrele sunt formate din puncte (pixeli) negre iar fundalul din puncte albe. Imaginea va fi reprezentată ca un tablou dreptunghiular de cifre <code>0</code> şi <code>1</code>, cifrele <code>1</code> formează obiectele din imagine iar cifrele <code>0</code> fundalul.</p>

<h1>Cerinţă</h1>

<p>Scrieţi un program care să determine:</p>

<p>a) câte cifre sunt în imagine;<br>
b) numărul de apariţii ale fiecărei cifre. </p>

<p>Spre exemplu, dacă imaginea scanată arată ca în figura următoare:</p>

<p style="text-align:center;"><img alt="" height="128" src="/resurse/9dc152/p-1200/1478-easyOCR.png" width="332"></p>

<p>atunci rezultatul va fi: </p>

<pre contenteditable="true" editable="true">8
0 2 1 1 3 2 5 1 7 1 8 1.</pre>

<p>Explicaţie: în total sunt <code>8</code> cifre, cifra <code>0</code> apare de <code>2</code> ori, <code>1</code> apare o dată, <code>3</code> de două ori, <code>5</code> o dată, <code>7</code> o dată şi cifra <code>8</code> are o singură apariţie.</p>

<h1>Date de intrare</h1>

<p>Pe prima linie a fișierului de intrare <code>easyocr.in</code> se găsesc două numere separate printr-un spațiu. Primul număr, notat cu <code>n</code>, reprezintă numărul de linii al matricei prin care se reprezintă zona dreptunghiulară, iar al doilea, notat cu <code>m</code>, reprezintă numărul de coloane. Pe următoarele <code>n</code> linii se află matricea cu cifrele care codifică imaginea, pe fiecare linie găsindu-se <code>m</code> cifre de <code>0</code> și/sau <code>1</code> scrise fără spații între ele (<code>0</code> reprezintă o zonă albă, care nu face parte dintr-o cifră, iar <code>1</code> reprezintă o zonă dintr-o cifră).</p>

<p>Cifrele sunt dispuse vertical, paralel cu marginile zonei dreptunghiulare, dar pot fi situate pe nivele diferite. Dimensiunile cifrelor nu se modifică. De asemenea, cifrele nu se suprapun și nici nu se ating în zonele cu valori <code>1</code>, dar pot fi una în spaţiul alteia. Cifrele arată ca în figura de mai jos:</p>

<p style="text-align:center;"><img alt="" height="85" src="/resurse/9dc152/p-1200/1478-easyOCR-cifre.png" width="586"></p>

<h1>Date de ieșire</h1>

<p>Pe prima linie din fişierul de ieşire <code>easyocr.out</code> se va scrie numărul de cifre descoperite în imagine, iar pe a doua linie se vor scrie, separate prin câte un spaţiu, cifrele în ordine crescătoare, fiecare cifră fiind urmată de numărul său de apariţii. Dacă o cifră are numărul de apariții <code>0</code> (zero), atunci ea nu va fi afişată.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>0 ≤ n, m ≤ 1000</code></li>
	<li><code>0 ≤ nr ≤ 2000</code>, unde <code>nr</code> reprezintă numărul de cifre aflate în matrice.</li>
	<li>O parte din conturul unei cifre poate coincide cu conturul matricei (zonei dreptunghiulare).</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357799&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1478%2Feasyocr&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595357799550&amp;bpp=5&amp;bdt=229&amp;idt=233&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=5204333529315&amp;rume=1&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357800&amp;ga_hid=318467270&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=48&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1712&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21065350%2C21066613%2C21066614&amp;oid=3&amp;pvsid=1350458054225361&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2235%2Ftsunami&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=ryIaeo6omf&amp;p=https%3A//www.pbinfo.ro&amp;dtd=238" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CN2zzPeC3-oCFczFuwgdFqICvQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>easyocr.in</code></p>

<pre contenteditable="true" editable="true">17 15
000000000000000
011111000000000
010000000000000
010000000000000
011111000000001
000001000000011
000001011111001
011111000001001
000000000001001
011111000010001
000001000100101
000001000101100
011111000100100
000001000000100
000001000000100
011111000000100
000000000000100</pre>

<p><code>easyocr.out</code></p>

<pre contenteditable="true" editable="true">5
1 2 3 1 5 1 7 1</pre>

<h3>Explicație</h3>

<p><img alt="" height="145" src="/resurse/9dc152/p-1200/1478-easyOCR-exemplu.png" width="127"></p>

<p>În imagine se află <code>5</code> cifre unde:</p>

<ul>
	<li>cifra <code>1</code> apare de <code>2</code> ori;</li>
	<li>cifra <code>3</code> apare o singură dată;</li>
	<li>cifra <code>5</code> apare o singură dată;</li>
	<li>cifra <code>7</code> apare tot o singură dată.</li>
</ul>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("easyocr.in");
ofstream cout("easyocr.out");

bool a[1011][1011] , b[1011][1011];
int f[10] , n , m;

bool in(int i , int j)
{
    return i <= n &amp;&amp; i >= 1 &amp;&amp; j <= m &amp;&amp; j >= 1;
}

void fill(int i , int j , int &amp;cnt)
{
    a[i][j]=0;
    cnt++;
    if(a[i+1][j]==1 &amp;&amp; in(i+1 , j))
        fill(i+1 , j , cnt);
    if(a[i-1][j]==1 &amp;&amp; in(i-1 , j))
        fill(i-1 , j , cnt);
    if(a[i][j+1]==1 &amp;&amp; in(i , j+1))
        fill(i , j+1 , cnt);
    if(a[i][j-1]==1 &amp;&amp; in(i , j-1))
        fill(i , j-1 , cnt);
    if(a[i+1][j-1]==1 &amp;&amp; in(i+1 , j-1))
        fill(i+1 , j-1 , cnt);
}

int main()
{
    cin >> n >> m;
    char ch;
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j)
        {
            cin >> ch;
            a[i][j]=ch - '0';
            b[i][j]=a[i][j];
        }
    int nr=0;
    for(int i = 1 ; i <= n ; ++i)
    {
        for(int j = 1 ; j <= m ; ++j)
        {
            if(a[i][j]==1)
            {
                nr++;
                int cnt=0;
                fill(i , j , cnt);
                if(cnt==20)
                    f[0]++;
                else if(cnt==8)
                    f[1]++;
                else if(cnt==19)
                {
                    if(b[i+4][j]==1)
                        f[2]++;
                    else if(b[i+1][j+4]==1)
                        f[3]++;
                    else
                        f[5]++;
                }
                else if(cnt==14)
                    f[4]++;
                else if(cnt==21)
                {
                    if(b[i+1][j+4]==1)
                        f[9]++;
                    else
                        f[6]++;
                }
                else if(cnt==11)
                    f[7]++;
                else if(cnt==23)
                    f[8]++;
            }
        }
    }
    cout << nr << endl;
    for(int i = 0 ; i <= 9 ; ++i)
        if(f[i]>0)
            cout << i << ' ' << f[i] << ' ';
    return 0;
}</pre>
