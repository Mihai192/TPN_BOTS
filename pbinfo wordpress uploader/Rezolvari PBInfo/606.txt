<h1>Cerința</h1>

<p>Gigel a primit de la bunicul său un trenuleț electric cu <code>n</code> vagoane colorate în diverse culori, identificate prin numere întregi. Gigel consideră că trenul este frumos colorat dacă toate vagoanele colorate la fel sunt învecinate. Acum vă roagă să-i spuneți cu câte culori diferite au fost colorate vagoanele și dacă trenul este frumos colorat.</p>


<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>culori.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale nenule, reprezentând în ordine culorile vagoanelor din care este compus trenulețul.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>culori.out</code> va conține pe prima linie numărul <code>C</code> de culori diferite, iar pe a doua linie mesajul <code>DA</code> sau <code>NU</code>, după cum trenul este sau nu frumos colorat.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>culorile vagoanelor sunt identificate prin numere naturale mai mici decât <code>1.000.000.000</code></li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>culori.in</code></p>

<pre contenteditable="true" editable="true">5
2 2 1 6 6</pre>

<p><code>culori.out</code></p>

<pre contenteditable="true" editable="true">3
DA</pre>

<h1>Exemplul 2:</h1>

<p><code>culori.in</code></p>

<pre contenteditable="true" editable="true">5
2 2 6 2 6</pre>

<p><code>culori.out</code></p>

<pre contenteditable="true" editable="true">2
NU</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;
ifstream cin("culori.in");
ofstream cout("culori.out");
int main()
{
    int n , a[1001] ,v[1001] , l = 1 , cnt = 0 , ok = 0;
    cin >> n;
    for(int i = 0 ; i < n ; ++i)
        cin >> a[i] , v[i]=a[i];
    sort(a , a+n);
    for(int i = 0 ; i < n ; ++i)
    {
        if(a[i]==a[i+1]) l++;
        else
        {
            int c = 0;
            for(int j = 0 ; j < n ; ++j)
            {
                if(v[j]==a[i]) c++;
                else if(c!=0) break;
            }
            if(c != l) ok = 1;
            cnt++;
            l = 1;
        }
    }
    cout << cnt << endl;
    if(ok == 0)cout << "DA";
    else cout << "NU";
    return 0;
}</pre>
