<h1>Cerința</h1>

<p>Chris vă propune un joc cu becuri.</p>

<ul>
	<li>în joc sunt <code>n</code> becuri</li>
	<li>inițial toate cele <code>n</code> becuri au culoarea albastru</li>
	<li>fiecare bec poate avea doar două culori: roșu sau albastru</li>
	<li>se efectuează <code>n</code> parcurgeri, pentru <code>k</code> de la <code>1</code> la <code>n</code>. La parcurgerea de rang <code>k</code>, se schimbă culoarea fiecărui bec situat pe poziţii având indicii multipli de <code>k</code>, din roşu în albastru şi invers.</li>
</ul>

<p>Știind numărul <code>n</code> de becuri, să se afișeze numărul de becuri care au culoarea roșie după terminarea jocului.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>becuri.in</code> conține pe prima linie numărul de becuri <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>becuri.out</code> va conține pe prima linie numărul de becuri care au culoarea roșie după terminarea jocului.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>numerotarea pozițiilor becurilor începe cu <code>1</code></li>
	<li><code>1 ≤ n ≤ 10</code><sup><code>9</code></sup></li>
</ul>

<h1>Exemple</h1>

<table class="table">
		<tbody><tr>
			<td> <code>becuri.in</code> </td>
			<td> <code>becuri.out</code> </td>
		</tr>
		<tr>
			<td> 6 </td>
			<td> 2 </td>
		</tr>
		<tr>
			<td> 10 </td>
			<td> 3 </td>
		</tr>
		<tr>
			<td> 18 </td>
			<td> 4 </td>
		</tr>
</tbody></table>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("becuri.in");
ofstream cout("becuri.out");
int main()
{
    int n , nrd , cnt = 0 , d = 1 , i = 1;
    cin >> n;
    while(i * d <= n)
    {
        cnt++;
        i++;
        d++;
    }
    cout << cnt;
    return 0;
}</pre>
