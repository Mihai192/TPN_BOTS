<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <algorithm>
using namespace std;

int maxi(int n)
{
    int ma = 0;
    while(n)
    {
        if(n%10 > ma)
            ma = n % 10;
        n/=10;
    }
    return ma;
}

int main()
{
    int a , b;
    cin >> a >> b;
    int max1=maxi(a);
    int max2=maxi(b);
    int ma;
    if(max1 > max2)
        ma = max1*10 + max2;
    else
        ma = max2*10 + max1;
    int v[4] , v1[4];
    int p = 0 , p1 = 0;
    cout << ma << ' ';
    while(a)
    {
        v[p]=a%10;
        p++ , a/=10;
    }
    while(b)
    {
        v1[p1]=b%10;
        p1++ , b/=10;
    }
    sort(v , v + p);
    sort(v1 , v1 + p1);
    int min1 = v[0] , min2 = v1[0];
    if(v1[0]==0 &amp;&amp; v[0]==0)
    {
        int mi=10;
        for(int i = 0 ; i < p ; ++i)
        {
            if(v[i] < mi &amp;&amp; v[i]!=0)
                mi=v[i];
            if(v1[i] < mi &amp;&amp; v1[i]!=0)
                mi=v1[i];
        }
        int m = mi * 10;
        cout << m;
    }
    else
    {
        if(min1==0 || min2==0)
        {
            if(min1 > min2)
                cout << min1*10;
            else
                cout << min2*10;
        } 
        else
        {
            if(min1 < min2)
                cout << min1*10+min2;
            else
                cout << min2*10+min1;
        }
    }
    
}</pre>
