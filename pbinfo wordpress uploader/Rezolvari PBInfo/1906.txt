<h1>Cerința</h1>

<p>Agentul 007 a uitat cifrul seifului în care păstra documentele, însă ştie cum poate fi aflat. Are nişte cartonaşe pe care sunt notate <code>n</code> numere naturale distincte din intervalul [ <code>a,b</code> ]. Mai are o listă cu <code>m</code> numere naturale distincte care reprezintă anumite poziţii din şirul ordonat crescător al numerelor de pe cartonaşe. Însumând numerele aflate pe poziţiile din listă se determină un număr natural care reprezintă cifrul seifului. Cum Agentul 007 nu a mai programat din liceu, vă roagă pe voi să găsiţi cifrul în schimbul a 100 de … puncte.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>memory007.in</code> conține pe prima linie numerele <code>n,m,a,b</code>, pe a doua linie <code>n</code> numere naturale distincte separate prin spații reprezentând numerele de pe cartonaşe, iar pe a treia linie <code>m</code> numere naturale distincte reprezentând poziţiile din listă.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>memory007.out</code> va conține pe prima linie cifrul seifului.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ m ≤ n ≤ 500.000</code></li>
	<li>numerele de pe cartonaşe vor fi distincte şi mai mici decât <code>1.000.000.000</code></li>
	<li>numerele din listă vor fi naturale nenule, distincte şi mai mici sau egale cu <code>n</code>, ordonate crescător</li>
	<li><code>1 ≤ a ≤ b ≤ 1.000.000.000</code></li>
	<li><code>n ≤ b - a ≤ 700.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361833&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1906%2Fmemory007&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595361832994&amp;bpp=5&amp;bdt=170&amp;idt=148&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2854279139033&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361833&amp;ga_hid=918443930&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1176&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066532%2C21066623&amp;oid=3&amp;pvsid=3732884177737300&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1900%2Fnumere16&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=XoGozvw1ZZ&amp;p=https%3A//www.pbinfo.ro&amp;dtd=155" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CK2f6PqR3-oCFW_GuwgdIooDsA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>memory007.in</code></p>

<pre contenteditable="true" editable="true">5 3 30 80
78 56 34 45 61
1 2 5</pre>

<p><code>memory007.out</code></p>

<pre contenteditable="true" editable="true">157</pre>

<h3>Explicație</h3>

<p>Numerele de pe cartonaşe sunt <code>78,56,34,45,61</code> şi sunt din intervalul [ <code>30,80</code> ]. Ordonate crescător formează şirul <code>34,45,56,61,78</code>. Numerele din listă, adică <code>1,2,5</code>, ne spun că cifrul se obţine însumând numerele de pe poziţiile <code>1</code>, <code>2</code> şi <code>5</code> din şirul ordonat crescător al numerelor de pe cartonaşe, adică cifrul este <code>34+45+78=157</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <bitset>
using namespace std;

ifstream fin("memory007.in");
ofstream fout("memory007.out");

bitset<700020> v ;
long n , m , a , b , i , j , nr , x ;
long long suma , r , t ;

int main()
{
    fin >> n >> m >> a >> b ;
    for ( i=1 ; i<=n ; i++ )
    {
        fin >> x ;
        j = x-a ;
        v[j] = 1 ;
    }
    j = 0 ;
    nr = 0 ;
    suma = 0 ;
    for ( i=1 ; i<=m ; i++)
    {
        fin >> x ;
        while ( nr < x )
        {
          nr = nr + v[j] ;
          j++ ;
        }
        suma = suma + j - 1 ;
    }
    r = m ;
    t = a ;
    suma = suma + r * t ;
    fout << suma ;
    return 0;
}</pre>
