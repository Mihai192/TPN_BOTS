<h1>Cerința</h1>

<p>Se dă o matrice cu <code>n</code> linii și <code>m</code> coloane și elemente <code>0</code> sau <code>1</code>, care reprezintă harta unei planete, în care <code>1</code>  înseamnă uscat, iar <code>0</code> înseamnă apă. Două elemente <code>1</code> care se învecinează pe linie sau pe coloană (nu și pe diagonală) fac parte din același continent.</p>

<p>Să se determine câte continente sunt pe hartă.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>fill.in</code> conține pe prima linie numerele <code>n m</code>. Următoarele <code>n</code> linii conțin câte <code>m</code> elemente, <code>0</code> sau <code>1</code>, cu semnificația din enunț.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>fill.out</code> va conține pe prima linie numărul <code>C</code> de continente existente.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n , m ≤ 100</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357872&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F837%2Ffill&amp;flash=0&amp;wgl=1&amp;dt=1595357872286&amp;bpp=4&amp;bdt=236&amp;idt=171&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=8635369684442&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357872&amp;ga_hid=1012404790&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1054&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358%2C21066716&amp;oid=3&amp;pvsid=726278944264079&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1864%2Fmoscraciun&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=d31vyt7Egj&amp;p=https%3A//www.pbinfo.ro&amp;dtd=177" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPTKoJqD3-oCFQBAkQUdyo0DiQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>fill.in</code></p>

<pre contenteditable="true" editable="true">4 6
1 1 1 0 1 0
0 0 1 0 1 1
1 1 1 0 0 0
0 1 0 1 1 1</pre>

<p><code>fill.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h1>Explicație</h1>

<p>Cele <code>3</code> continente sunt evidenţiate mai jos:<br>
<img alt="" src="/resurse/probleme/801-850/837-fill.png"></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("fill.in");
ofstream cout("fill.out");

int a[501][501];

void fill(int i, int j){
    a[i][j] = 0;
    if(a[i+1][j] == 1)
        fill(i+1, j);
    if(a[i-1][j] == 1)
        fill(i-1, j);
    if(a[i][j+1] == 1)
        fill(i, j+1);
    if(a[i][j-1] == 1)
        fill(i, j-1);
}

/*

5 6
1 1 0 0 1 1
0 1 0 1 1 0
0 1 1 0 0 1
0 0 0 0 0 0
1 1 1 1 1 1

*/

int main(){
    int n, m, insule = 0;
    cin >> n >> m;
    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
            cin >> a[i][j];
    /// va avea valoarea 1 pt uscat si 0 pentru apa
    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
            if(a[i][j] == 1){
                insule++;
                fill(i, j);
            }
    cout << insule;
    return 0;
}</pre>
