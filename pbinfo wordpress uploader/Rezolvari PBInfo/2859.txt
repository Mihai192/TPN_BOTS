<h1>Cerința</h1>

<p>Să se scrie o funcție C++ care primește ca parametru un număr natural <code>n</code> și returnează <code>1</code> dacă <code>n</code> conține cel puțin trei cifre alăturate impare, sau returnează <code>0</code> în caz contrar.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li>numele funcției va fi <code>TreiCifImp</code></li>
	<li>funcția va avea un singur parametru, <code>n</code>, unde <code>0 ≤ n ≤ 2.000.000.000</code></li>
	<li>valoarea returnată va fi <code>0</code> sau <code>1</code></li>
</ul>

<h1>Exemple</h1>

<p><code>TreiCifImp(34715132) = 1</code>, <code>TreiCifImp(114) = 0</code></p>

<h1>Important</h1>

<p>Soluţia propusă va conţine doar definiţia funcţiei cerute. Prezenţa în soluţie a altor instrucţiuni poate duce la erori de compilare sau de execuţie care vor avea ca efect depunctarea soluţiei.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">bool TreiCifImp(int n)
{
    bool ok = false;
    int l = 0;
    while(n)
    {
        if(n % 2 == 1)
            l++;
        else
            l=0;
        if(l >= 3)
            ok = true;
        n/=10;
    }
    return ok;
}</pre>
