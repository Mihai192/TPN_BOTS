<h1>Cerința</h1>

<p>Alex este un copil destul de bun la informatica însă are un defect: Poate fi foarte enervant(prin enervant se înțelege ca își stresează profesorii cu mesaje pe Messenger). Profesorul de informatica s-a săturat de această situație așa ca i-a spus lui Alex ca dacă nu rezolvă următoarea problema îl va bloca pe Messenger. Alex nu vrea sa se întâmple acest lucru deoarece așa e conștient ca nu va mai avea pe cine stresa. Problema sună așa: </p>

<p>Avem <code>n</code> cutii așezate într-o stivă astfel încât avem acces doar la prima cutie.Pentru fiecare cutie sa știe un număr <code>A[i]</code> reprezentând volumul cutiei <code>i = 1,2...,n</code>. Aceste cutii trebuie transportate din localitatea A în localitatea B știind ca se pot efectua maxim <code>k</code> transporturi (în cazul în care s-ar efectua mai multe mașina ar rămâne fără combustibil) și de asemenea fiind o mașina închiriată trebuie sa aibă capacitatea minimă <code>x</code> necesară pentru a efectua cele <code>k</code> transporturi. Numărul <code>x</code> este cel ce îi dă bătăi de cap lui Alex așa ca el vă roagă să îl ajutați!</p>

<h1>Date de intrare</h1>

<p>Pe prima linie a fișierului <code>profu.in</code> se vor găsi cele doua numere <code>n</code> și <code>k</code> cu semnificația din enunț apoi pe a doua linie a fișierului se vor găsi <code>n</code> numere naturale.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>profu.out</code> va conține pe prima linie numărul <code>x</code>, reprezentând capacitatea minima a mașini ce trebuie închiriată.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 500.000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi mai mici decât <code>1.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361679&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2252%2Fprofu&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595361679039&amp;bpp=6&amp;bdt=172&amp;idt=180&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2944367657375&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361679&amp;ga_hid=766915545&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1208&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3675056834246358&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3219%2Fcolina&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=gstqKvXfQy&amp;p=https%3A//www.pbinfo.ro&amp;dtd=186" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLKdtrGR3-oCFUvLuwgdB5kOVQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>profu.in</code></p>

<pre contenteditable="true" editable="true">6 3
7 3 2 3 1 4</pre>

<p><code>profu.out</code></p>

<pre contenteditable="true" editable="true">8</pre>

<h3>Explicație</h3>

<p>La primul transport este încărcată prima saltea (care are volumul 7). La cel de-al doilea transport sunt încărcate saltele 2 și 3 (volumul total este 3 + 2 = 5). La cel de-al treilea transport sunt încărcate saltele 4, 5 și 6 (volumul total este 3 + 1 + 4 = 8 fiind cel mai mic rezultat posibil)</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;
ifstream cin("profu.in");
ofstream cout("profu.out");
int a[500001] , k , n;

int poate(int a[] , int n , long long x , int k)
{
    long long s = 0;
    int c = 1;
    for(int i = 1 ; i <= n ; i++)
    {
        s += a[i];
        if(s > x)
        {
            c++;
            if(c > k) return 0;
            s = a[i];
        }
    }
    if(c <= k) return 1;
    else return 0;
}

long long cautarebinara(int a[] , int n , int max , long long x , int k)
{
    long long st = max , dr = x;
    while(st <= dr)
    {
        long long mij = (st+ dr) / 2;
        if(poate(a , n , mij , k)) dr = mij-1;
        else st = mij+1;
    }
    return st;
}
int main()
{
    long long x = 0;
    int max = 0;
    cin >> n >> k;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> a[i];
        x += a[i];
        if(a[i] > max) max = a[i];
    }
    cout << cautarebinara(a , n , max , x , k);
}</pre>
