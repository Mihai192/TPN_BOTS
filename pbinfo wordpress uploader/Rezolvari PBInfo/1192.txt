<h1>Cerința</h1>

<p>După ce arhitectul Gigel a reușit să rezolve sarcina primită de la primărie (  <a class="text-success bg-success" href="/probleme/1191/arhitectura">#Arhitectura <sup>[100]</sup></a>  ), el și-a dat seama că aspectul zonei nu va fi unul după preferințele sale. Astfel, s-a stabilit că în oraș nu există clădiri cu înălțimea mai mare decât <code>hmax</code>. Acum primăria îi cere afișarea clădirilor în ordine descrescătoare, precum și verificarea, pentru fiecare clădire din lista ordonată, dacă înălțimea ei este egală cu media aritmetică a înălțimilor celor două clădiri vecine.</p>

<p>Gigel vă cere ajutorul ca să-și termine proiectul care a devenit mult prea greu .</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>arhitectura2.in</code> conține pe prima linie numărul <code>n</code>, iar pe următoarele linii <code>n</code> numere naturale separate prin spații. Fiecare linie conține maxim <code>100.000</code> de valori. </p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>arhitectura2.out</code> va conține doua linii cu <code>n</code> valori fiecare. Prima linie va conține înălțimile în ordine descrescătoare , iar a doua linie va conține <code>n</code> valori <code>1</code> sau <code>0</code>, după cum înălțimea clădirii curente este sau nu egală cu media aritmetică a înălțimilor celor două clădiri vecine.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 2000000</code></li>
	<li><code>hmax ≤ 100000</code></li>
	<li>Pentru 40% din teste <code>n ≤ 50000</code></li>
	<li>Pentru 80% din teste <code>n ≤ 500000</code></li>
	<li>Considerăm că înaintea primei clădiri  și după ultima clădire se află câte o pseudoclădire de înălțime <code>0</code> – care va interveni în verificarea cerută.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361985&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1192%2Farhitectura2&amp;flash=0&amp;wgl=1&amp;dt=1595361985697&amp;bpp=22&amp;bdt=267&amp;idt=161&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=6669652103226&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361986&amp;ga_hid=1467426105&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1196&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=376459806916191&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F514%2Fsortpie&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=6CzIlXfXta&amp;p=https%3A//www.pbinfo.ro&amp;dtd=171" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COWx08OS3-oCFRTisgodtMsAPg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>arhitectura2.in</code></p>

<pre contenteditable="true" editable="true">10
5 10 10 9 5 2 5 8 5 2</pre>

<p><code>arhitectura2.out</code></p>

<pre contenteditable="true" editable="true">10 10 9 8 5 5 5 5 2 2 
0 0 1 0 0 1 1 0 0 0</pre>

<h1>Explicatie:</h1>

<p>Șirul devine <code>10 10 9 8 5 5 5 5 2 2</code><br>
Doar <code>9</code> si cei doi de <code>5</code> din mijloc respectă condiția.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream fin("arhitectura2.in");
ofstream fout("arhitectura2.out");

int a[2000003];

int main()
{
    int n;
    fin >> n;
    a[0]=0 , a[n+1]=0;
    for(int i = 1 ; i <= n ; ++i)
    fin >> a[i];
    sort(a+1,a+n+1);
    for(int i = n ; i >= 1 ; --i)
    fout << a[i] << ' ';
    fout << endl;
    for(int i = n ; i >= 1 ; --i)
    {
        if(a[i]*2==a[i+1]+a[i-1]) 
        fout << 1 << ' ';
        else
        fout << 0 << ' ';
    }
    return 0;
}</pre>
