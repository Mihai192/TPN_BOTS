<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("bete.in");
ofstream cout("bete.out");

int n , L , maxi , T[10001] , a[101] , rez[10001] , cnt , afis[10001];

void dinamica()
{
    for(int i = 1 ; i <= n ; i++)
    {
        for(int j = maxi ; j >= 0 ; j--)
            if(T[j] != 0 &amp;&amp; j + a[i] <= L) T[j + a[i]] = a[i] , rez[j + a[i]] = i;
        if(maxi + a[i] < L) maxi += a[i];
        else maxi = L;
    }
}

int main()
{
    cin >> n >> L;
    for(int i = 1 ; i <= n ; i++)
        cin >> a[i];

    T[0] = -1;
    dinamica();

    if(T[L] == 0) cout << "NU";
    else
    {
        cout << "DA\n";
        for(int i = L ; i != 0 ;)
            cnt++ , afis[cnt] = rez[i] , i -= T[i];

        cout << cnt << '\n';
        for(int i = cnt ; i >= 1 ; i--)
            cout << afis[i] << " ";

    }
}</pre>
