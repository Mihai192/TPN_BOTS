<p>Norocosul Gigel tocmai a primit în dar de la bunicul său, Nelu, o imensă plantaţie de pomi fructiferi. Fost profesor de geometrie, Nelu a plantat în mod riguros pomii fructiferi pe <code>m</code> rânduri paralele, iar pe fiecare rând a plantat exact câte <code>n</code> pomi fructiferi. Însă, din motive mai mult sau mai puţin obiective, domnul Nelu nu a plantat pe fiecare rând toţi pomii de acelaşi soi, ci din mai multe soiuri diferite. Soiurile de pomi plantaţi în livadă sunt codificate cu numere  naturale cuprinse între <code>1</code> şi <code>p</code>. </p>

<p>Cuprins de febra rigurozităţii matematice şi de cea a statisticii, Gigel a definit noţiunea de soi majoritar astfel: dacă pe un rând <code>k</code> format din <code>n</code> pomi fructiferi avem cel puţin <code>[n/2]+1</code> pomi de acelaşi soi <code>x</code>, atunci spunem că soiul <code>x</code> este soi majoritar pe rândul <code>k</code> (prin <code>[y]</code> se înţelege partea întreagă a numărului real <code>y</code>).</p>

<h1>Cerinţă</h1>

<p>Cunoscând numerele <code>m</code>, <code>n</code> şi <code>p</code>,  precum şi soiul fiecărui pom de pe fiecare rând al plantaţiei, ajutaţi-l pe Gigel să determine:</p>

<ol>
	<li>pe câte rânduri din livadă există un soi majoritar;</li>
	<li>care este cel mai mare număr de pomi de acelaşi soi plantaţi în poziţii consecutive pe un rând.</li>
</ol>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>livada.in</code> conține pe prima linie trei numere naturale <code>m</code>, <code>n</code> şi <code>p</code> cu semnificaţia din enunţ, iar pe fiecare dintre următoarele <code>m</code> linii se găsesc câte <code>n</code> numere, despărţite prin câte un spaţiu, reprezentând soiurile pomilor de pe rândul respectiv.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>livada.out</code> va conține două linii:</p>

<ol>
	<li>pe prima linie se va scrie un număr natural reprezentând numărul de rânduri din livadă pe care există un soi majoritar;</li>
	<li>pe a doua linie se va scrie un număr natural reprezentând cel mai mare număr de pomi de același soi plantaţi în poziţii consecutive pe un rând.</li>
</ol>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ m ≤ 100</code></li>
	<li><code>1 ≤ n ≤ 700.000</code></li>
	<li><code>1 ≤ m*n ≤ 700.000</code></li>
	<li><code>1 ≤ p ≤ 998.560.000</code></li>
	<li>Pe fiecare rând diferenţa dintre valoarea maximă şi cea minimă este cel mult <code>250.000</code>.</li>
	<li>Dacă doar valoarea de pe prima linie este corectă, se acordă 40% din punctaj. Dacă doar valoarea de pe a doua linie este corectă, se acordă 60% din punctaj. Dacă ambele valori sunt corecte, se acordă 100% din punctajul testului respectiv.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595360567&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1080%2Flivada&amp;flash=0&amp;wgl=1&amp;dt=1595360567664&amp;bpp=4&amp;bdt=215&amp;idt=118&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4072633463002&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360568&amp;ga_hid=483407848&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1554&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066004&amp;oid=3&amp;pvsid=2540623877795524&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1034%2Froata&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=ppyhCf0hae&amp;p=https%3A//www.pbinfo.ro&amp;dtd=124" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CP3Wu5-N3-oCFQyasgod45UHsQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>livada.in</code></p>

<pre contenteditable="true" editable="true">4 7 9
2 1 2 3 8 2 2
4 7 2 4 9 7 4
5 5 2 5 5 5 7
2 3 2 3 2 3 1</pre>

<p><code>livada.out</code></p>

<pre contenteditable="true" editable="true">2
3</pre>

<h1>Explicație</h1>

<p>Plantaţia este formată din <code>m=4</code> rânduri, iar pe fiecare rând avem câte <code>n=7</code> pomi. </p>

<p>Pentru ca un soi sa fie majoritar pe un rând trebuie ca pe acel rând să existe cel puţin <code>[7/2]+1 = 4</code> pomi din soiul respectiv.</p>

<p>Există soiuri majoritare pe două rânduri: primul şi al treilea.</p>

<p>Pe rândul al treilea exista <code>3</code> poziții consecutive în care se află pomi din același soi (soiul <code>5</code>).</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("livada.in");
ofstream cout("livada.out");
int a[700011];
int main()
{
    int n , m , k , lmax = -1 , c , f , cnt = 0;
    cin >> n >> m >> k;
    for(int i = 1 ; i <= n ; ++i)
    {
        int l = 0;
        cin >> a[1];
        int c = a[1];
        f = 1;
        for(int j = 2 ; j <= m ; ++j)
        {
            cin >> a[j];
            if(a[j] == c) f++;
            else
            {
                f--;
                if(f == 0)
                {
                    c = a[j];
                    f = 1;
                }
            }
        }
        f = 0;
        for(int j = 1 ; j <= m ; ++j)
            if(a[j] == c) f++;
        if(f > m/2) cnt++;
        for(int j = 2 ; j <= m ; ++j)
        {
            if(a[j] == a[j-1])
            {
                l++;
                if(l > lmax) lmax = l;
            }
            else l = 0;
        }
    }
    cout << cnt << endl << lmax +1;
    return 0;
}</pre>
