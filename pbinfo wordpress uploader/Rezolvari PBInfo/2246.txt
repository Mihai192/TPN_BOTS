<p>Domnul Eboda dorește să se angajeze la firma <b>Adobe</b>. La interviu el primește următoarea problemă. </p>

<h1>Cerința</h1>

<p>Se dă un șir de caractere format din litere și caracterele <code>*</code>, <code>+</code> și <code>-</code>. Domnul Eboda trebuie să determine câte subsecvențe de lungime <code>5</code> sunt anagrame ale cuvântului <code>ADOBE</code>. Regulile suplimentare sunt că nu se face distincție între literele mari și cele mici și în plus, caracterul <code>+</code> poate suplini oricare consoană, caracterul <code>-</code> suplinește orice vocală, iar <code>*</code> suplinește orice literă. Cu aceste reguli putem spune că următoarele secvențe de cinci caractere sunt anagrame ale cuvântului <code>adobe</code>: <code>aeobd</code>, <code>dBoAE</code>, <code>db---</code>, <code>Ae-++</code>, <code>*****</code>, <code>++---</code>, <code>ad*-+</code>.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură șirul de caractere.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran un singur număr natural reprezentând numărul de subsecvențe de lungime <code>5</code> care sunt anagrame ale cuvântului <code>ADOBE</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>Șirul va avea cel mult <code>100 000</code> de caractere și nu conține alte caractere în afara celor precizate în enunț.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357520&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2246%2Fadobe&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595357520587&amp;bpp=25&amp;bdt=236&amp;idt=157&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=1025133107697&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357521&amp;ga_hid=406597300&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2855657153796302&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2681%2Finversmax&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=cOhXCHMvxI&amp;p=https%3A//www.pbinfo.ro&amp;dtd=162" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CK3txPKB3-oCFQamsgodiAABfA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">ebodaE+m***++</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p>Cele patru subsecvențe sunt: <code>eboda</code>, <code>bodaE</code>, <code>odaE+</code> și <code>***++</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

char s[100001];
int f1[300] , f2[300];

bool egale(int cnt1 , int cnt2 , int cnt3)
{
    bool ok = true;
    for(int i = 97 ; i <= 122 ; ++i)
    {
        if(f1[i]>f2[i])
        {
            if(i==97 || i==101 || i==105 || i==111 || i==117)
            {
                if(cnt2)
                    cnt2--;
                else if(cnt3)
                    cnt3--;
                else
                    return 0;
            }
            else
            {
                if(cnt1)
                    cnt1--;
                else if(cnt3)
                    cnt3--;
                else
                    return 0;
            }
        }
    }
    return ok;
}

int main()
{
    int cnt1=0 , cnt2=0 , cnt3=0;
    cin >> s;
    int i = 0;
    f1[97]++;
    f1[100]++;
    f1[111]++;
    f1[98]++;
    f1[101]++;
    while(s[i]!='\0')
    {
        if((int) s[i] < 96 &amp;&amp; (s[i]!='+' &amp;&amp; s[i]!='-' &amp;&amp; s[i]!='*'))
            s[i]=(char)((int)s[i]+32);
        ++i;
    }
    i=0;
    int cnt = 0;
    for(i = 0 ; i < 5 ; ++i)
    {
        if(s[i]!='+' &amp;&amp; s[i]!='-' &amp;&amp; s[i]!='*')
            f2[(int)s[i]]++;
        else
        {
            if(s[i]=='+')
                cnt1++;
            else if(s[i]=='-')
                cnt2++;
            else
                cnt3++;
        }
    }
    if(egale(cnt1 , cnt2 , cnt3))
        {
            cnt++;
        }
    while(s[i]!='\0')
    {
        if(s[i-5]!='+' &amp;&amp; s[i-5]!='-' &amp;&amp; s[i-5]!='*')
            f2[(int)s[i-5]]--;
        else
        {
            if(s[i-5]=='+')
                cnt1--;
            else if(s[i-5]=='-')
                cnt2--;
            else
                cnt3--;
        }
        if(s[i]!='+' &amp;&amp; s[i]!='-' &amp;&amp; s[i]!='*')
            f2[(int)s[i]]++;
        else
        {
            if(s[i]=='+')
                cnt1++;
            else if(s[i]=='-')
                cnt2++;
            else
                cnt3++;
        }
        if(egale(cnt1 , cnt2 , cnt3))
        {
            cnt++;
        }
        i++;
    }
    cout << cnt;
    return 0;
}</pre>
