<h1>Cerința</h1>

<p>Gigel se joacă cu cuvinte (scrise cu litere din alfabetul englez, mari sau mici). El a asociat fiecărei litere din alfabet o valoare număr natural, pe care a numit-o <strong>valoarea literei</strong>. Apoi a definit valoarea unui cuvânt astfel: se calculează suma <code>S1</code> a valorilor literelor mici din cuvânt şi suma <code>S2</code> a valorilor literelor mari din cuvânt. Valoarea cuvântului va fi <code>S1 - S2</code>.</p>

<p>Cunoscându-se valoarea fiecărei litere din alfabet şi o listă de cuvinte, să se determine cuvântul cu valoarea maximă. Dacă există mai multe cuvinte de valoare maximă, se vor determina toate, în ordinea din lista dată.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>valori.in</code> conține pe prima linie numărul <code>26</code> de numere, reprezentând, în ordine, valorile literelor din alfabet, pe a doua linie numărul de cuvinte <code>n</code> iar pe următoarele <code>n</code> linii câte un cuvânt format din litere mari şi mici ale alfabetului englez.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>valori.out</code> va conține cuvintele de valoare maximă din lista dată, în ordinea din listă, fiecare cuvânt pe câte o linie.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>valorile literelor sunt numere naturale mai mici decât <code>1000</code></li>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>fiecare dintre cuvintele date conţine cel mult <code>255</code> caractere</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356945&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F856%2Fvalori&amp;flash=0&amp;wgl=1&amp;dt=1595356944952&amp;bpp=4&amp;bdt=232&amp;idt=213&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5912997821333&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356945&amp;ga_hid=379780143&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1164&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066717&amp;oid=3&amp;pvsid=250670386446749&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3543%2Fstringpushpop&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=A2BDvIBAmT&amp;p=https%3A//www.pbinfo.ro&amp;dtd=222" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNCxiuD_3uoCFT3huwgdOxsJQg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>valori.in</code></p>

<pre contenteditable="true" editable="true">2 7 7 3 9 8 9 6 3 9 6 6 6 5 5 8 2 6 6 1 5 6 9 4 7 3 
4
BaciL
AbAc
Aba
AbEcEdAr</pre>

<p><code>valori.out</code></p>

<pre contenteditable="true" editable="true">AbAc</pre>

<h1>Observaţie</h1>

<p>Valoarea unui cuvânt poate fi negativă. De exemplu, valoarea cuvântului <code>BaciL</code> este <code>(2+7+3)-(7+6)=-1</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cstring>
using namespace std;

ifstream cin("valori.in");
ofstream cout("valori.out");

int vec[30];
char m[1001][1001];

int main()
{
    for(int i = 0 ; i < 26 ; ++i)
        cin >> vec[i];
    int n;
    cin >> n;
    int max = -1000000;
    for(int f = 1 ; f <= n ; ++f)
    {
        char s[501];
        cin >> s;
        int i = 0;
        int s1=0 , s2=0;
        while(s[i]!='\0')
        {
            if(s[i]>='A' &amp;&amp; s[i]<='Z')
                s1+=vec[(int)s[i]-65];
            else
                s2+=vec[(int)s[i]-97];
            i++;
        }
        if(s2-s1>max)
            max=s2-s1;
        strcpy(m[f] , s);
    }
    for(int f = 1 ; f <= n ; ++f)
    {
        char s[501];
        strcpy(s , m[f]);
        int i = 0;
        int s1=0 , s2=0;
        while(s[i]!='\0')
        {
            if(s[i]>='A' &amp;&amp; s[i]<='Z')
                s1+=vec[(int)s[i]-65];
            else
                s2+=vec[(int)s[i]-97];
            i++;
        }
        if(s2-s1==max)
            cout << s << endl;
    }
    return 0;
}</pre>
