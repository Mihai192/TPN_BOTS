<p>Așa cum știm, lui Gigel îi place să se joace cu numerele. A scris pe caiet un număr, apoi a văzut că din acesta se pot extrage mai multe numere cu trei cifre consecutive. De exemplu, a scris pe caiet <code>20172017</code>; numerele cu trei cifre consecutive care se pot extrage sunt <code>201</code>, <code>172</code>, <code>720</code> și <code>201</code>. Gigel începe să-și pună diferite întrebări: care este cel mai mare număr cu trei cifre consecutive obținut? Dar cel mai mic? De câte ori apar ele? Unde apar? Care este cel mai mare număr de apariții a unui număr cu trei cifre?</p>

<h1>Cerința</h1>

<p>Fiind numărul un număr natural <code>n</code> și <code>n</code> numere naturale <code>x</code> (<code>100 ≤ x ≤ 4294967295</code>) să se determine:<br>
1. Cel mai mic și cel mai mare număr din trei cifre consecutive care apar în cele <code>n</code> numere, de câte ori apar ele, în ce număr <code>x[1]</code> apar prima dată și în ce număr <code>x[2]</code> apar ultima dată.<br>
2. Numerele din trei cifre consecutive care apar de cele mai multe ori în cele <code>n</code> numere.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>3cifre.in</code> conţine pe prima linie, separate printr-un spațiu, numărul natural <code>n</code>, reprezentând numărul de numere și cerința (<code>1</code> sau <code>2</code>). Pe cea de a doua linie sunt scrise cele <code>n</code> numere naturale <code>x[1] x[2] ... x[n]</code>, separate prin câte un spațiu.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>3cifre.out</code> va conține, pentru cerința <code>1</code>, pe prima linie patru valori naturale <code>nrmin nrapmin x1min x1max</code>, separate prin câte un spațiu, reprezentând numărul minim de trei cifre care apare, numărul de apariții a acestuia, numărul în care apare prima dată, respectiv numărul în care apare ultima dată, iar pe linia a doua alte patru valori naturale <code>nrmax nrapmax x2min x2max</code>, separate prin câte un spațiu, reprezentând numărul maxim de trei cifre care apare, numărul de apariții a acestuia, numărul în care apare prima dată, respectiv numărul în care apare ultima dată. Pentru cerința <code>2</code>, fișierul de ieșire va conține pe prima linie numărul maxim de apariții a numerelor din trei cifre consecutive care apar, iar pe linia a doua, separate prin câte un spațiu, numerele respective în ordine crescătoare.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 500000</code></li>
	<li><code>100 ≤ x[i] ≤ 4294967295</code></li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>3cifre.in</code></p>

<pre contenteditable="true" editable="true">7 1
415 5213 2017 666 12345678 10000013 13</pre>

<p><code>3cifre.out</code></p>

<pre contenteditable="true" editable="true">100 1 10000013 10000013
678 1 12345678 12345678</pre>

<h1>Exemplul 2:</h1>

<p><code>3cifre.in</code></p>

<pre contenteditable="true" editable="true">7 1
415 521013 206678 666 12345678 10101013 13</pre>

<p><code>3cifre.out</code></p>

<pre contenteditable="true" editable="true">101 4 521013 10101013
678 2 206678 12345678</pre>

<h1>Exemplul 3:</h1>

<p><code>3cifre.in</code></p>

<pre contenteditable="true" editable="true">7 2
1115 52113 2017 666 12345678 11101113 113</pre>

<p><code>3cifre.out</code></p>

<pre contenteditable="true" editable="true">3
111 113</pre>

<h3>Explicație</h3>

<p>Se observă că atât <code>111</code> cât și <code>113</code> apar de câte <code>3</code> ori.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("3cifre.in");
ofstream cout("3cifre.out");
long long int a[500000] , f[1002];
int main()
{
    int n , cer;
    long long int mini = 1000 , maxi = 99 , nrmin1 = 0 , nrmin2 = 0 , nrmax1 = 0 , nrmax2 = 0 , fmin = 0 , fmax = 0;
    cin >> n >> cer;
    if(cer == 1)
    {
        for(int i = 0 ; i < n ; ++i)
        {
            cin >> a[i];
            long long int x=a[i];
            while(x > 99)
            {
                while((x/100)%10==0) x /= 10;
                if(x%1000 < mini)
                {
                    mini=x%1000;
                    nrmin1=a[i];
                    fmin=0;
                }
                if(x%1000 == mini)
                {
                    fmin++;
                    nrmin2=a[i];
                }
                if(x%1000 > maxi)
                {
                    maxi=x%1000;
                    nrmax1=a[i];
                    fmax=0;
                }
                if(x%1000 == maxi)
                {
                    fmax++;
                    nrmax2=a[i];
                }
                x /= 10;
            }
        }
        cout << mini << ' ' << fmin << ' ' << nrmin1 << ' ' << nrmin2 << endl;
        cout << maxi << ' ' << fmax << ' ' << nrmax1 << ' ' << nrmax2;
    }
    if(cer == 2)
    {
        for(int i = 0 ; i < n ; ++i)
        {
            cin >> a[i];
            long long int x = a[i];
            while(x > 99)
            {
                while((x/100)%10==0) x/=10;
                f[x%1000]++;
                x /= 10;
            }
        }
        maxi=0;
        for(int i = 100 ; i <= 999 ; ++i)
            if(f[i]>maxi)maxi=f[i];
        cout << maxi << endl;
        for(int i = 100 ; i <= 999 ; ++i)
        {
            if(f[i] == maxi)
                cout << i << " ";
        }
    }
    return 0;
}</pre>
