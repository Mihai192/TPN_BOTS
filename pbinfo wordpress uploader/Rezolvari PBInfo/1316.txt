<h1>Cerința</h1>

<ul>
	<li>Un număr natural nenul este <code>prim</code>, dacă are exact doi divizori (ex. <code>7</code>).</li>
	<li>Un număr natural nenul se va numi <code>pătrat prim</code>, dacă este pătratul unui număr prim (ex. <code>49 = 7 * 7</code>).</li>
	<li>Un număr natural nenul se va numi <code>aproape prim</code>, dacă este produsul a două numere prime distincte (ex. <code>10 = 2 * 5</code>).</li>
	<li>Un număr natural nenul ce nu se încadrează în niciuna din cazurile de mai sus, se numeşte <code>compus</code> (ex. <code>8=2*2*2</code>, <code>100=2*2*5*5</code>).</li>
</ul>

<p>Se citeşte un număr natural <code>n</code>. Să se identifice din ce categorie de mai sus face parte.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran unul dintre mesajele: <code>prim</code>, <code>aproape prim</code>, <code>patrat prim</code> sau <code>compus</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 &lt; n ≤ 2.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595359193&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1316%2Fprim-aproapeprim-patratprim-compus&amp;flash=0&amp;wgl=1&amp;dt=1595359193367&amp;bpp=6&amp;bdt=230&amp;idt=145&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5385130754598&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595359193&amp;ga_hid=1501022222&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1098&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1081368348138777&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F380%2Faprim1&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=CEVKeEvMJe&amp;p=https%3A//www.pbinfo.ro&amp;dtd=154" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CObYmJCI3-oCFYrxsgodixIHqg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">20</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">compus</pre>

<h3>Explicație</h3>

<p>Numărul <code>20=2*2*5</code>, deci este număr compus.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cmath>
using namespace std;

int prim(int n);

int main ()
{
    int n;
    cin >> n;
    int i = sqrt(n);
    if (prim(n)==1)
        cout << "prim";
    else if (prim(n)==2)
        cout << "aproape prim";
    else if (i*i==n &amp;&amp; prim(i)==1)
    {
            cout << "patrat prim";
    }
    else
        cout << "compus";
    return 0;
}
int prim(int n)
{
    int cnt=0;
    for (int i = 1 ; i * i <= n; ++i)
    {
        if (n%i==0)
            cnt+=2;
        if (i*i==n)
            cnt--;
    }
    if (cnt==2)
        return 1;
    else if (cnt==4)
        return 2;
    else
        return 0;
}</pre>
