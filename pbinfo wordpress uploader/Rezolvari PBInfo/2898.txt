<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("nave.in");
ofstream cout("nave.out");

int n , m , t , a[102][102] , x , y , val , maxi , lin , col;

int sum(int i , int j)
{
    int s = 0;
    int i1 = i , j1 = j;
    while(i1 >= 1 &amp;&amp; j1 >= 1)
    {
        s += a[i1][j1];
        i1--;
        j1--;
    }
    int i2 = i , j2 = j;
    while(i2 >= 1 &amp;&amp; j2 <= m)
    {
        s += a[i2][j2];
        i2--;
        j2++;
    }
    int i3 = i , j3 = j;
    while(i3 <= n &amp;&amp; j3 >= 1)
    {
        s += a[i3][j3];
        i3++;
        j3--;
    }
    int i4 = i , j4 = j;
    while(i4 <= n &amp;&amp; j4 <= m)
    {
        s += a[i4][j4];
        i4++;
        j4++;
    }
    return s;
}

int main()
{
    cin >> n >> m >>t;
    for(int i = 1 ; i <= t ; i++)
    {
        cin >> x >> y >> val;
        a[x][y] = val;
    }
    for(int i = 1 ; i <= n ; i++)
        for(int j = 1 ; j <= m ; j++)
            if(a[i][j] == 0 &amp;&amp; sum(i , j) >= maxi) maxi = sum(i , j) , lin = i , col = j;
    cout << maxi << " " << lin << " " << col;
}</pre>
