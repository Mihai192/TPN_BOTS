<h1>Cerinţa</h1>

<p>Să se scrie un program care citeşte un număr natural <code>n</code> şi determină factorul care apare în descompunerea în factori primi a lui <code>n</code> la puterea cea mai mare.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul prim <code>p</code>, cu semnificaţia precizată.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 &lt; n &lt; 2.100.000.000</code></li>
	<li>dacă în descompunerea în factori primi a lui <code>n</code> apar mai mulţi factori la puterea maximă, se va afişa cel mai mare dintre ei</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595158768&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F63%2Ffactorizare1&amp;flash=0&amp;wgl=1&amp;dt=1595158768114&amp;bpp=2&amp;bdt=201&amp;idt=106&amp;shv=r20200715&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2556369114227&amp;frm=20&amp;pv=1&amp;ga_vid=1891791287.1595158629&amp;ga_sid=1595158768&amp;ga_hid=411665384&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=16&amp;u_java=0&amp;u_h=1440&amp;u_w=2560&amp;u_ah=1345&amp;u_aw=2560&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1000&amp;biw=1200&amp;bih=1222&amp;scr_x=0&amp;scr_y=0&amp;eid=21066109%2C21066111%2C21066358%2C42530558%2C42530560&amp;oid=3&amp;pvsid=185058374231247&amp;pem=303&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F306%2Fzerouri&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C2560%2C23%2C1200%2C1301%2C1200%2C1222&amp;vis=2&amp;rsz=%7Co%7CeEr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8208&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;fsb=1&amp;xpc=81IGeZ41tJ&amp;p=https%3A//www.pbinfo.ro&amp;dtd=110" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-google-query-id="CMCi-b2d2eoCFWXFuwgdqb4EXw" data-load-complete="true"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">405</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">3</pre>

<h1>Explicație</h1>

<p>405 = 3 <sup>4</sup> * 5 <sup>1</sup> . Astfel, factorul care apare la puterea cea mai mare este 3</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cstring>
using namespace std;

ifstream cin("baza.in");
ofstream cout("baza.out");

void inmultire(int a[] , int&amp; n , int x)
{
    int t = 0;
    for(int i = 1 ; i <= n ; ++i)
    {
        a[i] = a[i] * x + t;
        t = a[i] / 10;
        a[i] %= 10;
    }
    while(t)
    {
        a[++n]=t%10;
        t/=10;
    }
}

void adunare(int a[] , int &amp;n , int x)
{
    int t = a[1] + x;
    a[1]=t%10;
    t/=10;
    int i = 2;
    while(t &amp;&amp; i <= n)
    {
        int s = a[i] + t;
        a[i]=s%10;
        t = s/10;
        i++;
    }
    while(t)
    {
        a[++n]=t%10;
        t/=10;
    }
}

int main()
{
    char s[51];
    cin >> s;
    int a[1500]={0} , n = 1;
    adunare(a , n , s[0]-'a');
    for(int i = 1 ; i < strlen(s) ; ++i)
        inmultire(a , n , 26) , adunare(a , n , s[i]-'a');
    for(int i = n ; i >=  1; --i)
        cout << a[i];
    return 0;
}</pre>
