<p>Fiind date două numere <code>a</code> şi <code>b</code>, îl numim pe <code>a</code> sufix al lui <code>b</code> dacă <code>a</code> este egal cu <code>b</code> sau dacă <code>b</code> se poate obţine din a prin alipirea la stânga a unor noi cifre.<br>
<strong>Exemplu</strong>: <code>12</code> este sufix al lui <code>12</code>, iar <code>15</code> este sufix al lui <code>31415</code>.</p>

<h1>Cerința</h1>

<p>Se dă un număr natural <code>x</code> și un șir de numere naturale. Să se determine ultimul număr din șir care îl care ca sufix pe <code>x</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>nrsufix.in</code> conține pe prima linie numărul <code>x</code>, iar pe următoarele linii numerele din șir.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>nrsufix.out</code> va conține pe prima linie ultimul număr din șir care îl care ca sufix pe <code>x</code>. Dacă în șir nu există nici un astfel de număr, se va afișa <code>nu exista</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>toate numerele din fișierul de intrare au cel puțin una și cel mult nouă cifre</li>
	<li>șirul dat va conține cel puțin două și cel mult <code>1.000.000</code> de elemente</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display: inline-block; width: 728px; height: 0px;" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display: inline-table; border: none; height: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 728px; background-color: transparent;"><ins id="aswift_1_anchor" style="display: block; border: none; height: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 728px; background-color: transparent; overflow: hidden; opacity: 0;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595359847&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F803%2Fnrsufix&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595359847474&amp;bpp=67&amp;bdt=262&amp;idt=172&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=1710093111679&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595359848&amp;ga_hid=964830775&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1088&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066624%2C21066715&amp;oid=3&amp;pvsid=2785535464541051&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1353%2Faparitiicifra&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=dWF2APRS9p&amp;p=https%3A//www.pbinfo.ro&amp;dtd=177" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-google-query-id="CJ-fi8iK3-oCFduEsgodvFUMKA" data-load-complete="true"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>nrsufix.in</code></p>

<pre contenteditable="true" editable="true">12
3445 89312 1245 12 67120 312 1234578</pre>

<p><code>nrsufix.out</code></p>

<pre contenteditable="true" editable="true">312</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream fin("nrsufix.in");
ofstream fout("nrsufix.out");
int put(int n)
{
    int p=1;
    while(n!=0)
    {
        p=p*10;
        n=n/10;
    }
    return p;
}
int main()
{
    int n,xmax=0,x;
    fin>>n;
    while(fin>>x)
    {
        fin>>x;
        if(x%put(n)==n) xmax=x;
    }
    if(xmax==0) fout<<"nu exista";
    else
    fout<<xmax;
    return 0;
}</pre>
