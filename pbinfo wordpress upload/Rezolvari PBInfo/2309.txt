<p>La o competiție au participat <code>N</code> concurenți. Fiecare dintre ei a primit un număr de concurs astfel încât să nu existe concurenți cu același număr. Numerele de concurs aparțin mulțimii <code>{1,2,...,N}</code>. Din păcate, clasamentul final a fost pierdut, iar comisia își poate aduce aminte doar câteva relații între unii participanți (de genul “participantul cu numărul <code>3</code> a ieșit înaintea celui cu numărul <code>5</code>”). </p>

<h1>Cerința</h1>

<p>Șeful comisiei are nevoie de un clasament final și vă cere să-l ajutați determinând primul clasament în ordine lexicografică ce respectă relațiile pe care și le amintește comisia.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>competitie.in</code> conține pe prima linie doua numere naturale nenule <code>N</code> și <code>M</code>, reprezentând numărul concurenților, respectiv numărul relațiilor pe care și le amintește comisia. Pe fiecare din următoarele <code>M</code> linii se află câte două numere naturale nenule <code>i</code> și <code>j</code>, având semnificația: concurentul cu numărul de concurs <code>i</code> a fost în clasament înaintea concurentului cu numărul de concurs <code>j</code>. </p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>competitie.out</code> va conține pe prima linie clasamentul sub forma unui sir de numere naturale nenule <code>nr1</code>, <code>nr2</code>, …, <code>nrN</code>, separate prin câte un spațiu, reprezentând numerele de concurs ale concurenților, în ordine de la primul clasat la ultimul.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N, M ≤ 1000</code></li>
	<li>Se garantează corectitudinea datelor de intrare și faptul ca există totdeauna o soluție.</li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>competitie.in</code></p>

<pre contenteditable="true" editable="true">3 1
1 2</pre>

<p><code>competitie.out</code></p>

<pre contenteditable="true" editable="true">1 2 3</pre>

<h1>Exemplul 2:</h1>

<p><code>competitie.in</code></p>

<pre contenteditable="true" editable="true">4 2
2 1
3 4</pre>

<p><code>competitie.out</code></p>

<pre contenteditable="true" editable="true">2 1 3 4</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("competitie.in");
ofstream cout("competitie.out");

int a[1005] , b[1005] , f[1005];
int main()
{
    int n , m;
    cin >> n >> m;
    for(int i = 1 ; i <= m ; i++)
    {
        cin >> a[i] >> b[i];
        f[b[i]]++;
    }
    for (int i = 1; i <= n; i ++)
    {
        int j = 1;
        while(f[j])  j++;
        cout << j << ' ';
        int nr = j;
        f[nr] = -1;

        for (j = 1; j <= n; j ++)
            if (f[j] != -1)f[j] = 0;

        for (j = 1; j <= m; j ++)
            if (a[j] == nr)  a[j] = b[j] = 0;
        for (j = 1; j <= m; j ++) f[b[j]]++;
    }
    return 0;
}</pre>
