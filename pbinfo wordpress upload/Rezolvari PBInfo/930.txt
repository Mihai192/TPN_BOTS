<h1>Cerința</h1>

<p>Se dau două segmente în plan, specificate prin coordonatele capetelor. Să se verifice dacă au cel puțin un punct comun.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>intersectiesegmente.in</code> conține pe prima linie <code>8</code> numere naturale separate prin spații, respectiv: <code>X1</code>, <code>Y1</code>, <code>X2</code>, <code>Y2</code>, <code>X3</code>, <code>Y3</code>, <code>X4</code>, <code>Y4</code>. Primul segment are capetele <code>(X1, Y1)</code> și <code>(X2, Y2)</code>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>intersectiesegmente.out</code> va conține pe prima linie <code>DA</code> (când segmentele se intersectează) sau <code>NU</code> (în caz contrar).</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>Numerele din fișierul de intrare sunt întregi cuprinse între <code>-1001</code> și <code>1001</code>.</li>
	<li>Ambele segmente au lungimea nenulă.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595353342&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F930%2Fintersectiesegmente&amp;flash=0&amp;wgl=1&amp;dt=1595353342659&amp;bpp=19&amp;bdt=217&amp;idt=161&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=324308251946&amp;frm=20&amp;pv=1&amp;ga_vid=1744050990.1595352838&amp;ga_sid=1595353343&amp;ga_hid=1387155608&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=814&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=647&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2906223346162389&amp;pem=168&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F931%2Fsortareunghi&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C770%2C1200%2C647&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=4w2g96MopA&amp;p=https%3A//www.pbinfo.ro&amp;dtd=168" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLigrqry3uoCFZeHsgodt9wJQQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>intersectiesegmente.in</code></p>

<pre contenteditable="true" editable="true">-1 -1 1 1 -1 1 1 -1</pre>

<p><code>intersectiesegmente.out</code></p>

<pre contenteditable="true" editable="true">DA</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream fin("intersectiesegmente.in");
ofstream fout("intersectiesegmente.out");

int X1, Y1, X2, Y2, X3, Y3, X4, Y4, d1, d2, d3, d4;
int det(int X1, int Y1, int X2, int Y2, int X3, int Y3)
{
    return (X2-X1)*(Y3-Y1) - (X3-X1)*(Y2-Y1);
}

int pctsegm(int x1, int y1, int x2, int y2, int x3, int y3)
{
    int d = det(x1, y1, x2, y2, x3, y3);
    if (d!=0)
        return 0;
    if (x1 == x3 &amp;&amp; y1 == y3)
        return 1;
    if (x2 == x3 &amp;&amp; y2 == y3)
        return 1;
    if ((x3-x1) * (x3-x2) < 0 || (y3-y1) * (y3-y2) < 0)
        return 1;
    else
        return 0;
}

int main()
{
    fin >> X1 >> Y1 >> X2 >> Y2 >> X3 >> Y3 >> X4 >> Y4;
    if (pctsegm(X1, Y1, X2, Y2, X3, Y3))
        fout << "DA";
    else
    if (pctsegm(X1, Y1, X2, Y2, X4, Y4))
        fout << "DA";
    else
    if (pctsegm(X3, Y3, X4, Y4, X1, Y1))
        fout << "DA";
    else
    if (pctsegm(X3, Y3, X4, Y4, X2, Y2))
        fout << "DA";
    else
    {
        d1 = det(X3, Y3, X4, Y4, X1, Y1);
        d2 = det(X3, Y3, X4, Y4, X2, Y2);
        d3 = det(X1, Y1, X2, Y2, X3, Y3);
        d4 = det(X1, Y1, X2, Y2, X4, Y4);

        if (d1 * d2 < 0 &amp;&amp; d3 * d4 < 0)
            fout << "DA";
        else
            fout << "NU";
    }
}</pre>
