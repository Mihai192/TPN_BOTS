<p>Se consideră un șir de caractere format din caractere literă mică ale alfabetului englez</p>

<h1>Cerința</h1>

<p>Să se determine <em><strong>lungimea minimă</strong></em> a unui subșir al șirului dat, subșir ce folosește toate literele întâlnite în șirul inițial.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură șirul de caractere.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran lungimea subșirul cerut.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ lungime șir ≤ 10000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display: inline-block; width: 728px; height: 0px;" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display: inline-table; border: none; height: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 728px; background-color: transparent;"><ins id="aswift_1_anchor" style="display: block; border: none; height: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 728px; background-color: transparent; overflow: hidden; opacity: 0;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357397&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2132%2Fmin-subsir&amp;flash=0&amp;wgl=1&amp;dt=1595357397341&amp;bpp=7&amp;bdt=270&amp;idt=201&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=8501008359437&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357397&amp;ga_hid=43335946&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=988&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066004&amp;oid=3&amp;pvsid=4331207859394094&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2615%2Fcaesarcrypt&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=hrf6RqwQfq&amp;p=https%3A//www.pbinfo.ro&amp;dtd=209" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-google-query-id="CPKA5beB3-oCFSjLuwgdygkPUQ" data-load-complete="true"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">aadcaabcbacadca</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">5</pre>

<h3>Explicație</h3>

<p>Sunt folosite literele: <code>a,b,c,d</code>.<br>
Subșiruri de lungime minimă care folosesc toate literele: <code>dcaab</code>, <code>bacad</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int a[30];

int main()
{
    string s;
    cin >> s;
    unsigned int nrlitdif=0,i,j=0,Min=s.size(),k=0;
    for (i = 0; i<s.size(); i++)
        if (!a[s[i]-'a'])
        {
            a[s[i]-'a'] = -1;
            nrlitdif++;
        }
    for (i = 0; i<s.size();)
    {
        a[s[i]-'a']++;
        if (!a[s[i]-'a'])
            k++;
        if (k == nrlitdif)
        {
            while (a[s[j]-'a']!=0)
            {
                a[s[j]-'a']--;
                j++;
            }
            Min = min(Min,i-j+1);
        }
        i++;
    }
    cout << Min;
}</pre>
