<p>Andrei vizitează un vechi castel cu mai multe camere. El are la dispoziţie un număr <code>n</code> de coduri de acces. Fiecare cod este un număr natural format din cel mult <code>9</code> cifre. Pentru a deschide uşa unei camere, Andrei trebuie să afle ce cheie să aleagă, dintr-un set dat. Fiecare cheie este notată cu o cifră. Cheia ce deschide uşa din prima cameră este notată cu cifra ce se repetă de cele mai multe ori în codurile de acces.</p>

<h1>Cerința</h1>

<p>Scrieţi un program care determină cheia ce va deschide prima uşă, cunoscându-se numărul <code>n</code>, cele <code>n</code> coduri de acces, numărul de chei, notat cu <code>k</code> și valorile celor <code>k</code> chei primite.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>castel.in</code> conţine pe prima linie numărul <code>n</code>. Linia a doua din fişier conţine <code>n</code> numere naturale, ce reprezintă codurile de acces. Linia a treia conţine numărul natural <code>k</code> ce reprezinta numărul de chei primite. Linia a patra din fişier conţine <code>k</code> cifre, ce reprezintă valorile cheilor. </p>

<h1>Date de ieșire</h1>

<p>Fişierul de ieşire <code>castel.out</code> conţine pe prima linie două numere naturale, separate  printr-un singur spaţiu. Primul număr din fişier reprezintă cheia ce va deschide  uşa din prima cameră si al doilea număr reprezinta numărul de repetări al cheii în şirul codurilor de acces.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ k ≤ 10</code></li>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>Fiecare cod de acces este un număr cu cel mult <code>9</code> cifre</li>
	<li>Fiecare cheie este notată cu o cifră</li>
	<li>Cheile au valori distincte şi sunt date în ordine crescătoare</li>
	<li>O uşă poate fi deschisă de o singură cheie</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595361109&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1472%2Fcastel&amp;flash=0&amp;wgl=1&amp;dt=1595361109466&amp;bpp=8&amp;bdt=216&amp;idt=234&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=637849198092&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361110&amp;ga_hid=930100886&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1398&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3367793113129130&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2071%2Ftriunghiuri2&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=ldYFgbh69J&amp;p=https%3A//www.pbinfo.ro&amp;dtd=251" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKqh76GP3-oCFTDGuwgdxngBtg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>castel.in</strong></p>

<pre contenteditable="true" editable="true">5
1243 527 89722 6232 678
3
2 5 7</pre>

<p><strong>castel.out</strong></p>

<pre contenteditable="true" editable="true">2 6</pre>

<h3>Explicație</h3>

<p>Dintre cele 3 chei date, cheia ce apare de cele mai multe ori, în şirul codurilor de pe linia a doua, este <code>2</code> şi apare de <code>6</code> ori.Cheia <code>5</code> apare o dată, iar cheia <code>7</code> apare de <code>3</code> ori.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("castel.in");
ofstream cout("castel.out");
int main()
{
    int n , x , f[11]={0} , y , m , t = 0 , maxi = 0;
    cin >> n;
    for(int i = 0 ; i < n ; ++i)
    {
        cin >> x;
        while(x != 0)
        {
            f[x%10]++;
            x /= 10;
        }
    }
    cin >> m;
    for(int i = 0 ; i < m ; ++i)
    {
        cin >> y;
        if(f[y] > maxi)
        {
            maxi = f[y];
            t = y;
        }
    }
    cout << t <<" "<< maxi;
}</pre>
