<h1>Cerința</h1>

<p>Se consideră un fişier care conţine informaţii despre mai multe persoane, sub o formă nestructurată. Informaţiile sunt dispuse pe linii de maxim <code>200</code> de caractere şi pot conţine <span class="caps">CNP</span>-uri valide. Ştiind că <span class="caps">CNP</span>-ul unei persoane este un şir de exact <code>13</code> cifre consecutive, scrieţi un program care determină şi scrie în fişierul de ieșire, pe linii distincte, toate <span class="caps">CNP</span>-urile extrase din text. Dacă în fișierul de intrare nu se află niciun <span class="caps">CNP</span>, în fișierul de ieșire se va afișa numai valoarea <code>0</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>cnp.in</code> conține informațiile date.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>cnp.out</code> va conține <span class="caps">CNP</span>-urile determinate, câte unul pe o linie, sau valoarea <code>0</code> dacă în fișierul de intrare nu există <span class="caps">CNP</span>-uri.</p>

<h1>Exemplul 1 </h1>

<p><code>cnp.in</code></p>

<pre contenteditable="true" editable="true">Popescu Grigore, 14 ani, 1991212122334;
Gigel  Banu - 1031102453435, Bujorului 7;
Dana Marin: 2690405358687, fara viza, 2450609987654  -
Jane Doe</pre>

<p><code>cnp.out</code></p>

<pre contenteditable="true" editable="true">1991212122334
1031102453435
2690405358687
2450609987654</pre>

<h1>Exemplul 2</h1>

<p><code>cnp.in</code></p>

<pre contenteditable="true" editable="true">Popescu Grigore, 14 ani, 1991212134;
Gigel  Banu - 103110245Bujorului 7;
Dana Marin: 269-04-05-358687, fara viza, 2+450609+987654 -
Jane Doe</pre>

<p><code>cnp.out</code></p>

<pre contenteditable="true" editable="true">0</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cstring>
using namespace std;

ifstream cin("cnp.in");
ofstream cout("cnp.out");

int main()
{
    char s[200];
    int cnt=0;
    while(cin >> s)
    {
        int i = 0;
        int c = 0;
        while(s[i]!='\0')
        {
            if(s[i]!='0' &amp;&amp; s[i]!='1' &amp;&amp; s[i]!='2' &amp;&amp; s[i]!='3' &amp;&amp; s[i]!='4' &amp;&amp; s[i]!='5' &amp;&amp; s[i]!='6' &amp;&amp; s[i]!='7' &amp;&amp; s[i]!='8' &amp;&amp; s[i]!='9')
            {  c=0; }
            else
                c++;
            if(c==13 &amp;&amp; s[i+1]!='0' &amp;&amp; s[i+1]!='1' &amp;&amp; s[i+1]!='2' &amp;&amp; s[i+1]!='3' &amp;&amp; s[i+1]!='4' &amp;&amp; s[i+1]!='5' &amp;&amp; s[i+1]!='6' &amp;&amp; s[i+1]!='7' &amp;&amp; s[i+1]!='8' &amp;&amp; s[i+1]!='9')
                break;
            i++;
        }
        int j = i - 13 + 1;
        if(c==13)
            cnt++;
        if(c==13)
        {
            while(j <= i)
            {
                cout << s[j];
                j++;
            }
            cout << endl;
        }
    }
    if(cnt==0)
        cout << 0;
    return 0;
}</pre>
