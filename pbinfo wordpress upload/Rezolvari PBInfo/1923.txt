<h1>Cerința</h1>

<p>Afişaţi, în ordine crescătoare, toate numerele dintr-un anumit interval care au toate cifrele egale.<br>
Sunt două tipuri de cerinţe:<br>
1. se dau <code>a</code> şi <code>b</code> si se cer toate numerele din intervalul <code>a</code>, <code>b</code> (inclusiv, eventual, capetele).<br>
2. Se da <code>x</code> si se cer toate numerele cu maxim <code>x</code> cifre.</p>

<h1>Date de intrare</h1>

<p>Din fişierul <code>egale.in</code> se citeşte mai întâi un număr <code>T</code>. Dacă <code>T</code> este <code>1</code> pe a doua linie sunt două numere <code>a</code> şi <code>b</code>, separate prin spaţiu. Dacă <code>T</code> este <code>2</code>, pe a doua linie va fi numărul <code>x</code>.</p>

<h1>Date de ieșire</h1>

<p>In fişierul <code>egale.out</code> se scriu, pe un rând numerele cerute separate prin câte un spaţiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 &lt;= a &lt;= b &lt;= 10</code><sup><code>17</code></sup></li>
	<li><code>1&lt;=x&lt;=100</code></li>
	<li>Pentru <code>20%</code> din punctaj avem <code>T = 1</code> şi <code>1 &lt;= a, b &lt;= 10</code><sup><code>4</code></sup></li>
	<li>Pentru încă <code>20%</code> din punctaj avem <code>T = 1</code> şi <code>10</code><sup><code>8</code></sup> <code> &lt;= a, b &lt;= 10</code><sup><code>9</code></sup></li>
	<li>Pentru încă <code>10%</code> din punctaj avem <code>T = 1</code> şi <code>a, b &gt; 10</code><sup><code>9</code></sup></li>
	<li>Pentru <code>50%</code> din punctaj avem <code>T=2</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595362339&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1923%2Fegale&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595362339456&amp;bpp=28&amp;bdt=249&amp;idt=144&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=1072852498860&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595362340&amp;ga_hid=1900763498&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1194&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066623&amp;oid=3&amp;pvsid=3727208424799482&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1981%2Fdivizorisir&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=lrfR4SLknB&amp;p=https%3A//www.pbinfo.ro&amp;dtd=150" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COy0qOyT3-oCFYvMsgod9w0Hgg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>egale.in</code></p>

<pre contenteditable="true" editable="true">1
8 30</pre>

<p><code>egale.out</code></p>

<pre contenteditable="true" editable="true">8 9 11 22</pre>

<p><code>egale.in</code></p>

<pre contenteditable="true" editable="true">2
2</pre>

<p><code>egale.out</code></p>

<pre contenteditable="true" editable="true">1 2 3 4 5 6 7 8 9 11 22 33 44 55 66 77 88 99</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cassert>
using namespace std;

ifstream fin("egale.in");
ofstream fout("egale.out");

int main() 
{
    int op;
    fin >> op;
    assert(op == 1 || op == 2);
    if (op == 1) {
        long long a, b;
        fin >> a >> b;
        assert(a <= b);
        long long curr = 1;
        while (curr <= b) {
            for (int i = 1; i <= 9; ++i)
                if (a <= i*curr &amp;&amp; i*curr <= b)
                    fout << i*curr << " ";
            curr = curr*10 + 1;
        }
        fout << "\n";
    }
    else {
        int x;
        fin >> x;
        assert(x <= 100);

        for (int nrCif = 1; nrCif <= x; ++nrCif) {
            for (int cif = 1; cif <= 9; ++cif) {
                for (int i = 1; i <= nrCif; ++i)
                    fout << cif;
                fout << " ";
            }
        }

        fout << "\n";
    }

    return 0;
}</pre>
