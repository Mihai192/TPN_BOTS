<h1>Cerința</h1>

<p>Se construiește un număr natural <code>N</code> ale cărui prime <code>51</code> cifre sunt:<br>
<code>N = 112233445566778899100111122133144155166177188199200......</code></p>

<p>Deduceți regula prin care se construiește numărul <code>N</code> și stabiliți care este cea de a <code>K</code>-a cifră din scrierea acestui număr.</p>

<p>Scrieţi un program care citeşte numărul <code>K</code> şi care determină cea de a <code>K</code>-a cifră din scrierea lui <code>N</code>.</p>

<h1>Date de intrare</h1>

<p>Programul citește din fișierul <code>kcifra.in</code>, de pe prima linie, numărul natural nenul <code>K</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul scrie în fişierul <code>kcifra.out</code>, pe prima linie, un număr natural (o cifră)  reprezentând cea de a <code>K</code>-a cifră  din scrierea numărului <code>N</code> construit.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ K ≤ 588888</code></li>
	<li><code>K</code> număr natural</li>
</ul>

<h1>Exemplul 1:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">10</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">5</pre>

<h3>Explicație</h3>

<p>Primele <code>10</code> cifre ale lui <code>N</code> sunt: 1 1 2 2 3 3 4 4 5 <code>5</code>.</p>

<h1>Exemplul 2:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">51</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">0</pre>

<h3>Explicație</h3>

<p>Primele <code>51</code> cifre ale lui <code>N</code> sunt: <code>112233445566778899100111122133144155166177188199200</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("kcifra.in");
ofstream cout("kcifra.out");

short a[588889];

int main()
{
    int n;
    cin >> n;
    int cnt=0;
    int cif=1;
    for(int i = 1 ; i <= 588888 ; i+=2)
    {
        if(cnt==0)
        a[i]=a[i+1]=cif , cif++;
        else
        {
                short v[10];
                int p = 0;
                int ccnt=cnt;
                while(cnt)
                {
                    v[p]=cnt%10;
                    p++;
                    cnt/=10;
                }
                cnt=ccnt;    
                for(int j = p - 1 ; j >= 0 ; --j)
                    a[i]=v[j] , i++;
            a[i+1]=a[i]=cif;
            cif++;
        }
        if(cif>9)
            cif = 0 , cnt++;
    }
    cout << a[n];
    return 0;    
}</pre>
