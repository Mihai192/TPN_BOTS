<p>Cercetătorii ce lucrează la programul <span class="caps">SETI</span> au recepţionat două transmisii de date foarte ciudate, date care ar putea veni din partea unor civilizaţii extraterestre. Primul set de date este format din <code>10</code> caractere distincte, date în ordinea lor lexicografică, ce formează alfabetul extraterestru. A doua transmisie conţine cuvinte din exact <code>4</code> caractere.</p>

<h1>Cerința</h1>

<p>Cercetătorii trebuie să ordoneze lexicografic cuvintele primite în a doua transmisie (conform alfabetului extraterestru).</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>seti.in</code> conţine pe prima linie cele <code>10</code> caractere ale alfabetului, iar pe fiecare din următoarele linii câte un cuvânt.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>seti.out</code> va conţine cuvintele ordonate, câte unul pe linie.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>În fişier nu sunt mai mult de <code>200 000</code> de cuvinte, iar caracterele sunt literele mici ale alfabetului englez.</li>
	<li>Datele de intrare sunt corecte.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595356875&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2416%2Fseti&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595356875091&amp;bpp=34&amp;bdt=251&amp;idt=200&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=65033740858&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356875&amp;ga_hid=996534271&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1238&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066357&amp;oid=3&amp;pvsid=3395729541024244&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1111%2Fzimeria&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=cZ2nia2xiH&amp;p=https%3A//www.pbinfo.ro&amp;dtd=205" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CP664r7_3uoCFW9GkQUdNWcOXw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>seti.in</code></p>

<pre contenteditable="true" editable="true">abcdefghij
aaaa
fgaa
aabc
iihf</pre>

<p><code>seti.out</code></p>

<pre contenteditable="true" editable="true">aaaa
aabc
fgaa
iihf</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("seti.in");
ofstream cout("seti.out");

int f[10][10][10][10];
char s[11];

int poz(char ch)
{
    int i = 0;
    while(s[i]!='\0')
    {
        if(s[i]==ch)
            return i;
        i++;
    }
}

int main()
{
    cin >> s;
    char a , b , c , d;
    while(cin >> a)
    {
        cin >> b >> c >> d;
        f[poz(a)][poz(b)][poz(c)][poz(d)]++;
    }
    for(int i = 0 ; i <= 9 ; ++i)
        for(int j = 0 ; j <= 9 ; ++j)
            for(int k = 0 ; k <= 9 ; ++k)
                for(int t = 0 ; t <= 9 ; ++t)
                    if(f[i][j][k][t])
                        for(int g = 0 ; g < f[i][j][k][t] ; ++g)
                            cout << s[i] << s[j] << s[k] << s[t] << '\n';
    return 0;
}</pre>
