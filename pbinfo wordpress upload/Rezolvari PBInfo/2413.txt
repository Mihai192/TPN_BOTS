<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <iomanip>
using namespace std;

ifstream cin("reteta1.in");
ofstream cout("reteta1.out");

int n , m , A[21] , X[21];
double mini = 10000001;

struct poz
{
    int c , n , a[21];
    double val;
}r[21];

int afisare(int k)
{
    for(int i = 1 ; i <= k ; i++)
        cout << X[i] << " ";
    cout << '\n';
}

void alegemin(int k)
{
    /*for(int i = 1 ; i <= k ; i++)
        cout << X[i] << " ";
    cout << endl;*/
    double v = 0;
    int ok = 0 , f[21] = {0};
    for(int i = 1 ; i <= k ; i++)
    {
        v += r[X[i]].val;
        for(int j = 1 ; j <= r[X[i]].n ; j++)
            f[r[X[i]].a[j]]++;
    }
    /*for(int j = 1 ; j <= n ; j++)
        cout << f[j] << " ";
    cout << endl;*/
    for(int j = 1 ; j <= n ; j++)
        if(f[j] != 1) ok = 1;
    if(ok == 0 &amp;&amp; v < mini) mini = v;
}
void back(int k)
{
    for(int i = X[k - 1] + 1 ; i <= m ; i++)
    {
        X[k] = i;
        alegemin(k);
        back(k + 1);
    }
}

int main()
{
    cin >> n >> m;

    for(int i = 1 ; i <= m ; i++)
    {
        cin >> r[i].c >> r[i].n;
        for(int j = 1 ; j <= r[i].n ; j++)
            cin >> r[i].a[j];
    }

    for(int i = 1 ; i <= n ; i++)
        cin >> A[i];

    for(int i = 1 ; i <= m ; i++)
    {
        r[i].val = 0;
        for(int j = 1 ; j <= r[i].n ; j++)
            if(r[i].c == 1)
                r[i].val += A[r[i].a[j]];
            else
                r[i].val += A[r[i].a[j]] / 2.0;
    }
    back(1);
    cout << fixed << setprecision(1) << mini;
}</pre>
