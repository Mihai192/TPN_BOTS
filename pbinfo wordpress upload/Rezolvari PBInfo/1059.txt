<h1>Cerința</h1>

<p>Se dă un număr natural <code>n</code>. Asupra lui se efectuează <code>t</code> serii de transformări, o serie constând în <code>m</code> transformări de genul: cifra de pe poziția <code>i</code> se interschimbă cu cifra de pe poziția <code>j</code>. Să se afişeze numărul obţinut după efectuarea celor <code>t</code> serii de transformări. </p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numerele <code>n</code>, <code>t</code> și <code>m</code>, iar apoi <code>m</code> perechi de numere naturale, separate prin spații, fiecare pereche reprezentând pozițiile cifrelor care se interschimbă.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul obținut în urma efectuării celor <code>t</code> serii de transformări.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n &lt; 1.000.000.000</code></li>
	<li><code>1 ≤ t ≤ 2.000.000.000</code></li>
	<li><code>1 ≤ m ≤ 10</code></li>
	<li>prima cifră din scrierea lui <code>n</code> se află pe poziția <code>1</code></li>
	<li>numerele din cele <code>m</code> perechi reprezentând pozițiile cifrelor care se interschimbă sunt mai mici sau egale cu numărul cifrelor lui <code>n</code></li>
	<li>cifra <code>0</code> nu va ajunge pe prima poziţie în urma unei interschimbări</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display: inline-block; width: 728px; height: 0px;" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display: inline-table; border: none; height: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 728px; background-color: transparent;"><ins id="aswift_1_anchor" style="display: block; border: none; height: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 728px; background-color: transparent; overflow: hidden; opacity: 0;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595359858&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1059%2Fschimbcifre&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595359858386&amp;bpp=33&amp;bdt=260&amp;idt=192&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=4500606987234&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595359859&amp;ga_hid=338169227&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1132&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2429382078488774&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2310%2Fsaci&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=tDrR9phtVl&amp;p=https%3A//www.pbinfo.ro&amp;dtd=198" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-google-query-id="CIa6pc2K3-oCFRDFuwgdiEwOWg" data-load-complete="true"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">1234 2 2
2 4
1 4</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">4132</pre>

<h1>Explicație</h1>

<p>Se efectuează prima serie de transformări: <code>1234 → 1432 → 2431</code><br>
A doua serie de transformări: <code>2431 → 2134 → 4132</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;
int n , t , m , k , sab , p , nr , j , u , l , pi , pj , ci , cj , suma , prod , c , pc , r , i , a ;
int main()
{
    cin >> n >> t >> m ;
    k = n ;
    p = 0 ;
    sab = 0 ;
    while(k != 0)
    {
        k = k / 10 ;
        p++ ;
        sab = sab * 10 + p ;
    }
    for(k = 1 ; k <= m ; k++)
    {
        cin >> i >> j ;
        if(i > j) { u = i ; i = j ; j = u ; }
        pi = 1;
        pj = 1;
        for(l = 1 ; l <= p - i ; l++) pi = pi * 10 ;
        for(l = 1 ; l <= p - j ; l++) pj = pj * 10 ;
        ci = ( sab / pi ) % 10 ;
        cj = ( sab / pj ) % 10 ;
        sab = sab - ci * pi ;
        sab = sab - cj * pj ;
        sab = sab + cj * pi ;
        sab = sab + ci * pj ;
    }
    k = 0 ;
    nr = n ;
    do {
            k++ ;
            a = sab ;
            suma = 0 ;
            prod = 1 ;
            while ( a != 0 )
            {
                r= a % 10 ;
                pc = 1 ;
                for( i = 1 ; i <= p - r ; i++ ) pc = pc * 10 ;
                c = ( nr / pc ) % 10 ;
                suma = suma + c * prod ;
                prod = prod * 10 ;
                a = a / 10 ;
            }
            nr = suma ;
        }while( nr != n);
    t = t % k ;
    nr = n ;
    for ( i = 1 ; i <= t ; i++ )
    {
        a = sab ;
        suma = 0 ;
        prod = 1 ;
        while ( a != 0 )
        {
            r= a % 10 ;
            pc = 1 ;
            for( j = 1 ; j <= p - r ; j++ ) pc = pc * 10 ;
            c = ( nr / pc ) % 10 ;
            suma = suma + c * prod ;
            prod = prod * 10 ; a = a / 10 ;
        } nr = suma ;
    }
    cout << nr ;
    return 0;
}</pre>
