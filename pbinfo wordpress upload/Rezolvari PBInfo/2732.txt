<p>Se consideră vectorul ordonat strict crescător <code>a = (a[1], a[2], ..., a[k])</code> ce memorează o submulțime de <code>k</code> elemente a mulțimii <code>{1, 2, ..., n}</code>. Trebuie determinată următoarea submulțime din punct de vedere lexicografic. De exemplu, dacă <code>n=4</code> și <code>k=3</code>, atunci submulțimile de trei elemente, în ordine lexicografică, sunt: <code>{1,2,3}</code>, <code>{1,2,4}</code>, <code>{1,3,4}</code>, <code>{2,3,4}</code>.</p>

<h1>Cerința</h1>

<p>Scrieți funcția având următorul antet:</p>

<pre class="code_c cm-s-default" data-lang="text/x-csrc" contenteditable="true" editable="true"><span class="cm-keyword">void</span> <span class="cm-variable">Succesor</span>(<span class="cm-keyword">int</span> <span class="cm-variable">a</span>[], <span class="cm-keyword">int</span> <span class="cm-variable">n</span>, <span class="cm-keyword">int</span> <span class="cm-variable">k</span>)</pre>

<p>Vectorul <code>a</code> memorează, în ordine strict crescătoare, <code>k</code> numere naturale din mulțimea <code>{1,2,...,n}</code>. Funcția va trebui să obțină tot în vectorul <code>a</code> următoarea submulțime de <code>k</code> elemente din punct de vedere lexicografic.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 &lt; k &lt; n ≤ 30.000</code></li>
	<li>Elementele vectorului sunt indexate de la <code>1</code> la <code>k</code>.</li>
	<li>Se garantează că va exista succesorul submulțimii memorate inițial în vectorul <code>a</code>.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595358364&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2732%2Fsuccesor&amp;flash=0&amp;wgl=1&amp;dt=1595358364549&amp;bpp=6&amp;bdt=334&amp;idt=125&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=6004719412168&amp;rume=1&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595358365&amp;ga_hid=234746818&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=48&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1085&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21065350%2C21066613%2C21066615%2C21066623&amp;oid=3&amp;pvsid=2929962949642419&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F808%2Fmutare&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=gWBIdAUfJt&amp;p=https%3A//www.pbinfo.ro&amp;dtd=134" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CP_J-oSF3-oCFehIkQUd0NMGXw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p>Dacă <code>n=9</code>, <code>k=5</code> și <code>a=(2,4,5,8,9)</code>, atunci apelul <code>Succesor(a, n,k)</code> va avea ca rezultat <code>a=(2,4,6,7,8)</code></p>

<h3>Important</h3>

<p>Soluția propusă va conține definiția funcției cerute. Prezența în soluție a altor instrucțiuni poate duce erori de compilare sau de execuție care vor avea ca efect depunctarea soluției.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">void Succesor(int a[], int n, int k)
{
    int f[30001]={0};
    for(int i = 1 ; i <= k ; ++i)
        f[a[i]] = 1;
    bool ok = true;
    int indice=0;
    for(int i = k ; i >= 1 &amp;&amp; ok ; --i)
    {
        for(int j = a[i] ; j <= n &amp;&amp; ok ; ++j)
        {
            if(f[j]!=1)
            {
                a[i]=j;
                indice = i;
                ok=false;
            }
        }
    }
    for(int i = indice + 1 ; i <= k ; ++i)
        f[a[i]]=0;
    for(int i = indice + 1 ; i <= k ; ++i)
    {
        bool ok = true;
        for(int j = a[i-1] + 1 ; j <= n &amp;&amp; ok ; ++j)
        {
            if(f[j]==0)
            {
                a[i]=j;
                ok=false;
            }
        }
    }
}</pre>
