<p><strong>Enunțul acestei probleme este identic cu cel al problemei  <a class="text-success bg-success" href="/probleme/830/generare2">#Generare2 <sup>[100]</sup></a> . Vă recomandăm să o rezolvați folosind o structură de date de tip coadă.</strong></p>

<h1>Cerința</h1>

<p>Se dau patru numere naturale <code>n a x y</code>. Să se afișeze elementele mulțimii <code>M</code>, cu următoarele proprietăți:</p>

<ul>
	<li>toate elementele lui <code>M</code> sunt numere naturale mai mici sau egale cu <code>n</code>;</li>
	<li><code>a</code> se află în <code>M</code>;</li>
	<li>dacă <code>b</code> se află în <code>M</code>, atunci <code>b+x</code> și <code>b+y</code> se află în <code>M</code>.</li>
</ul>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numerele <code>n a x y</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran elementele mulțimii <code>M</code>, în ordine crescătoare, separate prin câte un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 10000</code></li>
	<li><code>1 ≤ x , y ≤ 10000</code></li>
	<li><code>0 ≤ a ≤ 10000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356651&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F867%2Fgenerare2-cu-coada&amp;flash=0&amp;wgl=1&amp;dt=1595356651791&amp;bpp=13&amp;bdt=246&amp;idt=153&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=1412198928347&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356652&amp;ga_hid=417829532&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=31&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1120&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066357&amp;oid=3&amp;pvsid=4238882593771476&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F864%2Froboti&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=jSBOfKGdVH&amp;p=https%3A//www.pbinfo.ro&amp;dtd=160" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJfeodT-3uoCFbMH5godY5QPlQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">25 3 4 11</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">3 7 11 14 15 18 19 22 23 25</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;
int n, x, y;
bool apartine[1 + 10000] ;
void genereaza(int b)
 {
  if (b <= n &amp;&amp; !apartine[b])
    {
        apartine[b] = true;
        genereaza(b + x);
        genereaza(b + y);
    }
}

int main()
{
  int a;
  cin >> n >> a >> x >> y;
  genereaza(a);
  for (int i = 0; i <= n; i++)
    if (apartine[i])
      cout << i <<" ";
  return 0;
}</pre>
