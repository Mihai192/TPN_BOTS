<h1>Cerința</h1>

<p>Orice şir se încadrează în următoarele categorii: <code>șir constant</code>, <code>șir strict crescător</code>, <code>șir crescător</code>, <code>șir strict descrescător</code>, <code>șir descrescător</code> sau <code>șir neordonat</code>.</p>

<p>Se citește un șir cu <code>n</code> elemente naturale. Să se verifice  în ce categorie se încadrează.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere naturale, reprezentând elementele șirului.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran unul dintre mesajele <code>sir constant</code>, <code>sir strict crescator</code>, <code>sir crescator</code>, <code>sir strict descrescator</code>, <code>sir descrescator</code> sau <code>sir neordonat</code>. Se va tipări <b>categoria cea mai strictă</b> în care se încadrează şirul.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<h1>Exemplu 1:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5
1 2 3 4 5</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">sir strict crescator</pre>

<h1>Exemplu 2:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5
5 3 3 2 1</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">sir descrescator</pre>

<h1>Exemplu 3:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5
1 1 1 1 1</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">sir constant</pre>

<h1>Exemplu 4:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5
1 2 3 1 5</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">sir neordonat</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int a[1001];
    int cnt=0;
    for(int i = 1 ; i <= n ; ++i)
    cin >> a[i];
    for(int i = 1 ; i <= n ; ++i)
    {
        a[0]=a[1];
        if(a[i]==a[i-1])
            cnt++;
    }
    if(cnt==n)
       cout << "sir constant";
    else
    {
        cnt=0;
        a[0]=-1;
    for(int i = 1 ; i <= n ; ++i)
    {
        if(a[i]>a[i-1])
        cnt++;
    }
    if(cnt==n)
    cout << "sir strict crescator";
    else
    {
        cnt=0;
        for(int i = 1 ; i <= n ; ++i)
        if(a[i]>=a[i-1])
        cnt++;
        if(cnt==n)
        cout << "sir crescator";
        else
        {
            cnt=0;
            for(int i = 1 ; i <= n ; ++i)
            {
                a[0]=1000000001;
                if(a[i]<a[i-1])
                cnt++;
            }
            if(cnt==n)
            cout << "sir strict descrescator";
            else
            {
                cnt=0;
                for(int i = 1 ; i <= n ; ++i) 
                if(a[i]<=a[i-1])
                cnt++;
                if(cnt==n)
                cout << "sir descrescator";
                else
                cout << "sir neordonat";
            }
        }
    }
    }
}</pre>
