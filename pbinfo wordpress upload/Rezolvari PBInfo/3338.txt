<p>Se consideră <code>N</code> copii, numerotați de la <code>1</code> la <code>N</code> și fiecare face parte dintr-o clasă. Inițial sunt <code>n</code> clase și fiecare copil face parte din propria sa clasă. Se dau <code>M</code> operații de două tipuri:</p>

<ul>
	<li><code>1 x y</code> – acțiune: clasele din care fac parte copiii cu numerele <code>x</code> și <code>y</code> se reunesc. Dacă <code>x</code> și <code>y</code> fac deja parte din aceeași clasă, operația nu se efectuează</li>
	<li><code>2 x y</code> – întrebare: copiii cu numerele <code>x</code> și <code>y</code> sunt sau nu în aceeași clasă?</li>
</ul>

<h1>Cerința</h1>

<p>Răspundeți la toate întrebările de al doilea tip, în ordinea acestora.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numerele <code>N</code> și <code>M</code>, iar apoi <code>M</code> triplete de numere naturale de forma <code>op x y</code>, unde <code>op</code> poate lua doar valorile <code>1</code> și <code>2</code>, aceste triplete reprezentând câte o operație.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran, pe câte o linie, răspunsul la fiecare întrebare de tip <code>2</code>. Dacă la întrebarea <code>2 x y</code> răspunsul este afirmativ, adică <code>x</code> și <code>y</code> se află în aceeași clasă, atunci veți afișa <code>DA</code>, iar în caz contrar veți afișa <code>NU</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N ≤ 500</code></li>
	<li><code>2 ≤ M ≤ 2000</code></li>
	<li>va exista cel puțin o operație de tip <code>1</code> și cel puțin o operație de tip <code>2</code>.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595362535&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3338%2Fdisjoint&amp;flash=0&amp;wgl=1&amp;dt=1595362535666&amp;bpp=8&amp;bdt=212&amp;idt=147&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=4065299875813&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595362536&amp;ga_hid=1082048674&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1164&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=715322300332137&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F852%2Fparanteze3&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=yED4YgXUD3&amp;p=https%3A//www.pbinfo.ro&amp;dtd=152" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CK6p78mU3-oCFS3iuwgdch0FkQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">6 6
1 1 4
1 3 6
2 4 6
1 1 3
2 4 6
2 1 6</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">NU
DA
DA</pre>

<h3>Explicație</h3>

<p>Sunt <code>6</code> copii și <code>6</code> operații. După primele două operații, elevii <code>1</code> și <code>4</code> sunt în aceeași clasă și <code>3</code> și <code>6</code> sunt în aceeași clasă. La întrebarea <code>2 4 6</code> răspunsul este evident <code>NU</code>. La a patra operație <code>1</code> și <code>3</code> sunt trecuți în aceeași clasă, deci va exista o clasă cu <code>4</code> copii: <code>{1,3,4,6}</code>, deci la ultimele două întrebări acum răspunsul este <code>DA</code> la ambele.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <vector>
using namespace std;

vector <int>G[101];

struct poz
{
    int val , cul;
}f[2001];
int n , m , x , y , cer , rez[2001] , cnt;

int main()
{
    cin >> n >> m;
    for(int i = 1 ; i <= n ; i++)
        f[i].val = i , f[i].cul = i;
    for(int i = 1 ; i <= m ; i++)
    {
        cin >> cer >> x >> y;
        if(cer == 1)
        {
            int mini = min(f[x].cul , f[y].cul) , maxi = max(f[x].cul , f[y].cul);
            f[x].cul = mini;
            f[y].cul = mini;
            for(int i = 1 ; i <= n ; i++)
                if(f[i].cul == maxi) f[i].cul = mini;
        }
        else
        {
            if(f[x].cul == f[y].cul) rez[++cnt] = 1;
            else rez[++cnt] = 0;
        }
    }
    for(int i = 1 ; i <= cnt ; i++)
        if(rez[i] == 1) cout << "DA\n";
        else cout << "NU\n";
}</pre>
