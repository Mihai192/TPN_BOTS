<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <algorithm>
using namespace std;
#define Inf 2000000000

int nrd[101], n;
long long minim = Inf;
int prime[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};

long long calcnr (int ind)
{
    int aux;
    long long nr = 1;
    for (int i = ind, l = 1; i >= 1; i --, l ++)
    {
        aux = nrd[i];
        while (aux > 1)
        {
            nr *= prime[l];
            aux --;
            if (nr > Inf)return Inf;
        }
    }
    return nr;
}
void back(int x, int ind)
{
    if (x == 1)
    {
        minim = min(minim, calcnr(ind));
        return;
    }
    nrd[ind + 1] = x;
    back(1, ind + 1);
    for(int i = 0; prime[i] * prime[i] <= x &amp;&amp; prime[i] <= x/prime[i]; i ++)
        if (x % prime[i] == 0)
        {
            nrd[ind + 1] = prime[i];
            back(x / prime[i], ind + 1);
        }
}
int main()
{
    cin >> n;
    int div = 2, nrdiv = 1, x;
    while(n > 1)
    {
        if(n % div == 0)
        {
            x = 0;
            while(n % div == 0) x++ , n /= div;
            nrdiv *= (x + 1);
        }
        div ++;
    }
    back(nrdiv, 0);
    cout << minim;
    return 0;
}</pre>
