<p>Un gard este format din mai multe plăci dreptunghiulare. Fiecare placă este, la rândul ei, construită din <code>NxM</code> cărămizi. Una dintre plăci ridică o problemă, deoarece este deteriorată. Placa este reprezentată pe hârtie cu ajutorul unei matrice cu <code>N</code> linii și <code>M</code> coloane, numerotate de la <code>1</code> la <code>N</code>, respectiv de la <code>1</code> la <code>M</code>. Matricea conține doar valori <code>0</code> și <code>1</code>, și respectă următoarele reguli:</p>

<ul>
	<li>un element egal cu <code>1</code> indică prezența în aceea poziție a unei cărămizi, iar un element egal cu <code>0</code> indică absența ei;</li>
	<li>linia <code>1</code> și linia <code>N</code> conțin numai valori egale cu <code>1</code>, pentru că marginea de sus și cea de jos a plăcii este intactă;</li>
	<li>din orice element egal cu <code>1</code>, situat în interiorul matricei, se poate ajunge pe linia <code>1</code> sau pe linia <code>N</code> sau pe amândouă, mergând doar în sus sau doar în jos, parcurgând numai valorile egale cu <code>1</code>;</li>
	<li>există cel puțin o coloană stabilă (formată numai din elemente egale cu <code>1</code>).</li>
</ul>

<p>Se dorește modificarea plăcii și pentru aceasta se pot șterge din matrice maximum <code>K</code> coloane alăturate. După ștergere se alipesc coloanele rămase și se deplasează pe verticală partea de sus a plăcii spre cea de jos, până când se va forma o coloană stabilă. </p>

<h1>Cerința</h1>

<p>Să se determine înălțimea minimă <code>Hmin</code> pe care o poate avea placa ștergând cel mult <strong><code>K</code> coloane alăturate</strong>. Identificați numărul minim de coloane alăturate care trebuie șterse pentru a obține înălțimea <code>Hmin</code>.</p>

<h1>Date de intrare</h1>

<p>Din fișierul <code>placa.in</code> se citesc de pe prima linie <code>3</code> numere naturale <code>N</code>, <code>M</code>, <code>K</code> separate prin câte un spațiu, având semnificația din enunț. Pe fiecare dintre următoarele <code>M</code> linii ale fișierului se găsesc perechi de numere naturale <code>N1</code>, <code>N2</code>, separate printr-un spațiu. Astfel pe linia <code>i+1</code> a fișierului de intrare numărul <code>N1</code> reprezintă numărul de elemente de <code>1</code> situate pe coloana <code>i</code>, începând cu linia 1, deplasându-ne în „jos” până la întâlnirea unei valori egale cu <code>0</code>, sau până se ajunge pe linia <code>N</code>; numărul <code>N2</code> reprezintă numărul de elemente de <code>1</code> situate pe coloana <code>i</code>, începând cu linia N, deplasându-ne în „sus” până la întâlnirea unei valori egale cu <code>0</code>, sau până se ajunge pe linia <code>1</code>.</p>

<h1>Date de ieșire</h1>

<p>În fișierul <code>placa.out</code> se va scrie pe prima linie înălțimea minimă cerută <code>Hmin</code>, iar pe a doua linie numărul minim de coloane ce trebuie eliminate  pentru a obține înălțimea <code>Hmin</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N ≤ 100.000</code>; <code>1 ≤ M ≤ 100.000</code>; <code>1 ≤ K &lt; M</code>;</li>
	<li>se garantează că pe liniile ce conțin informații referitoare la cele <code>M</code> coloane ale matricei există cel puțin o linie pe care se află valoarea <code>N</code> de <code>2</code> ori, în rest suma celor două valori este strict mai mică decât <code>N</code>;</li>
	<li>toate valorile din fișier sunt strict pozitive;</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595360322&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1206%2Fplaca&amp;flash=0&amp;wgl=1&amp;dt=1595360322592&amp;bpp=6&amp;bdt=715&amp;idt=179&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=1951776874678&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360323&amp;ga_hid=856352816&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1610&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2187310728196901&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1088%2Fzar&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=WkhjmvB1cQ&amp;p=https%3A//www.pbinfo.ro&amp;dtd=186" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CMnx0aqM3-oCFVFBkQUdrN4KvQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>placa.in</code></p>

<pre contenteditable="true" editable="true">5 6 3
1 1
2 1
1 2
5 5
1 3
1 1</pre>

<p><code>placa.out</code></p>

<pre contenteditable="true" editable="true">3
2</pre>

<h3>Explicație</h3>

<p>Matricea inițială:</p>

<pre contenteditable="true" editable="true">1 1 1 1 1 1
0 1 0 1 0 0
0 0 0 1 1 0
0 0 1 1 1 0
1 1 1 1 1 1</pre>

<p>Înălțimea minimă este <code>3</code> și se poate obține eliminând, de exemplu, coloanele <code>3</code>, <code>4</code>, <code>5</code> rezultând matricea:</p>

<pre contenteditable="true" editable="true">1 1 1
0 1 0
1 1 1</pre>

<p>O altă modalitate de a obține aceeași înălțime dar prin ștergerea unui număr minim de coloane (<code>4</code> și <code>5</code>) conduce la:</p>

<pre contenteditable="true" editable="true">1 1 1 1
0 1 1 0
1 1 1 1</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#define DIM 1000002

using namespace std;

ifstream fin("placa.in");
ofstream fout("placa.out");
    
int v[DIM], a[DIM], b[DIM];
int n, m, k, x, y, i, j, sol, solc, p, u, mid;

int main() 
{
    fin>>n>>m>>k;
    for (i=1;i<=m;i++) 
    {
        fin>>x>>y;
        if (x!=n)
            v[i] = x+y;
        else
            v[i] = n;
    }

    a[1] = v[1];
    for (i=2;i<=m;i++)
        if (a[i-1] > v[i])
            a[i] = a[i-1];
        else
            a[i] = v[i];

    b[m] = v[m];
    for (i=m-1;i>=1;i--)
        if (v[i] > b[i+1])
            b[i] = v[i];
        else
            b[i] = b[i+1];

    sol = m+2;
    for (i=1,j=k;j<=m;i++,j++) {
        if (a[i-1] > b[j+1])
            x = a[i-1];
        else
            x = b[j+1];

        if (x < sol)
            sol = x;
    }

    fout<<sol<<"\n";
    if (sol == n) {
        fout<<"0\n";
        return 0;
    }
    p = 1;
    u = k;
    while (p<=u) {
        mid = (p+u)/2;

        solc = m+2;
        for (i=1,j=mid;j<=m;i++,j++) {
            if (a[i-1] > b[j+1])
                x = a[i-1];
            else
                x = b[j+1];

            if (x < solc)
                solc = x;
        }

        if (solc == sol)
            u = mid-1;
        else
            p = mid+1;
    }
    fout<<p<<"\n";

    return 0;
}</pre>
