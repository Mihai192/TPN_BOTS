<h1>Cerința</h1>

<p>Se dă <code>n</code> un număr natural. Cifrele lui <code>n</code> se permută pentru a forma un număr natural, de aceeași lungime cu <code>n</code>, și care să fie palindrom. Aflați câte asemenea numere se pot obține.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul de palindromuri care se pot obține prin permutarea cifrelor lui <code>n</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>0 ≤ n ≤ 10</code><sup><code>38</code></sup></li>
	<li><span class="caps">PCR</span> este prescurtarea de la <a href="http://algopedia.ro/wiki/index.php/Clasele_9-10_lec%C8%9Bia_25_-_1_apr_2015">Permutări Cu Repetiţie</a></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595353413&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3025%2Fpcr&amp;flash=0&amp;wgl=1&amp;dt=1595353413588&amp;bpp=15&amp;bdt=253&amp;idt=124&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=4723048157198&amp;frm=20&amp;pv=1&amp;ga_vid=1744050990.1595352838&amp;ga_sid=1595353414&amp;ga_hid=903470334&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=814&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1000&amp;biw=1200&amp;bih=647&amp;scr_x=0&amp;scr_y=0&amp;eid=21066715&amp;oid=3&amp;pvsid=1133662930843859&amp;pem=168&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1011%2Fp3factoriale&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C770%2C1200%2C647&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=Hnkouybwqj&amp;p=https%3A//www.pbinfo.ro&amp;dtd=130" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COqWlMzy3uoCFZDgsgodrx4HCw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">1102022</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p>Permutând cifrele lui <code>1102022</code> se pot obține următoarele palindromuri de aceeași lungime cu <code>1102022</code>: <code>1022201</code>, <code>1202021</code>, <code>2012102</code>, <code>2102012</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int C[101] , D[101];

unsigned long long prep(int n , int f[])
{
    unsigned long long c = 1;
    for(int i = 1 ; i <= n ; i++)
        c *= i;
    for(int i = 0 ; i <= 9 ; i++)
        for(int j = 2 ; j <= f[i] ; j++)
            c /= j;
    return c;
}
int main()
{
    int f[10] = {0};
    int n;
    string s;
    cin >> s;
    n = s.length();
    for(int i = 0 ; i < n ; i++)
        f[s[i] - 48]++;

    int fimp = 0;
    for(int i = 0 ; i <= 9 ; i++)
        if(f[i] % 2 == 1) fimp ++;
    if(fimp > 1) cout << 0;
    else
    {
        for(int i = 0 ; i <= 9 ; i++)
            f[i] /= 2;
        if(f[0] == 0)
            cout << prep(n / 2 , f);
        else
        {
            unsigned long long c = prep(n / 2 , f);
            f[0]--;
            unsigned long long c1 = prep(n / 2 - 1 , f);
            cout << c - c1;
        }
    }
}</pre>
