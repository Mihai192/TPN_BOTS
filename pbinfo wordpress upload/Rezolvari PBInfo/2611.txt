<h1>Cerința</h1>

<p>Avem la dispoziție un chenar dreptunghiular format din oglinzi. O rază de lumină pornește din colțul stânga jos al dreptunghiului sub un unghi de 45 de grade față de latura de jos a dreptunghiului și lovește latura de sus sau latura din dreapta. Aici se reflectă (pornește spre o altă latură tot sub un unghi de 45 de grade față de latura de care s-a lovit). Își continuă drumul până când ajunge într-un colț al dreptunghiului.</p>

<p><img alt="" src="/resurse/9dc152/p-1700/raza-2611.png"></p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură dimensiunile chenarului <code>a</code> și <code>b</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul de atingeri ale marginilor chenarului. Punctul de pornire și cel final nu se numără.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ a ≤ 2000000000</code></li>
	<li><code>1 ≤ b ≤ 2000000000</code></li>
</ul>

<h1>Exemple:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">3 8</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">9</pre>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">8 4</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">1</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int main()
{
    long long int a , b;
    cin >> a >> b;
    long long int n = a , m = b;
    while(b)
    {
        long long int r=a%b;
        a=b;
        b=r;
    }
    cout << n/a + m/a - 2;
    return 0;
}</pre>
