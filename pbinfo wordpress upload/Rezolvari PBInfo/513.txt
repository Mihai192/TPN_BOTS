<h1>Cerința</h1>

<p>Se dă un șir cu <code>n</code> elemente, numere naturale, numerotate începând cu <code>1</code> și un număr <code>k</code>. Considerăm <code>k</code> subșiruri ale șirului, astfel:</p>

<ul>
	<li>primul subșir este format din elementele din șir numerotate cu <code>1</code>, <code>k+1</code>, <code>2*k+1</code>, …</li>
	<li>al doilea subșir este format din elementele din șir numerotate cu <code>2</code>, <code>k+2</code>, <code>2*k+2</code>, …</li>
	<li>…</li>
	<li>al <code>k</code>-lea subșir este format din elementele din șir numerotate cu <code>k</code>, <code>2*k</code>, <code>3*k</code>, …</li>
</ul>

<p>Ordonați crescător fiecare dintre aceste subșiruri și afișați șirul obținut.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numerele <code>n</code> și <code>k</code>, iar apoi <code>n</code> numere naturale, reprezentând elementele șirului.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran elementele șirului, separate prin exact un spațiu, după efectuarea operațiilor cerute.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ k &lt; n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361964&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F513%2Fksort1&amp;flash=0&amp;wgl=1&amp;dt=1595361964494&amp;bpp=4&amp;bdt=207&amp;idt=155&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=8266076894218&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361965&amp;ga_hid=1549648455&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1130&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=4492652022997732&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F180%2Fsortminmax&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=t630fVqP7F&amp;p=https%3A//www.pbinfo.ro&amp;dtd=161" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COX2w7mS3-oCFcFAkQUdvr0BRQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">11 3
7 5 4 3 1 6 8 9 11 10 2 </pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">3 1 4 7 2 6 8 5 11 10 9</pre>

<h1>Explicație</h1>

<p>Cele trei subșiruri sunt: <code>(7 3 8 10)</code>, <code>(5 1 9 2)</code> și <code>(4 6 11)</code>. După sortare, ele devin: <code>(3 7 8 10)</code>, <code>(1 2 5 9)</code> și <code>(4 6 11)</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int n , a[1001] , v[1001] , p=0;
    cin >> n;
    int k;
    cin >> k;
    for(int i = 0 ; i < n ; ++i)
        cin >> a[i];
    for(int i = 0; i < k ; ++i)
    {
        p=0;
        for(int j = i ; j < n; j+=k)
        {
            v[p]=a[j];
            p++;
        }
        sort(v , v+p);
        p=0;
        for(int j = i ; j < n ; j+=k)
        {
            a[j] = v[p];
            p++;
        }
    }
     for(int i = 0; i < n ; ++i)
        cout << a[i]<<" ";
    return 0;
}</pre>
