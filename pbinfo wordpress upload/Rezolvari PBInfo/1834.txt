<h1>Cerința</h1>

<p>Se dă o mulţime <code>A</code> formată din <code>n</code> elemente, numere naturale ( evident distincte ). Aflaţi câte submulţimi nevide ale lui <code>A</code> au suma elementelor număr par.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>memory005.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale distincte, separate prin spații, reprezentând elementele mulţimii <code>A</code>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>memory005.out</code> va conține pe prima linie numărul <code>S</code>, reprezentând numărul submulţimilor nevide ale lui <code>A</code> care au suma elementelor număr par. Rezultatul se va afişa modulo <code>666013</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1.000.000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi distincte şi mai mici decât <code>2.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595353446&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1834%2Fmemory005&amp;flash=0&amp;wgl=1&amp;dt=1595353445809&amp;bpp=22&amp;bdt=221&amp;idt=201&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4213860639402&amp;frm=20&amp;pv=1&amp;ga_vid=1744050990.1595352838&amp;ga_sid=1595353446&amp;ga_hid=1106564425&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=814&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=647&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1135780944882796&amp;pem=168&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1160%2Fnecuatie&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C770%2C1200%2C647&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=gkjl4dywHI&amp;p=https%3A//www.pbinfo.ro&amp;dtd=221" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKC4x9vy3uoCFZ7FuwgdWuIOCw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>memory005.in</code></p>

<pre contenteditable="true" editable="true">4
1 3 8 2</pre>

<p><code>memory005.out</code></p>

<pre contenteditable="true" editable="true">7</pre>

<h3>Explicație</h3>

<p>Avem mulţimea <code>A={1,3,8,2}</code>. Submulţimile nevide ale lui <code>A</code> având suma elementelor număr par sunt: <code>{8}, {2}, {1,3}, {8,2}, {1,3,8}, {1,3,2}, {1,3,8,2}</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>

using namespace std;

int n , cnt , x;
#define MOD 666013
ifstream cin("memory005.in");
ofstream cout("memory005.out");
int put(int n)
{
    int p = 1;
    for(int i = 1 ; i <= n ; i++)
        p *= 2 , p %= MOD;
    return p;
}
int main()
{
    cin >> n;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> x;
        if(x % 2 == 1) cnt++;
    }
    if(cnt == 0) cout << (put(n) - 1) % MOD;
    else cout << (put(n - 1) - 1) % MOD;
    return 0;
}</pre>
