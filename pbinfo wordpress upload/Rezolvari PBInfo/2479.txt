<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp"># include <fstream>
using namespace std;

ifstream f("pietre.in");
ofstream g("pietre.out");

int dl[5]={0,-1,0,1,0}, dc[5]={0,0,1,0,-1}, a[102][102], b[102][102],c[102][102],x[10002][2];
int nrp,m,n,i,j,xx,minn,ii,jj,l,cl,k,t,d,piatra,p,q,p1,q1;
char s[256];
int main()
{
 f>>m>>n>>k>>t;
 for (i=1;i<=k;i++)
 { f>>l>>cl;
   a[l][cl]=1;
   x[i][0]=l;
   x[i][1]=cl;
 }
 for (i=1;i<=t;i++)
 { f>>l>>cl;
   a[l][cl]=-1;
 }
 i=0;
 while (f>>s[i])
    i++;
 xx=i;
 for(i=0;i<=m+1;i++)
 {  a[i][0]=-1;
    a[i][n+1]=-1;
 }
 for(j=1;j<=n;j++)
 {
   a[0][j]=-1;
   a[m+1][j]=-1;
 }
 minn=m*n+1;

 for(p=1;p<=k;p++)
    {i=x[p][0];j=x[p][1];
      for (ii=0;ii<=m+1;ii++)
        for(jj=0;jj<=n+1;jj++)
          b[ii][jj]=a[ii][jj];
     for (t=0;t<xx;t++)
    {
        if(s[t]=='N') d=1;
         else
            if (s[t]=='S') d=3;
              else
                if (s[t]=='E') d=2;
                   else
                    d=4;
        if (b[i+dl[d]][j+dc[d]]==1)
            if (i+2*dl[d]>=1 &amp;&amp; i+2*dl[d]<=m &amp;&amp; j+2*dc[d]>=1 &amp;&amp; j+2*dc[d]<=n)
            if (b[i+2*dl[d]][j+2*dc[d]]==0)
          {
           b[i+2*dl[d]][j+2*dc[d]]=1;
           b[i+dl[d]][j+dc[d]]=0;
           b[i][j]=0;
           i=i+2*dl[d];
           j=j+2*dc[d];
          }
    }
      nrp=0;
      for (ii=1;ii<=m;ii++)
       for (jj=1;jj<=n;jj++)
         if (b[ii][jj]==1)
            nrp=nrp+1;
       if (nrp<minn)
              {
               minn=nrp;
               for (p1=1;p1<=m;p1++)
                 for (q1=1;q1<=n;q1++)
                    c[p1][q1]=b[p1][q1];

               piatra=p;
              }
    }
   g<<piatra<<endl<<minn<<endl;
   for (i=1;i<=m;i++)
    for (j=1;j<=n;j++)
     if (c[i][j]==1)
       g<<i<<" "<<j<<endl;
    return 0;
}</pre>
