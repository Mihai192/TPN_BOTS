<p>Am o prietenă creatoare de modă. Pentru a-și realiza creațiile ea vopsește uneori materialele și mă roagă în prealabil să o ajut. Azi vrea să vopsească o pânză cu lungimea <code>N</code> cm folosind <code>C</code> nuanțe ale aceleiași culori, codificate de la <code>1</code> la <code>C</code>. Fiecare cm de pânză fiind colorat cu aceeași nuanță pe toată lățimea, va ieși o pânză în dungi. Inițial eu simulez cu ajutorul calculatorului vopsirea materialului, prietena mea începe apoi să intervină: de la cm <code>A</code> la cm <code>B</code>, trebuie modificată intensitatea culorii cu <code>X</code> puncte (intensitatea poate crește sau poate scădea, obținându-se astfel o altă nuanță). După nenumărate modificări de acest tip, să spunem <code>M</code> modificări, prietena mea va fi mulțumită și va trece la vopsirea efectivă a pânzei. </p>

<h1>Cerința</h1>

<p>Scrieţi un program care determină și afișează:<br>
1.	Lungimea maximă a unei bucăți de pânză de aceeași culoare după vopsirea inițială;<br>
2.	Cum va arăta pânza în urma modificărilor prietenei mele.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>culori.in</code> conține pe prima linie cerința (1 sau 2). Linia următoare conține trei numere naturale <code>C N M</code> separate prin câte un spațiu, reprezentând numărul de culori, lungimea în cm a pânzei, respectiv numărul de modificări efectuate de prietena mea; următoarea linie conține N numere naturale separate prin câte un spațiu, <code>c1 c2 c3 ... cN</code> reprezentând culoarea fiecărui cm de pânză după vopsirea inițială, iar următoarele <code>M</code> linii conțin fiecare câte trei numere: două numere naturale <code>A B</code>, separate printr-un spațiu, reprezentând <code>A</code> – poziția la care începe și <code>B</code> – poziția finală la care se termină modificarea intensității și, separat printr-un spațiu, un număr întreg <code>X</code> reprezentând valoarea cu care se modifică intensitatea.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>culori.out</code> va conține o singură linie pe care va fi scris un număr natural determinat conform cerinței, dacă cerința este 1 sau <code>N</code> numere naturale determinate conform cerinței, dacă cerința este 2.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>0 &lt; N &lt; 10001</code></li>
	<li><code>0 &lt; C &lt; 1000001</code></li>
	<li><code>0 &lt; M &lt; 200001</code></li>
	<li>în urma tuturor modificărilor nuanțele rămân în mulțimea <code>{1, 2, ..., C}</code></li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>culori.in</code></p>

<pre contenteditable="true" editable="true">1
3 8 2
1 1 2 2 2 2 3 3 
2 5 1
5 8 -1</pre>

<p><code>culori.out</code></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p>Cea mai lungă secvență de elemente egale este <code>2 2 2 2</code> și are <code>4</code> elemente</p>

<h1>Exemplul 1:</h1>

<p><code>culori.in</code></p>

<pre contenteditable="true" editable="true">2
3 8 2
1 1 2 2 2 2 3 3
2 5 1
5 8 -1</pre>

<p><code>culori.out</code></p>

<pre contenteditable="true" editable="true">1 2 3 3 2 1 2 2 </pre>

<h3>Explicație</h3>

<p>După prima modificare vectorul este: <code>1 2 3 3 3 2 3 3</code>.<br>
După a doua modificare este: <code>1 2 3 3 2 1 2 2</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("culori.in");
ofstream cout("culori.out");

int cer , n , m , c , a[10001] , x , y , z , b[10001];

int main()
{
    cin >> cer >> c >> n >> m;
    for(int i = 1 ; i <= n ; i++)
        cin >> a[i];
    if(cer == 1)
    {
        for(int i = 1 ; i <= m ; i++)
            cin >> x >> y >> z;
        int lmax = 0 , l = 0;
        for(int i = 2 ; i <= n ; i++)
        {
            if(a[i] == a[i - 1]) l++;
            else
            {
                if(l > lmax) lmax = l;
                l = 0;
            }
        }
        cout << lmax + 1;
    }
    else
    {
        for(int i = 1 ; i <= m ; i++)
        {
            cin >> x >> y >> z;
            b[x] += z;
            b[y + 1] -= z;
        }
        for(int i = 1; i <= n ; i++)
            b[i] = b[i - 1]+b[i];
        for(int i = 1 ; i <= n ; i++)
            cout << a[i] + b[i] << " ";
    }
}</pre>
