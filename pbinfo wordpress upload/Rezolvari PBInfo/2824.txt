<h1>Cerința</h1>

<p>Se dă un număr natural <code>n</code> și un șir de numere naturale din intervalul <code>[1,n]</code> ordonate crescător. Să se afișeze în ordine strict crescătoare toate numerele din  intervalul <code>[1,n]</code> care nu se găsesc în șirul dat. Dacă nu există asemenea numere se afișează <code>Nu exista</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>numere25.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie șir de numere naturale din intervalul <code>[1,n]</code> ordonate crescător.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>numere25.out</code> va conține pe prima linie în ordine strict crescătoare toate numerele din  intervalul <code>[1,n]</code> care nu se găsesc în șirul dat. Dacă nu există asemenea numere fișierul va conține textul <code>Nu exista</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 10</code><sup><code>7</code></sup>;</li>
	<li>în enunțul original, <code>1 ≤ n ≤ 10</code><sup><code>9</code></sup>; aici limitele au fost micșorate, datorită dimensiunilor prea mari ale fișierelor de intrare/ieșire;</li>
	<li>proiectați un algoritm eficient din punctul de vedere al memoriei şi al timpului de executare:
	<ul>
		<li>se recomandă evitarea utilizării tablourilor sau a altor structuri de date similare.</li>
	</ul></li>
	</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595360462&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2824%2Fnumere25&amp;flash=0&amp;wgl=1&amp;dt=1595360462112&amp;bpp=5&amp;bdt=268&amp;idt=124&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4809058061656&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360462&amp;ga_hid=243017765&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1150&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358&amp;oid=3&amp;pvsid=3143393262695310&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2840%2Fsecventauniforma&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=xTof0A98JU&amp;p=https%3A//www.pbinfo.ro&amp;dtd=131" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJyoke2M3-oCFdLHuwgdTSwEiA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>numere25.in</code></p>

<pre contenteditable="true" editable="true">10
3 4 4 8</pre>

<p><code>numere25.out</code></p>

<pre contenteditable="true" editable="true">1 2 5 6 7 9 10</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("numere25.in");
ofstream cout("numere25.out");
int n , x , y , ok;

int main()
{
    cin >> n;
    while(cin >> y)
    {
        for(int i = x + 1 ; i < y ; i++)
        {
            cout << i << " ";
            ok = 1;
        }
        x = y;
    }
    for(int i = x + 1 ; i <= n ; i++)
    {
        cout << i << " ";
        ok = 1;
    }
    if(!ok) cout << "Nu exista";
}</pre>
