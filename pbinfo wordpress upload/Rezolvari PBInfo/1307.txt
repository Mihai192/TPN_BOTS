<h1>Cerința</h1>

<p>Se citeşte un şir <code>X</code> de numere naturale cu <code>n</code> elemente. Scrieţi un program care determină şirul <code>Y</code> de numere prime distincte, care figurează la puterea întâi în cel puţin o descompunere ȋn factori primi a unui număr din șirul <code>X</code>. Dacă niciun element al şirului <code>X</code> nu are un factor prim la puterea întâi, atunci se va tipări mesajul <code>Sirul Y este vid.</code></p>

<p>Se vor scrie subprograme pentru:  </p>

<ul>
	<li>citirea unui şir de numere naturale</li>
	<li>tipărirea unui şir</li>
	<li>generarea tuturor numerelor prime mai mici sau egale decât un număr dat <span class="caps">SAU</span> verificarea dacă un număr este prim (ȋn funcție de modalitatea de rezolvare aleasă)</li>
	<li>verificarea dacă un număr figurează la puterea întâi în descompunerea unui număr dat</li>
	<li>construirea șirului <code>Y</code></li>
</ul>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi cele <code>n</code> elemente ale șirului <code>X</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran elementele șirului <code>Y</code>, ordonate crescător, separate prin câte un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 500</code></li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>1000</code></li>
</ul>

<h1>Exemplul 1</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">4
77 58 77 31</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">2 7 11 29 31</pre>

<h1>Exemplul 2</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">4
64 36 100 125</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">Sirul Y este vid.</pre>

<h1>Exemplul 3</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">4
25 5 125 5</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">5</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

void Citire(int  &amp;, int *);
void Afisare(int , int *);
void Eratostene(int *);
bool Putere1(int , int );
void Construire(int , int * , int &amp; ,int *);

int  v[1001];

int main()
{
    int n,x[501],m,y[1001];
    Citire(n , x);
    Eratostene(v);
    Construire(n , x , m , y);
    if(m > 0)
        Afisare(m , y);
    else
        cout << "Sirul Y este vid.";
    return 0;
}

void Citire(int &amp; n , int * x)
{
    cin >> n;
    for(int i = 1 ; i <= n ; i ++)
        cin >> x[i];
}

void Afisare(int n , int * x)
{
    for(int i = 1 ; i <= n ; i ++)
        cout << x[i] << " ";
    cout << endl;
}

void Eratostene(int * v)
{
    for(int i = 0 ; i <= 1000 ; i ++)
        v[i] = 1;
    v[0] = v[1] = 0;
    for(int i = 2 ; i * i <= 1000; i ++)
        if(v[i] == 1)
            for(int j = 2 ; i * j <= 1000 ; j ++)
                v[i*j] = 0;
}

bool Putere1(int n , int d)
{
    int p = 0;
    while(n % d == 0)
        p ++, n /= d;
    return p == 1;
}

void Construire(int n , int * x , int &amp; m, int * y)
{
    m = 0;
    for(int i = 2 ; i <= 1000 ; i ++)
        if(v[i] == 1)
        {
            bool OK = false;
            for(int j = 1 ; j <= n  &amp;&amp; ! OK ; j ++)
                if(Putere1(x[j] , i))
                    OK = true;
            if(OK)
                y[++m] = i;
        }
}</pre>
