<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("biminprim.in");
ofstream cout("biminprim.out");

int mini = 1000000;

bool prim(int n){
    int cnt = 0;
    for(int d = 1; d * d <= n; ++d){
        if(n % d == 0)
            cnt+=2;
        if(d * d == n)
            cnt--;
    }
    if(cnt == 2)
        return 1;
    return 0;
}

void citire(int nod){
    int x;
    cin >> x;
    if(x < mini &amp;&amp; prim(x))
        mini = x;
    if(x != 0){
        citire(2 * nod);
        citire(2 * nod + 1);
    }
}

int main(){
    int x;
    cin >> x;
    citire(2);
    int s;
    if(mini != 1000000)
        s = mini;
    else
        s = -1;
    mini = 1000000;
    citire(3);
    int s1;
    if(mini != 1000000)
        s1 = mini;
    else
        s1 = -1;
    cout << s << ' ' << s1;
    return 0;
}</pre>
