<h1>Cerința</h1>

<p>Se citește un șir de caractere reprezentând o propoziție care conține litere mari și mici ale alfabetului englez, spații, cifre și alte simboluri. În cele ce urmează, considerăm cuvânt orice secvență delimitată de spații ce conține cel puțin o literă.</p>

<p>Se se afișeze șirul citit astfel încât cuvintele de lungime maximă să fie înlocuite cu inversul (oglinditul) lor, restul cuvintelor și aranjarea lor în propoziție să rămână neschimbate.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură șirul de caractere.</p>

<h1>Date de ieșire</h1>

<p>Se va afișa șirul transformat în conformitate cu cerința.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>șirul dat va conține maximum 255 de caractere</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357515&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2681%2Finversmax&amp;flash=0&amp;wgl=1&amp;dt=1595357515342&amp;bpp=22&amp;bdt=235&amp;idt=165&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2177654256422&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357515&amp;ga_hid=2083424873&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1054&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=2&amp;pvsid=1366175488506261&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2346%2Fparitatesiruri&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=OsDHUJzT4c&amp;p=https%3A//www.pbinfo.ro&amp;dtd=183" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COeehvCB3-oCFUrHuwgdEogNBw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">Mara  23a4 1234 %&amp;a* %&amp;*( are mere</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">araM  4a32 1234 *a&amp;% %&amp;*( are erem</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cstring>
using namespace std;

char s[256];

bool lit(char ch)
{
    return (ch >= 'a' &amp;&amp; ch <= 'z') || (ch >= 'A' &amp;&amp; ch <= 'Z');
}

int lmax()
{
    int i = 0;
    int cnt = 0 , cntmax=0;
    bool ok = false , okk=true;
    while(s[i]!='\0')
    {
        if(s[i]==' ')
        {
            if(cnt > cntmax &amp;&amp; ok)
                cntmax=cnt;
            cnt = 0 , ok = 0;
        }
        else
        {
            cnt++;
            if(lit(s[i]))
                ok=true;
        }
        i++;
        if(s[i]=='\0' &amp;&amp; okk)
            s[i]=' ' , s[i+1]='\0' , okk=false;
    }
    return cntmax;
}

void afisare()
{
    int i = 0;
    int cnt = 0 , cntmax = lmax();
    bool ok = false , okk = true;
    while(s[i]!='\0')
    {
        if(s[i]==' ')
        {
            if(cnt == cntmax &amp;&amp; ok)
            {
                for(int j = i - 1 ; j >= i - cnt ; --j)
                    cout << s[j];
                cout << ' ';
            }
            else
            {
                for(int j = i - cnt ; j <= i ; ++j)
                    cout << s[j];
                //cout << ' ';
            }
            cnt = 0 , ok = 0;
        }
        else
        {
            cnt++;
            if(lit(s[i]))
                ok=true;
        }
        i++;
        if(s[i]=='\0' &amp;&amp; okk)
            s[i]=' ' , s[i+1]='\0' , okk=false;
    }
}

int main()
{
    cin.getline(s , 256);
    afisare();
    return 0;
}</pre>
