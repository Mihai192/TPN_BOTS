<p>Anda are trei pisici foarte pretențioase, fiecare preferând un ingredient diferit din mâncarea cumpărată. La magazinul pentru animale, fiecare plic de mâncare are un cod de 3 cifre. Fiecare cifră din cele trei cifre reprezintă un tip de ingredient.</p>

<h1>Cerința</h1>

<p>Știind că există 9 tipuri de ingrediente și că fiecare pisică are o preferință pentru un anumit ingredient, afișați:</p>

<p>1)	Câte plicuri poate cumpăra Anda astfel încât măcar una dintre pisici să-l poată mânca?<br>
2)	Există vreun plic care să placă tuturor celor trei pisici?</p>

<h1>Date de intrare</h1>

<p>Pe prima linie a fișierului de intrare <code>catsfood.in</code> se află trei numere naturale reprezentând tipul de ingredient preferat de fiecare pisică în parte; pe linia a doua se află un număr natural <code>n</code> care reprezintă numărul de plicuri din magazin, iar pe linia a treia, desparțite printr-un spațiu, codurile de pe fiecare plic cu mâncare.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>catsfood.out</code> va conține pe prima linie răspunsul la prima cerință, iar pe rândul următor cuvântul <code>DA</code> sau <code>NU</code> în funcție de răspunsul de la cerința a doua. </p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>2 ≤ n ≤ 10000</code></li>
	<li><code>100 ≤</code> codul de pe fiecare plic <code>≤ 999</code></li>
	<li><code>1 ≤</code> tip ingredient <code>≤ 9</code></li>
	<li>La cerința <code>2)</code> răspunsul va fi scris cu litere mari, <code>DA</code> sau <code>NU</code>, în funcție de rezultat</li>
	<li>Există coduri care se pot repeta</li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>catsfood.in</code></p>

<pre contenteditable="true" editable="true">3 9 2 
5
126 379 457 132 329</pre>

<p><code>catsfood.out</code></p>

<pre contenteditable="true" editable="true">4
DA</pre>

<h3>Explicație</h3>

<p>Pisicile preferă tipul <b>2</b>, <b>3</b> și <b>9</b>; există <b>5</b> plicuri dintre care <b>4</b> conțin măcar tipul <b>2</b>, <b>3</b> sau <b>9</b> , iar plicul cu codul <b>329</b> place tuturor pisicilor.</p>

<h1>Exemplul 2:</h1>

<p><code>catsfood.in</code></p>

<pre contenteditable="true" editable="true">3 9 2 
4
888 777 656 487 </pre>

<p><code>catsfood.out</code></p>

<pre contenteditable="true" editable="true">0
NU</pre>

<h3>Explicație</h3>

<p>Pisicile preferă tipul <b>2</b>, <b>3</b> și <b>9</b>; există <b>5</b> plicuri între nici unul nu conține măcar tipul <b>2</b>, <b>3</b> sau <b>9</b>. </p>

<h1>Exemplul 3:</h1>

<p><code>catsfood.in</code></p>

<pre contenteditable="true" editable="true">3 9 2 
5
123 186 136 126 576</pre>

<p><code>catsfood.out</code></p>

<pre contenteditable="true" editable="true">3
NU</pre>

<h3>Explicație</h3>

<p>Pisicile preferă tipul <b>2</b>, <b>3</b> și <b>9</b>; există <b>3</b> plicuri pe care îl preferă măcar o pisică, dar niciunul care să placă tuturor pisicilor. </p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("catsfood.in");
ofstream cout("catsfood.out");

int a , b , c , n , x , cnt , rez;

int main()
{
    cin >> a >> b >> c;
    int a1 = a * 100 + b * 10 + c;
    int a2 = a * 100 + c * 10 + b;

    int b1 = b * 100 + a * 10 + c;
    int b2 = b * 100 + c * 10 + a;

    int c1 = c * 100 + a * 10 + b;
    int c2 = c * 100 + b * 10 + a;

    cin >> n;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> x;
        if(x == a1 || x == a2 || x == b1 || x == b2 &amp;&amp; x == c1 || x == c2) rez++;
        int ok = 0 , aux = x;
        while(x)
        {
            if(x % 10 == a || x % 10 == b || x % 10 == c) ok++;
            x /= 10;
        }
        if(ok > 0) cnt++;
    }
    cout << cnt << '\n';
    if(rez > 0) cout << "DA";
    else cout << "NU";
}</pre>
