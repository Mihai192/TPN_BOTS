<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <queue>
using namespace std;

ifstream cin("Ohoo.in");
ofstream cout("Ohoo.out");

int n, m, rez;
vector<vector<pair<int, int>>> G(100001);
queue<int> Q;

bool potajung(int k){
    int P[100001] = {0};
    P[1] = 1;
    Q.push(1);
    while(!Q.empty()){
        int x = Q.front();
        for(auto i:G[x])
            if(!P[i.first] &amp;&amp; i.second <= k)
                P[i.first] = 1, Q.push(i.first);
        Q.pop();
    }
    return P[n] == 1;
}

void CB(){
    int st = 0, dr = 1000000;
    int mij = 0;
    while(st <= dr){
        mij = (st + dr) / 2;
        if(potajung(mij)){
            rez = mij;
            dr = mij - 1;
        }
        else
            st = mij + 1;
    }
    if(potajung(dr))
        rez = dr;
}

int main(){
    cin >> n >> m;
    for(int i = 1; i <= m; ++i){
        int x, y, c;
        cin >> x >> y >> c;
        G[x].push_back({y, c});
        G[y].push_back({x, c});
    }
    CB();
    cout << rez;
    return 0;
}</pre>
