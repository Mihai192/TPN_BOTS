<h1>Cerința</h1>

<p>Pentru un număr natural <code>x</code> mai mare decât <code>1</code> numim <strong>redusul</strong> lui <code>x</code> cel mai mic număr natural care are exact aceiași divizori primi ca și <code>x</code>.</p>

<p>Se dă un tablou cu <code>n</code> elemente, numere naturale mai mari decât <code>1</code>. Să se înlocuiască fiecare element din tablou cu redusul său și apoi să afișeze elementele din tabloului ordonate descrescător.</p>

<p>Se vor defini și apela următoarele subprograme:</p>

<ul>
	<li><code>citire</code>, care citește de la tastatură valoarea lui <code>n</code> și cele <code>n</code> elemente ale tabloului</li>
	<li><code>afisare</code>, care afișează pe ecran elementele tabloului, separate prin exact un spațiu</li>
	<li><code>redus</code>, care determină pentru un număr dat redusul său</li>
	<li><code>sortare</code>, care sortează descrescător un tablou</li>
	<li><code>inloc</code>, care realizează înlocuirile cerute.</li>
</ul>

<p><strong>În programele C/C++ nu se vor folosi variabile globale</strong>.</p>

<h1>Date de intrare</h1>

<p>Se citește de la tastatură numărul <code>n</code>, iar apoi cele <code>n</code> elemente ale tabloului.</p>

<h1>Date de ieșire</h1>

<p>Se vor afișa pe ecran elementele tabloului după transformările cerute, separate prin exact un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>elementele tabloului vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=1958414068&amp;w=728&amp;lmt=1595358198&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1828%2Finlocuire4&amp;flash=0&amp;wgl=1&amp;dt=1595358198326&amp;bpp=17&amp;bdt=216&amp;idt=142&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=7202165850491&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595358198&amp;ga_hid=402531642&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1238&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066357%2C21066428&amp;oid=3&amp;pvsid=4176173885459764&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F915%2Felimpalindrom&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=EpCPTX8LsZ&amp;p=https%3A//www.pbinfo.ro&amp;dtd=147" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJuq2bWE3-oCFWDjuwgde0UG4g"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">7
7 18 18 5 14 20 4 </pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">14 10 7 6 6 5 2</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

void citire(int&amp; n, int a[]){
    cin >> n;
    for(int i = 1; i <= n; ++i)
        cin >> a[i];
}

int redus(int n){
    int nr = 1;
    int d = 2;
    while(n > 1){
        int p = 0;
        while(n % d == 0)
            n/=d, p++;
        if(p > 0)
            nr *= d;
        d++;
        if(d * d > n)
            d = n;
    }
    return nr;
}

void inloc(int a[], int i, int r){
    a[i] = r;
}

void sortare(int n, int a[]){
    for(int i = 1; i < n; ++i)
        for(int j = i + 1; j <= n; ++j)
            if(a[j] > a[i])
                swap(a[i], a[j]);
}

void afisare(int n, int a[]){
    for(int i = 1; i <= n; ++i)
        cout << a[i] << " ";
}

int main()
{
    int n, a[1001];
    citire(n, a);
    for(int i = 1; i <= n; ++i){
        int r = redus(a[i]);
        inloc(a, i, r);
    }
    sortare(n, a);
    afisare(n, a);
    return 0;
}</pre>
