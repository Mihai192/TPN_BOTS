<h1>Cerința</h1>

<p>Fie <code>N</code> un număr întreg impar și un vector <code>A</code> cu <code>N</code> elemente. Pentru fiecare element <code>A</code><sub><code>i</code></sub>, acesta se poate incrementa cu <code>1</code>. Fiecare element sepoate incrementa cel mult odată. Mai mult, se pot realiza cel mult <code>K</code> incrementări.</p>

<p>Scopul este de a maximiza medianul lui <code>A</code>. Medianul unui vector este definit ca fiind elementul din mijlocul vectorului după sortarea acestuia. De exemplu, medianul vectorului <code>[5,8,2,9,1]</code> este <code>5</code>.</p>

<h1>Date de intrare</h1>

<p>Prima linie conține un număr impar <code>N</code> și un întreg <code>K</code>. Pe a doua linie se află <code>N</code> numere separate prin spații naturale, reprezentând elementele vectorului.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul ce reprezintă maximul posibil al medianului după aplicarea operațiilor de incrementare.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ k ≤ n ≤ 1000</code>, <code>N</code> e impar.</li>
	<li><code>1 ≤ A</code><sub><code>i</code></sub> <code>≤ 1000</code>.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361885&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3406%2Faseasyasabc&amp;flash=0&amp;wgl=1&amp;dt=1595361885185&amp;bpp=4&amp;bdt=213&amp;idt=121&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4819841275642&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361885&amp;ga_hid=1252594449&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1098&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3317441133149393&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2384%2Fdivigrup&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=seklIAz9p0&amp;p=https%3A//www.pbinfo.ro&amp;dtd=127" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CP6g2JOS3-oCFTrAuwgdL4ELCg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">9 3
4 4 4 8 2 2 9 9 1</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">5</pre>

<h3>Explicație</h3>

<p>Se pot incrementa elementele de pe pozițiile <code>1</code>, <code>2</code> și <code>3</code>. Valoarea comună reprezintă medianul maxim care se poate obține.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <algorithm>
using namespace std;

int n, a[1001], k;

int main(){
    cin >> n >> k;
    for(int i = 1; i <= n; ++i)
        cin >> a[i];
    sort(a + 1, a + n + 1);
    for(int i = n/2+1; k &amp;&amp; i <= n; ++i)
        a[i] ++, k--;
    sort(a + 1, a + n + 1);
    cout << a[n/2+1];
    return 0;
}</pre>
