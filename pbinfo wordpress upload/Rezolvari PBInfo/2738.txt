<h1>Cerința</h1>

<p>Se dă un șir de caractere care conține cuvinte formate din litere mici ale alfabetului englez și separate printr-un singur spațiu. Să se determine cel mai lung cuvânt care are toate literele distincte. Dacă nu există niciun cuvânt cu toate literele distincte se va afișa <code>-1</code>.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură un șir de caractere.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran cuvântul determinat sau <code>-1</code>, conform cerinței.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>șirul dat conține maximum <code>255</code> de caractere</li>
	<li>dacă există mai multe cuvinte cu toate literele distincte de lungime maximă se va afișa cel mai din stânga</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357413&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2738%2Fdistlungmax&amp;flash=0&amp;wgl=1&amp;dt=1595357413502&amp;bpp=6&amp;bdt=219&amp;idt=164&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4624918148964&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357414&amp;ga_hid=481121373&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1022&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=4093719238000295&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2582%2Fsecvelim&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=dEI9KWMzZT&amp;p=https%3A//www.pbinfo.ro&amp;dtd=170" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CM_wvL-B3-oCFTDjuwgdOCkNow"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">abcabcd abcdef ab</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">abcdef</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int f[1000];
char s[1000];

void init()
{
    for(int i = 1 ; i <= 1000 ; ++i)
        f[i]=0;
}

bool verif(int i)
{
    init();
    for( ; s[i]!=' ' &amp;&amp; s[i]!='\0' ; ++i)
        f[(int)s[i]]++;
    for(int i = 50 ; i < 200 ; ++i)
        if(f[i]>1)
            return 0;
    return 1;
}

int lung(int i)
{
    int cnt = 0;
    for( ; s[i]!=' ' &amp;&amp; s[i]!='\0' ; ++i)
        cnt++;
    return cnt;
}

void afis(int i)
{
    for( ; s[i] != ' ' &amp;&amp; s[i]!='\0' ; ++i)
        cout << s[i];
}

int main()
{
    int ind = -1;
    int max=0;
    cin.getline(s , 300);
    if(verif(0))
        ind = 0 , max = lung(0);
    int i=0;
    while(s[i]!='\0')
    {
        if(s[i]==' ' &amp;&amp; s[i+1]!=' ' &amp;&amp; s[i+1]!='\0')
            if(verif(i+1) &amp;&amp; lung(i+1)>max)
                ind = i+1 , max = lung(i+1);
        i++;
    }
    if(ind!=-1)
    afis(ind);
    else
        cout << -1;
    return 0;
}</pre>
