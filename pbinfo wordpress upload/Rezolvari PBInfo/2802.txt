<h1>Cerința</h1>

<p>Se citește de la tastatură numărul <code>n</code> și un număr <code>p</code> cu valoarea <code>1</code> sau <code>2</code> și apoi <code>n</code> șiruri de tip <code>nume prenume media1 media2 media3</code> separate prin spații.</p>

<p>Pentru <code>p=1</code>, se va afișa numărul elevilor care au media generală mai mare sau egală decât media clasei.</p>

<p>Pentru <code>p=2</code>, se va afișa pe primul rând media clasei și pe următoarele <code>n</code> rânduri, numele, prenumele și media generală a fiecărui elev, separate printr-un singur spațiu, sortat descrescător după medie; la medii egale se sortează crescător după nume, iar la nume egale crescător după prenume.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numerele <code>n p</code>, iar apoi de pe câte o linie cele <code>n</code> structuri de forma specificată în enunț.</p>

<h1>Date de ieșire</h1>

<p>Dacă <code>p=1</code> programul va afișa pe ecran numărul elevilor care au media generală mai mare decât media clasei.</p>

<p>Dacă <code>p=2</code> programul va afișa pe primul rând media clasei și pe următoarele <code>n</code> rânduri, numele, prenumele și media generală ale elevilor, separate printr-un singur spațiu, sortate conform cerinței.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100</code></li>
	<li>numele și prenumele au cel mult <code>100</code> de caractere</li>
	<li>toate mediile clasei se vor afișa cu două zecimale, rezultatul afișat este considerat valid dacă diferența în valoare absolută dintre acesta și cel corect este cel mult <code>0.01</code>.</li>
	<li>media generală a unui elev este media aritmetică celor trei medii date.</li>
	<li>media clasei este media aritmetică a mediilor generale ale elevilor.</li>
</ul>

<h1>Exemplul 1:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5 1
Juro Muro 2 3 5
San Hill 7 5 9
Barbarigo San 9 2 4
Ezio Marbo 2 6 3
Gorbo Borbo 2 4 6</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">2</pre>

<h1>Exemplul 2:</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5 2
Juro Muro 2 3 5
San Hill 7 5 9
Barbarigo San 9 2 4
Ezio Marbo 2 6 3
Gorbo Borbo 2 4 6</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">4.60
San Hill 7.00
Barbarigo San 5.00
Gorbo Borbo 4.00
Ezio Marbo 3.67
Juro Muro 3.33</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cstring>
#include <iomanip>
#include <algorithm>
using namespace std;

char nume1[101][101] , prenume1[101][101];
double x , y , z;
int n , cer , cnt;
double s;

struct poz
{
    char nume[101] , prenume[101];
    double media;
}A[101];

int maimic(poz a , poz b)
{
    if(a.media > b. media) return 1;
    else if(a.media == b.media &amp;&amp; strcmp(a.nume , b.nume) < 0) return 1;
    else if(a.media == b.media &amp;&amp; strcmp(a.nume , b.nume) == 0 &amp;&amp; strcmp(a.prenume , b.prenume) < 0) return 1;
    else return 0;
}

int main()
{
    cin >> n >> cer;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> nume1[i] >> prenume1[i] >> x >> y >> z;
        A[i].media = (x + y + z) /3;
        strcpy(A[i].nume , nume1[i]);
        strcpy(A[i].prenume , prenume1[i]);
        s += A[i].media;
    }
    double medgen = s / n;
    //cout << medgen << '\n';
    for(int i = 1 ; i <= n ; i++)
        if(A[i].media > medgen) cnt++;
    if(cer == 1) cout << cnt;
    else if(cer == 2)
    {
        cout << fixed << setprecision(2) << floor(medgen * 100) / 100 << '\n';
        sort(A+1 , A+n+1 , maimic);
        for(int i = 1 ; i <= n ; i++)
        {
            cout << A[i].nume << " " << A[i].prenume << " " << fixed << setprecision(2) << floor(A[i].media * 100) / 100 << '\n';
        }
    }
}</pre>
