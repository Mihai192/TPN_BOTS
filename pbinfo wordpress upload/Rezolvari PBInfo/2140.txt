<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("poartas.in");
ofstream cout("poartas.out");
#define MAX 251
int x[MAX][MAX], y[MAX][MAX], p, nrc;

int main()
{
    cin >> p;
    for (int i = 1, x1, y1, x2, y2; i <= p; i ++)
    {
        cin >> x1 >> y1 >> x2 >> y2;
        x[x1][y1] = x2;
        y[x1][y1] = y2;
    }
    for (int i = 0; i < MAX; i ++)
        for (int j = 0; j < MAX; j ++)
        {
            if (x[i][j])
            {
                if (x[i][j] == i &amp;&amp; y[i][j] == j)continue;
                int i1 = x[i][j], j1 = y[i][j];
                x[i][j] = y[i][j] = 0;
                while (i1)
                {
                    if (i1 == i &amp;&amp; j1 == j)nrc ++, i1 = 0;

                    int aui = i1, auj = j1;

                    i1 = x[aui][auj];
                    j1 = y[aui][auj];

                    x[aui][auj] = y[aui][auj] = 0;

                    nrc ++;
                }
            }
        }
    cout << nrc ;
}</pre>
