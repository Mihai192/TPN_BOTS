<p>Într-o cutie sunt <code>n</code> bomboane. <br>
Dacă se împart cele <code>n</code> bomboane în mod egal la un grup de <code>p</code> copii, rămân <code>p-1</code> bomboane.<br>
Dacă se împart cele <code>n</code> bomboane în mod egal la un grup de <code>q</code> copii, rămân <code>q-1</code> bomboane.</p>

<h1>Cerința</h1>

<p>Se dau <code>p</code> și <code>q</code>, numere naturale. Aflați cel mai mic <code>n</code>, număr natural care satisface condițiile de mai sus.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>bomboane4.in</code> conține pe prima linie numerele <code>p</code> și <code>q</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul afișează în fișierul <code>bomboane4.out</code> numărul <code>n</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ p ≤ 10</code><sup><code>18</code></sup></li>
	<li><code>1 ≤ q ≤ 10</code><sup><code>18</code></sup></li>
</ul>

<h1>Exemplul 1</h1>

<p><code>bomboane4.in</code></p>

<pre contenteditable="true" editable="true">4 7</pre>

<p><code>bomboane4.out</code></p>

<pre contenteditable="true" editable="true">27</pre>

<h3>Explicație</h3>

<p><code>27 = 4 * 6 + 3</code>. Dacă se împart <code>27</code> de bomboane la <code>4</code> copii, aceștia primesc câte <code>6</code> bomboane și rămân <code>3</code> bomboane.<br>
<code>27 = 7 * 3 + 6</code>. Dacă se împart <code>27</code> de bomboane la <code>7</code> copii, aceștia primesc câte <code>3</code> bomboane și rămân <code>6</code> bomboane.</p>

<h1>Exemplul 2</h1>

<p><code>bomboane4.in</code></p>

<pre contenteditable="true" editable="true">10 20</pre>

<p><code>bomboane4.out</code></p>

<pre contenteditable="true" editable="true">19</pre>

<h3>Explicație</h3>

<p><code>19 = 1 * 10 + 9</code>. Dacă se împart <code>19</code> bomboane la <code>10</code> copii, aceștia primesc câte o bomboană și rămân <code>9</code> bomboane.<br>
<code>19 = 0 * 20 + 19</code>. Dacă se împart <code>19</code>  bomboane la <code>20</code> copii, aceștia primesc câte <code>0</code> bomboane și rămân <code>19</code> bomboane.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("bomboane4.in");
ofstream cout("bomboane4.out");

int A[30] , B[30] , C[50];

long long int cmmdc(long long int a , long long int b)
{
    while(b)
    {
        long long int r = a % b;
        a = b;
        b = r;
    }
    return a;
}

void inmultire()
{
    int i,j,T=0;
    C[0]=A[0]+B[0]-1;
    for (i=1;i<=A[0]+B[0];)
        C[i++]=0;
    for (i=1;i<=A[0];i++)
        for (j=1;j<=B[0];j++)
            C[i+j-1]+=A[i]*B[j];
    for (i=1;i<=C[0];i++)
    {
        T=(C[i]+=T)/10;
        C[i]%=10;
    }
    if( T )
        C[++C[0]]=T;
}


unsigned long Divide(unsigned long long X)
{ int i;

  unsigned long R=0;

  for (i=C[0];i;i--)

    { C[i]=(R=10*R+C[i])/X;

      R%=X;

    }

  while (!C[C[0]] &amp;&amp; C[0]>1) C[0]--;

  return R;

}

void Subtract()
{
    int S[50];
    int i, T=0;
    S[0]=1 , S[1]=1;
    for (i=S[0]+1;i<=C[0];) S[i++]=0;

    for (i=1;i<=C[0];i++)

    C[i]+= (T=(C[i]-=S[i]+T)<0) ? 10 : 0;

    while (!C[C[0]]) C[0]--;

}

int main()
{
    long long int a , b;
    cin >> a >> b;
    unsigned long long d = cmmdc(a , b);
    int i = 1;
    while(a)
    {
        A[i]=a%10;
        a/=10;
        i++;
    }
    A[0]=i-1;
    i = 1;
    while(b)
    {
        B[i]=b%10;
        b/=10;
        i++;
    }
    B[0]=i-1;
    inmultire();
    int x = Divide(d);
    Subtract();
    for(int i = C[0] ; i ; --i)
        cout << C[i];
}</pre>
