<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <iomanip>
using namespace std;
ifstream cin("cartele.in");
ofstream cout("cartele.out");
int a[51][51], b[51][51] , aux[51][51] , n , c;
int eg()
{
   for(int i = 1; i <= n; i++)
      for(int j = 1; j <= n; j++)
         if (a[i][j] != b[i][j])return 0;
   return 1;
}
void fill()
{
   for(int i = 1; i <= n; i++)
      for(int j = 1; j<= n; j++)
         aux[n-j+1][i] = b[i][j];
   for(int i = 1; i <= n; i++)
      for(int j = 1; j <= n; j++)
         b[i][j] = aux[i][j];
}

int main()
{
    cin >> n >> c;
    int ok = 1;
    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= n; j++)
            cin >> a[i][j];
    for(int k = 1; k <= c; k++)
    {
        ok = 1;
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
            {
                cin >> b[i][j];
                if(b[i][j] != a[i][j]) ok = 0;
            }
             for(int f = 1; f <= 2 &amp;&amp; !ok; f++)
            {
                for(int r = 1; r <= 4 &amp;&amp; !ok; r++)
                {
                    fill();
                    if(eg()) ok = 1;
                }
                if(!ok )
                    for(int i = 1; i <= n / 2; i++)
                        for(int j = 1; j <= n; j++) swap(b[i][j] , b[n-i+1][j]);
            }
            if(ok) cout << 1 << '\n';
            else cout << 0 << '\n';
          }
   return 0;
}</pre>
