<h3>Cerința</h3>

<p>Considerăm şirul <code>a</code> cu <code>n</code> numere naturale nenule distincte două câte două şi un număr <code>x</code>. Scrieţi un program care determină poziţia pe care se va găsi numărul <code>x</code> în şirul <code>a</code>, dacă acesta ar fi ordonat descrescător.</p>

<h3>Date de intrare</h3>

<p>Programul citește de la tastatură numerele <code>n</code> şi <code>x</code>, urmate de <code>n</code> numere naturale reprezentând elementele şirului <code>a</code>.</p>

<h3>Date de ieșire</h3>

<p>Programul va afișa pe ecran poziţia determinată mai sus. Dacă numărul <code>x</code> nu se regăseşte în şir, valoarea afişată va fi <code>-1</code>.</p>

<h3>Restricții și precizări</h3>

<ul>
	<li><code>1 ≤ n &lt; 200000</code></li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>10</code> <sup> <code>9</code> </sup></li>
	<li>considerăm elementele şirului <code>a</code> numerotate de la <code>1</code> la <code>n</code></li>
</ul>

<h3>Exemple:</h3>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">9 13
26 2 5 30 13 45 62 7 79</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>

<p>Dacă sortăm şirul <code>a</code> descrescător obţinem şirul <code>(79,62,45,30,26,13,7,5,2)</code>. Valoarea <code>13</code> se află pe poziţia <code>6</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <algorithm>
using namespace std;
int main()
{
    int x , n , k , cnt = 0 , ok = 0;
    cin >> n >> k;
    for(int i = 1 ; i <= n ; ++i)
    {
        cin >> x;
        if(x > k) cnt++;
        if(x == k) ok++;
    }
    if(ok == 0) cout << -1;
    else cout << cnt + 1;
    return 0;
}</pre>
