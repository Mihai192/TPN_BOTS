<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
using namespace std;

ifstream cin("pluricex1.in");
ofstream cout("pluricex1.out");

int n , p[10] , cnt , x[10] , m , d , M[25][25];

void sol()
{
    int s[11] = {0};
    for(int i = 1 ; i <= n ; i++)
        for(int j = 1 ; M[x[i]][j] != 0 ; j++)
            s[M[x[i]][j]] = 1;
    int ok = 1;
    for(int i = 1 ; i <= d ; i++)
        if(s[i] == 0) ok = 0;
    if(ok == 1)
    {
        for(int i = 1 ; i <= m ; i++)
            cout << x[i] << " ";
        cout << '\n';
    }
}

void back(int k)
{
    for(int i = x[k - 1] + 1; i <= n; ++i)
    {
        x[k] = i;
        if(k == m) sol();
        else back(k + 1);
    }
}

int main()
{
    cin >> n >> m >> d;
    for(int i = 1 ; i <= n ; i++)
    {
        int a;
        cin >> a;
        for(int j = 1 ; j <= a ; j++)
            cin >> M[i][j];
    }
    back(1);
    return 0;
}</pre>
