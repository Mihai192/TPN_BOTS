<p>Dorel este pasionat de feng shui. Astfel, pentru a-şi crea un cadru adecvat  meditaţiei, s-a hotărât să scrie pe pereţii casei numere care au un număr prim de divizori. El a găsit <code>n</code> numere, însă nu ştie să le aleagă pe cele potrivite.  </p>

<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale. Aflaţi câte dintre acestea au un număr prim de divizori.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>prim013.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale nenule separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>prim013.out</code> va conține pe prima linie numărul de numere care au un număr prim de divizori.</p>


<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1.000.000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi mai mici decât <code>10.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361199&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2328%2Fprim013&amp;flash=0&amp;wgl=1&amp;dt=1595361199364&amp;bpp=7&amp;bdt=246&amp;idt=122&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2260601662003&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361199&amp;ga_hid=1896422552&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1001758615475810&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2325%2Fprim003&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=bzHiudVdvC&amp;p=https%3A//www.pbinfo.ro&amp;dtd=128" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNO418yP3-oCFXEF5gods9wJYQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>prim013.in</code></p>

<pre contenteditable="true" editable="true">5
1 3 6 9 625</pre>

<p><code>prim013.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h3>Explicație</h3>

<p>Numerele <code>3,9,625</code> au <code>2,3</code> respectiv <code>5</code> divizori, numărul divizorilor fiind prim. În total sunt <code>3</code> numere cu numărul divizorilor prim.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream fin("prim013.in");
ofstream fout("prim013.out");
int prim(int n)
{
    if(n == 0 || n == 1) return 0;
    if(n == 2) return 1;
    if(n % 2 == 0) return 0;
    for(int i = 3 ; i * i <= n ; i += 2) if(n % i == 0) return 0;
    return 1;
}
int nrdiv(int n)
{
    int d = 2 , prod = 1;
    while(n > 1)
    {
        int p = 0;
        while(n % d == 0) {n /= d; p++;}
        if(p) prod = prod * (p+1);
        d++;
        if(d * d > n) d =n;
    }
    return prod;
}
int main()
{
    int n , x , cnt = 0;
    fin >> n;
    for(int i = 1 ; i <= n ; ++i)
    {
        fin >> x;
        if(x != 1 &amp;&amp; prim(nrdiv(x))) cnt++;
    }
    fout << cnt;

    fin.close();
    fout.close();

    return 0;
}</pre>
