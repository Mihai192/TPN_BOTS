<h1>Enunt</h1>

<p>În timpul acţiunii “Furtuna în deşert” din cauza unei furtuni de nisip, <code>n</code> soldaţi s-au rătăcit de plutoanele lor. După trecerea furtunii se pune problema regrupării acestora pe plutoane. Pentru aceasta se folosesc plăcuţele de identificare pe care soldaţii le poartă la gât. Pe aceste plăcuţe sunt scrise numere care pot identifica fiecare soldat şi plutonul din care acesta face parte. Astfel, soldaţii din acelaşi pluton au numărul de identificare format din aceleaşi cifre, dispuse în altă ordine şi numerele de identificare sunt unice. De exemplu, numerele de identificare <code>78003433</code>, <code>83043073</code>, <code>33347008</code> indică faptul ca cei trei soldaţi care le poartă fac parte din acelaşi pluton.</p>

<h1>Cerința</h1>

<p>Fiind date cele <code>n</code> numere de pe plăcuţele de identificare, să se regrupeze cei <code>n</code> soldaţi pe plutoane, indicându-se numărul de plutoane găsite (un pluton refăcut trebuie să aibă minimum un soldat), numărul de soldaţi din cel mai numeros pluton, numărul de plutoane care au acest număr maxim de soldaţi precum şi componenţa unui astfel de pluton (cu număr maxim de soldaţi regrupaţi).</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>pluton.in</code> conţine pe prima linie numărul <code>n</code> de soldaţi recuperaţi, iar pe fiecare dintre următoarele <code>n</code> linii câte un număr de identificare a celor <code>n</code> soldaţi.</p>

<h1>Date de ieșire</h1>

<p>Fişierul de ieşire <code>pluton.out</code> va conţine pe prima linie numărul de plutoane refăcute. Linia a doua va conţine numărul de soldaţi din cel mai numeros pluton refăcut. Linia a treia va conţine numărul de plutoane care au numărul maxim de soldaţi recuperaţi. Linia a patra va conţine componenţa unui astfel de pluton, cu număr maxim de soldaţi recuperaţi, numerele de identificare ale soldaţilor din componenţă fiind scrise unul după altul separate prin câte un spaţiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>0 &lt; n ≤ 4000</code></li>
	<li><code>0 ≤</code> număr de identificare <code>&lt; 2.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595361796&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1380%2Fpluton&amp;flash=0&amp;wgl=1&amp;dt=1595361796577&amp;bpp=4&amp;bdt=204&amp;idt=159&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=4672197105556&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361797&amp;ga_hid=5964159&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1445&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358&amp;oid=3&amp;pvsid=4463286154983569&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1820%2Fbinar&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=EawNWW3JLz&amp;p=https%3A//www.pbinfo.ro&amp;dtd=165" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKmruumR3-oCFU7Quwgdo8ILIg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>pluton.in</code></p>

<pre contenteditable="true" editable="true">10
1223 
123 
666 
321 
7890 
2213 
312 
655 
1000 
1322</pre>

<p><code>pluton.out</code></p>

<pre contenteditable="true" editable="true">6
3
2
321 312 123</pre>

<h3>Explicație</h3>

<p>Au fost recuperaţi soldaţi din <code>6</code> plutoane distincte, cei mai mulţi soldaţi recuperaţi dintr-un pluton fiind în număr de <code>3</code>. Există <code>2</code> plutoane cu număr maxim de soldaţi recuperaţi <code>(3)</code>, unul dintre ele fiind format din soldaţii cu numerele <code>321 312 123</code>. De remarcat că şi soluţia <code>1223 2213 1322</code> este corectă.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("pluton.in");
ofstream cout("pluton.out");
int n , a[4001] , v[4001] , cnt , lmax , x;

int pluton(int n)
{
    int f[10] = {0} , rez = 0;
    while(n) {f[n % 10] ++ ; n /= 10;}
    for(int i = 1 ; i <= 9 ; ++i)
        for(int j = 1 ; j <= f[i] ; ++j)
            rez = rez * 10 + i;
    for(int i = 1 ; i <= f[0] ; ++i) rez *= 10;
    return rez;
}

int main()
{
    int n , l = 1;
    cin >> n;
    for(int i = 0 ; i < n ; ++i)
    {
        cin >> v[i];
        a[i] = pluton(v[i]);
    }
    sort(a , a + n);
    for(int i = 0 ; i < n ; ++i)
        if(a[i] != a[i + 1]) cnt++;
    cout << cnt << '\n';
    cnt = 0;
    for(int i = 0 ; i < n ; ++i)
    {
        if(a[i] != a[i-1]) l = 1;
        else
        {
            l++;
            if(l > lmax) lmax = l , cnt = 0 , x = a[i];
            if(l == lmax) cnt++;
        }
    }
    cout << lmax << '\n' << cnt << '\n';
    for(int i = 0 ; i < n ; ++i)
        if(pluton(v[i]) == x)
            cout << v[i] << ' ';
   </pre>
