<h1>Cerința</h1>

<p>Se consideră o matrice cu <code>n</code> linii și <code>m</code> coloane. Spunem că o poziție este liberă dacă elementul de pe linia <code>i</code> și coloana <code>j</code> este egal cu <code>0</code> și <code>1</code> în caz contrar. Spunem despre mai multe elemente ocupate că formează o zonă, dacă elementele se învecinează pe cele patru direcții (sus, jos, dreapta, stânga).</p>

<p>Calculați pentru fiecare zonă numărul de elemente și afișați noua matrice formată prin înlocuirea elementelor egale cu <code>1</code> cu numărul de elemente pe care îl are zona din care face parte elementul respectiv.</p>

<h1>Date de intrare</h1>

<p>De pe prima linie a fișierului <code>zona3.in</code> se citesc două numere naturale <code>n</code> și <code>m</code>. Următoarele <code>n</code> linii conțin câte <code>m</code> valori <code>0</code> sau <code>1</code>.</p>

<h1>Date de ieșire</h1>

<p>Scrieți în fișierul <code>zona3.out</code> matricea care rezultă din operațiile specificate în cerință.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>2 ≤ n, m ≤ 100</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357817&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1576%2Fzona3&amp;flash=0&amp;wgl=1&amp;dt=1595357816990&amp;bpp=5&amp;bdt=228&amp;idt=160&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=7117000941332&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357817&amp;ga_hid=1903201238&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1064&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2912451633220112&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F841%2Fbomber&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=FrXNkKZqyr&amp;p=https%3A//www.pbinfo.ro&amp;dtd=167" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLH87_-C3-oCFSfKuwgdStIHFg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>zona3.in</code></p>

<pre contenteditable="true" editable="true">6 8
1 1 0 0 1 1 1 0
0 0 0 1 1 1 0 0
1 1 0 0 0 1 0 0
0 1 1 1 1 0 0 0
0 0 0 0 1 1 0 0
1 1 0 1 0 0 0 1</pre>

<p><code>zona3.out</code></p>

<pre contenteditable="true" editable="true">2 2 0 0 7 7 7 0
0 0 0 7 7 7 0 0
8 8 0 0 0 7 0 0
0 8 8 8 8 0 0 0
0 0 0 0 8 8 0 0
2 2 0 1 0 0 0 1</pre>


<h3>Explicație</h3>

<p><img alt="" src="https://www.pbinfo.ro/resurse/42ea80/zona_ss.PNG"></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("zona3.in");
ofstream cout("zona3.out");

int a[105][105] , b[105][105] , v[10005] , p = 1;

void fill(int i , int j , int &amp;c)
{
    if(a[i][j]==1)
    {
        a[i][j]=0;
        c++;
        if(a[i+1][j]==1)
            fill(i+1 , j , c);
        if(a[i-1][j]==1)
            fill(i-1 , j , c);
        if(a[i][j+1]==1)
            fill(i , j+1 , c);
        if(a[i][j-1]==1)
            fill(i , j-1 , c);
    }
}

void fill1(int i , int j , int val)
{
    if(b[i][j]==1)
    {
        b[i][j]=val;
        if(b[i+1][j]==1)
            fill1(i+1 , j , val);
        if(b[i-1][j]==1)
            fill1(i-1 , j , val);
        if(b[i][j+1]==1)
            fill1(i , j+1 , val);
        if(b[i][j-1]==1)
            fill1(i , j-1 , val);
    }
}

int main()
{
    int n , m;
    cin >> n >> m;
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j)
            cin >> a[i][j] , b[i][j] = a[i][j];
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j)
            if(a[i][j]==1)
            {
                int c = 0;
                fill(i , j , c);
                v[p]=c;
                p++;
            }
    p--;
    int cnt=1;
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j)
            if(b[i][j]==1)
            {
                fill1(i , j , v[cnt]);
                cnt++;
            }
    for(int i = 1 ; i <= n ; ++i)
    {
        for(int j = 1 ; j <= m ; ++j)
            cout << b[i][j] << ' ';
        cout << endl;
    }
    return 0;
}</pre>
