<h1>Cerința</h1>

<p>Se dă un număr natural <code>n</code>. Să se genereze o matrice pătratică de dimensiune <code>2</code><sup><code>n</code></sup>, după următoarele reguli:</p>

<ul>
	<li>împărțim matricea în <code>4</code> submatrice</li>
	<li>cea din stânga-sus are toate elementele <code>1</code></li>
	<li>celelalte trei se generează similar, dar au dimensiunea <code>2</code><sup><code>n-1</code></sup>.</li>
</ul>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran matricea construită, câte o linie a matricei pe o linie a ecranului, elementele de pe o linie fiind separate prin câte un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 10</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357916&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F845%2Fpattern&amp;flash=0&amp;wgl=1&amp;dt=1595357916094&amp;bpp=4&amp;bdt=211&amp;idt=137&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=3617840492357&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357916&amp;ga_hid=1591708932&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1032&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358&amp;oid=3&amp;pvsid=2932919749798911&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1660%2Ffotbal&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=32tQlP9wv0&amp;p=https%3A//www.pbinfo.ro&amp;dtd=144" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPC1kK-D3-oCFVPKsgodKucJCw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">3</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">1 1 1 1 1 1 1 0 
1 1 1 1 1 1 0 0 
1 1 1 1 1 0 1 0 
1 1 1 1 0 0 0 0 
1 1 1 0 1 1 1 0 
1 1 0 0 1 1 0 0 
1 0 1 0 1 0 1 0 
0 0 0 0 0 0 0 0 </pre>

<h1>Explicație</h1>

<p>Matricea generată corespunde următorului pattern:</p>

<p><img alt="" height="160" src="/resurse/probleme/801-850/845-pattern.png" width="160"></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int n , p , a[1050][1050];

void pattern (int i1 , int j1 , int i2 , int j2)
{
    if(i1 < i2)
    {
        int im = (i1 + i2) / 2 , jm = (j1 + j2) / 2;
        for(int i = i1 ; i <= im ; i ++)
            for(int j = j1 ; j <= jm ; j ++)
                a[i][j] = 1;
        pattern(i1 , jm + 1 , im , j2);
        pattern(im + 1 , j1 , i2 , jm);
        pattern(im + 1 , jm + 1 , i2 , j2);
    }
}

int main()
{
    cin >> n;
    p = 1;
    for(int i = 1 ; i <= n ; i ++)
        p *= 2;
    
    pattern(1 , 1 , p , p);
    for(int i = 1 ; i <= p ; i ++)
    {
        for(int j = 1; j <= p ; j ++)
            cout << a[i][j] << " ";
        cout << endl;
    }
    return 0;
}</pre>
