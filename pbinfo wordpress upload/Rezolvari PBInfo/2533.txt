<h1>Cerința</h1>

<p>Numim <strong>secvență încadrată</strong> a unui șir de numere naturale un subșir al acestuia, format din termeni aflați pe poziții consecutive în șirul dat, subșir care începe și se termină cu aceeași valoare. Lungimea secvenței este egală cu numărul de termeni ai acesteia.</p>

<p>Să se determine secvențele încadrate dintr-un șir, care au lungimea maximă.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>secventaincadrata.in</code> conține cel puțin două și cel mult <code>10</code><sup><code>6</code></sup> numere naturale din intervalul <code>[0,9]</code>, separate printr-un spațiu.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>secventaincadrata.out</code> va conține pe prima linie numărul <code>L</code>, reprezentând lungimea maximă a secvențelor încadrate, iar pe a doua linie a fișierului valoarea primului termen al fiecărei secvențe încadrate de lungime maximă, în ordine crescătoare și separate printr-un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>în șir există ce puțin doi termeni egali</li>
	<li>proiectați un algoritm eficient din punctul de vedere al timpului de executare și a memoriei utilizate
	<ul>
		<li>se recomandă o soluție care să evite stocarea tuturor valorilor citite într-un tablou sau într-o altă structură de date similară</li>
	</ul></li>
	</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361204&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2533%2Fsecventaincadrata&amp;flash=0&amp;wgl=1&amp;dt=1595361204525&amp;bpp=4&amp;bdt=220&amp;idt=136&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=306213733500&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361205&amp;ga_hid=218455805&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1160&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1645435223437014&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2328%2Fprim013&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=Ae8b5kGELk&amp;p=https%3A//www.pbinfo.ro&amp;dtd=144" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CM6ck8-P3-oCFczZsgodthMB5w"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>secventaincadrata.in</code></p>

<pre contenteditable="true" editable="true">3 1 5 2 4 5 5 2 5 9 5 7 4 6 8 0 8</pre>

<p><code>secventaincadrata.out</code></p>

<pre contenteditable="true" editable="true">9
4 5</pre>

<h3>Explicație</h3>

<p>Cele două secvențe încadrate de lungime maximă egală cu <code>9</code>, sunt <code>5 2 4 5 5 2 5 9 5</code>, respectiv <code>4 5 5 2 5 9 5 7 4</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
using namespace std;
ifstream cin("secventaincadrata.in");
ofstream cout("secventaincadrata.out");
#define Inf 0x3f3f3f

int A[10], x, n, mx, lmax[10];
int main()
{
    for (int i = 0; i < 10; i ++)
        A[i] = Inf;

    //cin >> n;
    int i = 1;
    while(cin >> x)
    {

        lmax[x] = max(i - A[x] + 1, lmax[x]);
        if (A[x] == Inf)A[x] = i;
        mx = max(lmax[x], mx);
        i++;
    }
    cout << mx << '\n';
    for (int i = 0; i < 10; i ++)
        if (lmax[i] == mx)
            cout << i << ' ';
    return 0;
}</pre>
