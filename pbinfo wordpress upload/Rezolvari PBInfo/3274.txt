<p>Pentru un număr natural <code>x</code>, vom nota cu <code>B(x)</code> numărul biților de <code>1</code> din reprezentarea lui <code>x</code> în baza <code>2</code>. De exemplu, <code>B(6) = 2</code>, <code>B(15) = 4</code>, <code>B(16) = 1</code>. Fie un șir de <code>N</code> numere naturale <code>x</code><sub><code>1</code></sub>, <code>x</code><sub><code>2</code></sub>, …, <code>x</code><sub><code>N</code></sub>. Pentru orice două valori <code>i</code> și <code>j</code>, cu <code>1 ≤ i ≤ j ≤ N</code>, vom nota prin <code>B(i, j) = B(x</code><sub><code>i</code></sub><code>) + B(x</code><sub><code>i+1</code></sub><code>) + ... + B(x</code><sub><code>j</code></sub><code>)</code>, adică <code>B(i, j)</code> este numărul tuturor biților de <code>1</code> din secvența de numere <code>x</code><sub><code>i</code></sub>, <code>x</code><sub><code>i+1</code></sub>, …, <code>x</code><sub><code>j</code></sub>.</p>

<h1>Cerința</h1>

<p>Dat șirul <code>x</code><sub><code>1</code></sub>, <code>x</code><sub><code>2</code></sub>, …, <code>x</code><sub><code>N</code></sub> și un număr natural <code>T</code>, să se determine numărul secvențelor de forma <code>x</code><sub><code>i</code></sub>, <code>x</code><sub><code>i+1</code></sub>, …, <code>x</code><sub><code>j</code></sub> cu proprietatea că <code>B(i,j) = T</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>secvb.in</code> conține pe prima linie numerele naturale <code>N</code> și <code>T</code>, separate printr-un spațiu. Pe linia a doua se găsesc <code>N</code> numere naturale <code>x</code><sub><code>1</code></sub>, <code>x</code><sub><code>2</code></sub>, …, <code>x</code><sub><code>N</code></sub> separate prin câte un spațiu. </p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>secvb.out</code> va conține un singur număr natural reprezentând numărul de secvențe din șir care au numărul biților de <code>1</code> egal cu <code>T</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 &lt;= N &lt;= 50.000</code></li>
	<li><code>0 ≤ T ≤ 100.000</code></li>
	<li>valorile din şir sunt numere naturale cuprinse între <code>1</code> și <code>1000</code>.</li>
</ul>

<h1>Exemplul 1:</h1>

<p><code>secvb.in</code></p>

<pre contenteditable="true" editable="true">7 6
8 3 7 14 10 63 1</pre>

<p><code>secvb.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h3>Explicație</h3>

<p>Sunt trei secvențe având în total <code>6</code> biți de <code>1</code>:<br>
<code>8 3 7</code><br>
<code>7 14</code><br>
<code>63</code></p>

<h1>Exemplul 2:</h1>

<p><code>secvb.in</code></p>

<pre contenteditable="true" editable="true">4 1
3 5 7 6</pre>

<p><code>secvb.out</code></p>

<pre contenteditable="true" editable="true">0</pre>

<h3>Explicație</h3>

<p>Nu există nicio secvență pentru care suma biților de <code>1</code> să fie egală cu <code>1</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("secvb.in");
ofstream cout("secvb.out");

int n, T, a[50001], B[50001];

int b(int n){
    int cnt = 0;
    while(n)
        cnt += n % 2, n /= 2;
    return cnt;
}

int main(){
    cin >> n >> T;
    for(int i = 1; i <= n; ++i) cin >> a[i];
    for(int i = 1; i <= n; ++i) B[i] = b(a[i]);
    int st = 1, sum = 0, cnt = 0;
    for(int i = 1; i <= n; ++i){
        sum += B[i];
        if(sum >= T){;
            while(sum > T)
                sum -= B[st], st++;
            if(sum == T)
                cnt++;
        }
    }
    cout << cnt;
    return 0;
}</pre>
