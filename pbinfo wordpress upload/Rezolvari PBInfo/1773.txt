<h1>Cerința</h1>

<p>Lui Ionci ii place foarte mult matematica si informatica, asa ca s-a gandit sa creeze o operatie. Aceasta a numit-o <code>"Happy"</code>, notata cu semnul <code>☺</code>. Operatia se aplica doar numerelor naturale si dau ca rezultat tot un numar natural, conform exemplelor de mai jos:</p>

<ul>
	<li><code>2010 ☺ 2005 = 5</code></li>
	<li><code>78 ☺ 54 = 6</code></li>
	<li><code>999 ☺ 543 = 3</code></li>
	<li><code>4 ☺ 9 = 1</code></li>
	<li><code>5 ☺ 6 = 1</code></li>
	<li><code>32 ☺ 24 = 8</code></li>
	<li><code>10 ☺ 2 = 2</code></li>
</ul>

<p>Profesorul de matematica, Vasy, i-a promis nota 10 pe invenție dacă pentru mai multe perechi de numere naturale veți determina cel mai mic număr rezultat cu număr par de divizori al operației <code>Happy</code> aplicată perechilor date și cel mai mare număr rezultat al operației <code>Happy</code> cu număr impar de divizori.</p>

<h1>Date de intrare</h1>

<p>Programul citește un număr natural <code>N</code> și <code>N</code> perechi de numere naturale <code>a b</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa cel mai mic și cel mai mare rezultat obținut prin operația de mai sus, cu număr par, respectiv impar de divizori, separate printr-un spațiu. Dacă nu exista rezultate care au numărul de divizori par sau numărul de divizori impar, se va afișa mesajul <code>NU EXISTA</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N ≤ 20</code></li>
	<li>cele <code>2 * N</code> numere citite vor fi nenule și mai mici decât <code>1.000.000</code>.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595359411&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1773%2Fhappy&amp;flash=0&amp;wgl=1&amp;dt=1595359410851&amp;bpp=20&amp;bdt=293&amp;idt=245&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2996032226898&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595359411&amp;ga_hid=169231476&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1372&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=919193988280671&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1956%2Fsiruri2&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=X0ktFJErnA&amp;p=https%3A//www.pbinfo.ro&amp;dtd=259" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CL_v9veI3-oCFWPjuwgd6P4MCQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">2
87 87
1 1</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">87 1</pre>

<h1>Explicație</h1>

<ul>
	<li>rezultatul operației aplicate numerelor <code>87</code> și <code>87</code> este <code>87</code>, iar numerelor <code>1</code> și <code>1</code> este <code>1</code>. Numărul <code>87</code> are <code>4</code> divizori iar numărul <code>1</code> are <code>1</code> divizor. Deci <code>87</code> este cel mai mare număr cu număr de divizori par și <code>1</code> cel mai mic număr cu numărul de divizori impar.</li>
</ul>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;
int cmmdc(int a,int b)
{
    int r,d;
    while(b!=0)
    {
        r=a%b;
        a=b;
        b=r;
    }
    d=a;
    return d;
}
int nrdiv(int n)
{
    int cnt=0;
    for(int i=1;i*i<=n;i++)
    {
        if(n%i==0) cnt += 2;
        if(i*i==n) cnt--;
    }
    return cnt;
}
int main()
{
   int n,a,b,minim=1000000,maxim=-1;
   cin>>n;
   for(int i=1;i<=n;++i)
   {
       cin>>a>>b;
       int d=cmmdc(a,b);
       if(nrdiv(d)%2==0)
       {
           if(d<minim) minim=d;
       }
       else
        if(nrdiv(d)%2==1)
       {
           if(d>maxim) maxim=d;
       }

   }
   if(maxim==-1 || minim==1000000) cout<<"NU EXISTA";
   else
   cout<<minim << " "<<maxim;
    return 0;
}</pre>
