<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("pseudobil.in");
ofstream cout("pseudobil.out");
int nr[3001][3001] , p, n, k, d, m;
short a[3001][3001];
int main()
{
    cin >> p >> n >> k >> d;
    if (p == 1) cout << d*d/2-1-2*(d/2-1);
    else
    {
        int x, y;
        for (int i =1; i<=k; i++)
        {
            cin >> x >> y;
            a[x+y-1][n-x+y] = 1;
        }
        for(int i = 1; i <= n*2-1; ++i)
            for(int j = 1; j <= n*2-1; ++j)
                nr[i][j] = nr[i-1][j] + nr[i][j-1] - nr[i-1][j-1] + a[i][j];
        cin >> m;
        long long sol;
        for (int i= 1; i <= m; ++i)
        {
            cin >> x >> y;
            sol = nr[x+y+d-1][n-x+y] - nr[x+y-2][n-x+y] - nr[x+y+d-1][n-x+y-d-1] + nr[x+y-2][n-x+y-d-1];
            cout << sol << '\n';
        }
    }
    return 0;
}</pre>
