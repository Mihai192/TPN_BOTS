<h1>Cerința</h1>

<p>Se citește un număr natural <code>n</code> cu cel mult <code>16</code> cifre. Fie <code>q</code> numărul de cifre ale numărului <code>n</code>. Prin eliminarea unei singure cifre din scrierea numărului <code>n</code> se obține un șir de <code>q</code> numere. Să se afișeze în ordine crescătoare, numerele nenule din acest șir care sunt prime cu numărul <code>n</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>numere16.in</code> conține pe prima linie numărul <code>n</code>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>numere16.out</code> va conține pe prima linie separate printr-un spațiu, numerele care respectă proprietatea din cerință.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>2 ≤ q ≤ 16</code></li>
	<li>dacă nu avem niciun număr care respectă cerința afișăm mesajul <code>NU EXISTA</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361828&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1900%2Fnumere16&amp;flash=0&amp;wgl=1&amp;dt=1595361828061&amp;bpp=16&amp;bdt=238&amp;idt=173&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5866531881687&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361828&amp;ga_hid=1187761985&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1084&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3500578212564889&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2126%2Fnrmaxinterv&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=jQt83PtA3i&amp;p=https%3A//www.pbinfo.ro&amp;dtd=178" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CIfHvfiR3-oCFV6Bsgodz2oL7w"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>numere16.in</code></p>

<pre contenteditable="true" editable="true">342477</pre>

<p><code>numere16.out</code></p>

<pre contenteditable="true" editable="true">32477 34247 34247 34277 34477</pre>

<h3>Explicație</h3>

<p>Numerele 32477 34247 34247 34277 34477  sunt afișate în ordine crescătoare și sunt prime cu numărul 342477</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("numere16.in");
ofstream cout("numere16.out");

int prim(long long int a , long long int b)
{
    while(b)
    {
        long long int r=a%b;
        a=b;
        b=r;
    }
    if(a==1)
    return 1;
    else
    return 0;
}

int main()
{
    long long int n;
    cin >> n;
    long long int a[17];
    long long int cn=n;
    int cnt=0;
    while(cn)
    {
        cnt++;
        cn/=10;
    }
    long long int p = 10;
    a[0]=n/10;
    for(int i =  1 ; i <= cnt ; ++i)
    {
        cn=n;
        cn=cn/(p*10);
        a[i]=cn*p+n%p;
        p*=10;
    }
    sort(a , a+cnt);
    int ok=0;
    for(int i = 0 ; i < cnt ; ++i)
    {
        if(prim(n , a[i]))
        {
            ok=1;
            if(a[i]!=0)
            cout << a[i] << ' ';
        }
    }
    if(ok==0)
        cout << "NU EXISTA";
    
    cin.close();
    cout.close();
    
    return 0;
}</pre>
