<p>În jocul League of Legends participă două echipe a câte <code>5</code> jucători notați <code>a,b,c,d,e</code>, respectiv <code>A,B,C,D,E</code>. Fiecare jucător are o valoare, inițial <code>300</code>, și un câștig, inițial <code>0</code>. În joc au loc lupte între perechi de jucători din echipe diferite, în urma fiecărei lupte fiind un învingător și un învins. </p>

<p>După luptă, câștigul învingătorului crește cu valoarea învinsului, valoarea sa crește cu <code>50</code> de bani, fără să depășească <code>1000</code> de bani, iar valoarea învinsului scade cu <code>50</code> de bani, neputând deveni mai mică decât <code>0</code>.</p>

<h1>Cerința</h1>

<p>Dându-se lista luptelor, să se determine câți bani va avea fiecare jucător la finalul meciului.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, reprezentând numărul de lupte, iar pe linii separate vor fi perechi <code>x y</code>, însemnând <code>x</code> îl învinge pe <code>y</code>.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran, pe linii separate, câștigul fiecărui jucător la finalul meciului. Afișarea va fi de forma: <code>L x</code> (<code>x</code> este câștigul jucătorului <code>L</code>).</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 200.000</code></li>
	<li>jucătorii vor fi afișați în ordine alfabetică – vezi exemplul</li>
	<li>primii jucători afișați vor fi cei din echipa <code>A,B,C,D,E</code>  – vezi exemplul</li>
	<li>Succes în noul sezon!</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595360925&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2857%2Flol&amp;flash=0&amp;wgl=1&amp;dt=1595360925682&amp;bpp=4&amp;bdt=222&amp;idt=120&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=678727287719&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360926&amp;ga_hid=868083883&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1164&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066624%2C21066717&amp;oid=3&amp;pvsid=3682331523584730&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2087%2Fkminsum&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=wDX8XtlejV&amp;p=https%3A//www.pbinfo.ro&amp;dtd=128" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CLLAl8qO3-oCFQKKsgodPBcN-Q"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">6
A b
A c
A a
d A
e C
e C</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">A 900
B 0
C 0
D 0
E 0
a 0
b 0
c 0
d 450
e 550</pre>

<h3>Explicație</h3>

<p><code>A</code> învinge 3 inamici, <code>d</code> îl învinge pe <code>A</code>, câștigând <code>450</code> de bani, iar <code>e</code> îl învinge pe <code>C</code> de <code>2</code> ori, prima oară câștigând <code>300</code> apoi <code>250</code> de bani.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

struct perechi
{
    char ch;
    int val , bani;
}a[11];

bool litM(char c)
{
    return c >= 'A' &amp;&amp; c <= 'E';
}

int main()
{
    a[1].ch = 'A' , a[1].val = 300 , a[1].bani = 0;
    a[2].ch = 'B' , a[2].val = 300 , a[2].bani = 0;
    a[3].ch = 'C' , a[3].val = 300 , a[3].bani = 0;
    a[4].ch = 'D' , a[4].val = 300 , a[4].bani = 0;
    a[5].ch = 'E' , a[5].val = 300 , a[5].bani = 0;
    a[6].ch = 'a' , a[6].val = 300 , a[6].bani = 0;
    a[7].ch = 'b' , a[7].val = 300 , a[7].bani = 0;
    a[8].ch = 'c' , a[8].val = 300 , a[8].bani = 0;
    a[9].ch = 'd' , a[9].val = 300 , a[9].bani = 0;
    a[10].ch = 'e' , a[10].val = 300 , a[10].bani = 0;
    int n;
    cin >> n;
    char s , t;
    for(int i = 1 ; i <= n ; ++i)
    {
        cin >> s >> t;
        int a1 , b;
        if(litM(s))
            a1 = s - 64;
        else
            a1 = s - 91;
        if(litM(t))
            b = t - 64;
        else
            b = t - 91;
        a[a1].bani += a[b].val , a[a1].val += 50;
        a[b].val -= 50;
        if(a[a1].val > 1000)
            a[a1].val = 1000;
        if(a[b].val < 0)
            a[b].val = 0;
    }
    for(int i = 1 ; i <= 10 ; ++i)
    {
        cout << a[i].ch << ' ' << a[i].bani << endl;
    }
    return 0;
}</pre>
