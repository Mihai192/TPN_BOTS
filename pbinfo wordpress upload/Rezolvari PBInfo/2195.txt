<p>Orice număr natural nenul se poate scrie în <em>mod unic</em> ca o sumă de puterile ale lui <code>2</code> care nu se repetă. Exemplu: <code>77</code> = <code>2</code><sup><code>0</code></sup> + <code>2</code><sup><code>2</code></sup> + <code>2</code><sup><code>3</code></sup> + <code>2</code><sup><code>6</code></sup>.<br>
Primele <code>16</code> puteri ale lui <code>2</code> se reprezintă prin litere ale alfabetului englez, după cum urmează: <code>a = 1</code>, <code>b = 2</code>, <code>c = 4</code>, <code>d = 8</code>, <code>e = 16</code>, <code>f = 32</code>, <code>g = 64</code>, <code>h = 128</code>, <code>i = 256</code>, <code>j = 512</code>, <code>k = 1024</code>, <code>l = 2048</code>, <code>m = 4096</code>, <code>n = 8192</code>, <code>o = 16384</code>, <code>p = 32768</code>. <br>
Astfel, orice număr din intervalul <code>[1, 2</code><sup><code>16</code></sup>] poate fi codificate ca o combinație unică a acestor litere, aranjate în ordine alfabetică, în care orice literă apare cel mult o singură dată, astfel încât suma valorilor acestor litere să fie egală cu valoarea numărului (<code>77 = acdg</code>).</p>

<h1>Cerința</h1>

<p>Să se scrie un program <code>C/C++</code> care citește două șiruri de caractere ce reprezintă două numere naturale codificate după regula de mai sus, program care afișează un șir de caractere ce reprezintă suma celor două numere.  </p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>sumpow2.in</code> conține pe prima linie două șiruri de caractere despărțite printr-un singur spațiu, șiruri de caractere ce reprezintă codificarea celor două numere.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>sumpow2.out</code> va conține pe prima linie un șir de caractere ce reprezintă codificarea numărului calculat ca fiind suma celor două numere.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>cele două numerele date precum și suma lor nu va depăși valoarea <code>2</code><sup><code>16</code></sup>.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356880&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2195%2Fsumpow2&amp;flash=0&amp;wgl=1&amp;dt=1595356880374&amp;bpp=5&amp;bdt=244&amp;idt=167&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4999873785835&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356880&amp;ga_hid=1559627421&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1238&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3720956000818555&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2416%2Fseti&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=vj8x4ceXfq&amp;p=https%3A//www.pbinfo.ro&amp;dtd=172" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPyposH_3uoCFRMF5godWZoJyA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>sumpow2.in</code></p>

<pre contenteditable="true" editable="true">acdg ac</pre>

<p><code>sumpow2.out</code></p>

<pre contenteditable="true" editable="true">beg</pre>

<h3>Important!</h3>

<p>Programul scris trebuie să calculeze șirul de ieșire fără a transforma șirurile inițiale în numere!</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("sumpow2.in");
ofstream cout("sumpow2.out");

int f[27];

int main()
{
    char s1[200] , s2[200];
    cin >> s1 >> s2;
    int i = 0;
    while(s1[i]!='\0')
    {
        f[(int)s1[i]-96]++;
        i++;
    }
    i=0;
    while(s2[i]!='\0')
    {
        f[(int)s2[i]-96]++;
        i++;
    }
    for(int i = 0 ; i < 25 ; ++i)
    {
        while(f[i]-2 >= 0)
            f[i]-=2 , f[i+1]++;
        if(f[i]==1)
            cout << (char)(i + 96);
    }
    for(int i = 0 ; i < f[25] ; ++i)
        cout << 'z';
    return 0;
}</pre>
