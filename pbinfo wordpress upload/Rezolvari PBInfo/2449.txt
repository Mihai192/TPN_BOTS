<p>Vom numi <strong>secvenţă PM</strong> o succesiune formată din plus şi minus, care <strong>NU</strong> conţine două semne minus alăturate.<br>
De exemplu, există <code>5</code> <strong>secvenţe PM</strong> de lungime <code>3</code> : + + + , + + – , + – + , – + + , – + -.</p>

<h1>Cerința</h1>

<p>Să se determine numărul de <strong>secvenţe PM</strong> care conţin <code>x</code> semne plus şi <code>y</code> semne minus.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>pm.in</code> conţine pe prima linie două numere naturale separate prin spaţiu <code>x</code> , <code>y</code>, cu semnificaţia din enunţ.</p>

<h1>Date de ieșire</h1>

<p>Fişierul de ieşire <code>pm.out</code> va conţine o singură linie pe care va fi scris un singur număr natural, reprezentând numărul de <strong>secvenţe PM</strong> care conţin <code>x</code> semne plus şi <code>y</code> semne minus.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>0 ≤ y ≤ x ≤ 250</code></li>
	<li>Rezultatul va avea maxim <code>100</code> cifre.</li>
	<li>Pentru <code>50%</code> din testele de evaluare <strong>x &lt; 32</strong>.</li>
	<li><code>10%</code> din punctaj se va acorda pe exemple.</li>
</ul>

<h1>Exemplu 1:</h1>

<p><code>pm.in</code></p>

<pre contenteditable="true" editable="true">2 1</pre>

<p><code>pm.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h1>Exemplu 2:</h1>

<p><code>pm.in</code></p>

<pre contenteditable="true" editable="true">4 2</pre>

<p><code>pm.out</code></p>

<pre contenteditable="true" editable="true">10</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("pm.in");
ofstream cout("pm.out");

struct bigint
{
    int n , c[101];
}a[256] , b[256];

bigint aduna(bigint a , bigint b)
{
    bigint s = {0 , {0}};
    s.n = max(a.n , b.n);
    int t = 0;
    for(int i = 1 ; i <= s.n ; i++)
    {
        int cc = a.c[i] + b.c[i] + t;
        s.c[i] = cc % 10;
        t = cc / 10;
    }
    if(t > 0)
    {
        s.n++;
        s.c[s.n] = t;
    }
    return s;
}

void afisare(bigint a)
{
    for(int i = a.n ; i >= 1 ; i--)
        cout << a.c[i];
}

int main()
{
    int x , y;
    cin >> x >> y;
    for(int i = 1 ; i <= x + 1 ; i++)
    {
        for(int j = 0 ; j <= i ; j++)
            if(j == 0 || i == j) b[j] = {1 , {0 , 1}};
            else b[j] = aduna(a[j - 1] , a[j]);
        for(int j = 0 ; j <= i ; j++)
            a[j] = b[j];
    }
    afisare(a[y]);
}</pre>
