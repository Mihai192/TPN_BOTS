<h1>Cerința</h1>

<p>Războiul intergalactic a început, iar extratereștrii au invadat deja planeta noastră.  Misiunea ta este să salvezi toți locuitorii planetei cât mai repede cu putință!</p>

<p>Într-un hambar vechi, ai găsit un robot proiectat special pentru amplasarea de bombe nucleare și totodată o hartă a planetei sub formă de dreptunghi împărțită în <code>N x M</code> zone pătratice dispuse pe <code>N</code> linii și <code>M</code> coloane, de dimensiune <code>1</code>. Pe hartă sunt reprezentate și pozițiile extratereștrilor <code>(x</code><sub><code>i</code></sub><code>,y</code><sub><code>i</code></sub><code>)</code>, unde <code>x</code><sub><code>i</code></sub> reprezintă indicele de linie, iar <code>y</code><sub><code>i</code></sub> reprezintă indicele de coloană al extraterestrului <code>i</code>. De asemenea, robotul poate amplasa bombe în orice poziție de pe hartă, iar la declanșarea lor, acestea distrug orice extraterestru de pe aceeași linie sau de pe aceeași coloană cu ele.</p>

<p>Din păcate, robotul nu este echipat decât cu o singură bombă. Datoria ta este să-i transmiți robotului coordonatele <code>x y</code> unde să amplaseze bomba, astfel încât toți extratereștrii să fie distruși. Poți să salvezi planeta? Timpul se scurge! Tic, tac, tic, tac…</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>bomba.in</code> conține pe prima linie două numere naturale <code>N</code> și <code>M</code>, reprezentând numărul de linii, respectiv numărul de coloane ale hărții. Pe următoarele <code>N</code> linii se găsesc câte <code>M</code> caractere din mulțimea <code>{0,1}</code>; <code>0</code> reprezintă o poziție liberă, în timp ce <code>1</code> reprezintă o poziție ocupată de un extraterestru.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>bomba.out</code> va conține pe prima linie două numere naturale <code>x</code> și <code>y</code>, reprezentând indicele liniei și al coloanei unde trebuie amplasată bomba astfel încât toți extratereștrii să fie distruși.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N, M ≤ 1000</code></li>
	<li>Numărul de extratereștri nu depășește <code>2000</code>.</li>
	<li>Dacă există mai multe celule în care poate fi amplasată bomba, se alege cea cu indicele de linie <code>x</code> minim. Dacă există mai multe celule în care poate fi amplasată bomba cu indicele de linie <code>x</code> minim, se alege cea cu indicele de coloană <code>y</code> minim.</li>
	<li>Liniile și coloanele hărții sunt numerotate începând cu <code>1</code>.</li>
	<li>Se garantează că pentru datele de test există întotdeauna soluție.</li>
</ul>

<h1>Exemplul 1</h1>

<p><code>bomba.in</code></p>

<pre contenteditable="true" editable="true">4 4
0010
0000
0001
0001</pre>

<p><code>bomba.out</code></p>

<pre contenteditable="true" editable="true">1 4</pre>

<h3>Explicație</h3>

<p>Bomba trebuie să fie amplasată pe poziția <code>(1,4)</code> astfel încât toți extratereștrii să fie distruși.</p>

<h1>Exemplul 1</h1>

<p><code>bomba.in</code></p>

<pre contenteditable="true" editable="true">3 3
010
001
000</pre>

<p><code>bomba.out</code></p>

<pre contenteditable="true" editable="true">1 3</pre>

<h3>Explicație</h3>

<p>Bomba poate să fie amplasată atât pe poziția <code>(2,2)</code>, cât și pe poziția <code>(1,3)</code>, astfel se afișează cea de-a doua poziție deoarece are indicele de linie <code>X</code> minim.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("bomba.in");
ofstream cout("bomba.out");

int a[1001][1001] , c[1001] , l[1001];

int main()
{
    int n , m , cnt = 0;
    char ch;
    cin >> n >> m;
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j)
        {
            cin >> ch;
            if(ch == '0')
                a[i][j]=0;
            else
                a[i][j]=1 , cnt++;
        }
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j)
            l[i]+=a[i][j] , c[j]+=a[i][j];
    int x = -1 , y;
    for(int i = 1 ; i <= n &amp;&amp; x == -1; ++i)
    {
        for(int j = 1 ; j <= m &amp;&amp; x == -1 ; ++j)
        {
            if(c[j] + l[i] - a[i][j] == cnt)
                x = i , y = j;
        }
    }
    cout << x << ' ' << y;
}</pre>
