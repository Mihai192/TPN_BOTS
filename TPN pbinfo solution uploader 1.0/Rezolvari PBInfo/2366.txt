<h1>Cerința</h1>

<p>Se dă un șir de <code>n</code> numere naturale nenule <code>v = {v</code><sub><code>1</code></sub> <code>, v</code><sub><code>2</code></sub> <code>, v</code><sub><code>3</code></sub> <code> ... v</code><sub><code>n</code></sub> <code>}</code>.</p>

<p>Se formează șirul <code>d = {d</code><sub><code>1</code></sub> <code>, d</code><sub><code>2</code></sub> <code>, d</code><sub><code>3</code></sub> <code> ... d</code><sub><code>n</code></sub>  <code>}</code> unde <code>d</code><sub><code>i</code></sub> = numărul divizorilor lui <code>v</code><sub><code>i</code></sub> . </p>

<p>Notăm <code>max</code> = cea mai mare valoare din șirul <code>d</code>.</p>

<p>Să se afișeze în ordine crescătoare toate numerele din șirul dat <code>v</code> care au exact <code>max</code> divizori. Dacă un număr <code>v</code><sub><code>i</code></sub> apare de mai multe ori în șirul <code>v</code> și numărul divizorilor lui <code>v</code><sub><code>i</code></sub> este egal cu <code>max</code>, atunci <code>v</code><sub><code>i</code></sub> se va afișa o singură dată.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>masterpiece001.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale nenule separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>masterpiece001.out</code> va conține numerele din șirul dat <code>v</code> care au exact <code>max</code> divizori, în ordine crescătoare, separate prin spații.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1.000.000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi mai mici sau egale cu <code>400.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595360385&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2366%2Fmasterpiece001&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595360384966&amp;bpp=4&amp;bdt=193&amp;idt=177&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2950773250877&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360385&amp;ga_hid=1729903611&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1140&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066393&amp;oid=3&amp;pvsid=3250869593692085&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2341%2Flabirint4&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=oaKjPBWbwE&amp;p=https%3A//www.pbinfo.ro&amp;dtd=184" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPSEsMiM3-oCFS3iuwgdch0FkQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>masterpiece001.in</code></p>

<pre contenteditable="true" editable="true">10
12 3 12 4 12 18 31 101 31 31</pre>

<p><code>masterpiece001.out</code></p>

<pre contenteditable="true" editable="true">12 18</pre>

<h3>Explicație</h3>

<p><code>12</code> si <code>18</code> au <code>6</code> divizori. Celelalte numere din șir au mai puțin de <code>6</code> divizori. Se observă că numărul <code>12</code> apare de două ori, cu toate acestea, se va afișa o singură dată.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <bitset>
using namespace std;
ifstream cin("masterpiece001.in");
ofstream cout("masterpiece001.out");
bitset<400001> a;
int nrdiv(int n)
{
    int d = 2 , cnt = 1;
    int d2=0;
    while(n%2==0) { d2++; n=n/2;}
    cnt=d2+1;
    d=3;
    while(n > 1)
    {
        int p = 0;
        while(n % d == 0){n/=d;p++;}
        cnt = cnt * (p+1);
        d=d+2;
        if(d * d > n)d = n;
    }
    return cnt;
}
int main()
{
    int n , x , ndmax=0,max = 0 ,min=400000,s=400000,d=0;
    cin >> n;
    for(int i = 0 ; i < n ; ++i)
    {
        cin >> x;
        a[x]=1;
        if(x<s) s=x;
        if(x>d) d=x;
    }
    for(int y=s;y<=d;y++)
        if(a[y])
    {
        int nd=nrdiv(y);
        if(nd>ndmax)
        {
            ndmax = nd;
            max=min=y;
        }
        else if(nd==ndmax)
                  max=y;
    }
    for(int i=min;i<=max;i++)
        if(a[i] &amp;&amp; nrdiv(i)==ndmax)
            cout<<i<<" ";
    return 0;
}</pre>
