<h1>Cerința</h1>

<p>Cu ocazia Olimpiadei Naţionale de Informatică, toate drumurile care duceau la Roma, duc acum la Braşov. Drumarii, sub atenta îndrumare a lui Dorel, s-au întrecut pe sine şi s-au hotărât să monteze borne “kilometrice” din 100 în 100 metri. Peste noapte însă, din motive paranormale, unele borne au dispărut. Cunoscând numerele de pe bornele rămase pe fiecare drum spre Braşov, să se determine, pentru fiecare drum, un set de borne dintre cele care lipsesc astfel încât suma numerelor de pe borne să fie divizibilă cu <code>2017</code>. Rezolvă problema şi vei ajunge cu bine la Braşov!</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>roadtooni.in</code> conține pe prima linie numărul <code>n</code>, iar pe următoarele <code>n</code> linii primul număr de pe linie reprezintă numărul de borne rămase pe drumul respectiv, iar următoarele numere reprezintă numerele de pe bornele rămase.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>roadtooni.out</code> va conține pe linia <code>i</code> numărul de borne din set, urmat de setul de numere de pe bornele lipsă ale drumului <code>i</code>, care au suma divizibilă cu <code>2017</code>, pentru orice <code>i</code> de la <code>1</code> la <code>n</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 20</code></li>
	<li>numerele de pe bornele montate sunt naturale nenule şi mai mici decât <code>2017</code></li>
	<li>pe fiecare drum au rămas cel mult <code>500</code> de borne, inclusiv cea cu numărul maxim de pe drumul respectiv</li>
	<li>borna cu număr maxim de pe fiecare drum este cel puţin <code>1600</code></li>
	<li>punctajul unui test se distribuie uniform pentru fiecare drum din testul respectiv</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361156&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2027%2Froadtooni&amp;flash=0&amp;wgl=1&amp;dt=1595361156687&amp;bpp=5&amp;bdt=239&amp;idt=133&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=1285907438263&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361157&amp;ga_hid=1555736212&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1220&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1130604082586729&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2342%2Fcadouri2&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=RVmJVG4LLK&amp;p=https%3A//www.pbinfo.ro&amp;dtd=142" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPrDq7iP3-oCFfMA5godP2UHwQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>roadtooni.in</code></p>

<pre contenteditable="true" editable="true">4
3 1 20 1780
5 44 78 235 1899
6 2 66 789 431 23 1654
2 1989 478</pre>

<p><code>roadtooni.out</code></p>

<pre contenteditable="true" editable="true">4 5 233 18 1761
6 1 2 3 4 500 1507
4 800 1000 200 17
4 1900 100 8 9</pre>

<h3>Explicație</h3>

<p>Avem <code>4</code> drumuri. Pe primul drum au rămas <code>3</code> borne, <code>1</code>, <code>20</code> şi <code>1780</code>. Dintre bornele care lipsesc putem alege <code>4</code> borne, şi anume <code>5</code>, <code>233</code>, <code>18</code>, <code>1761</code>, a căror sumă este <code>2017</code>, deci divizibilă cu <code>2017</code>. La fel pentru celelalte drumuri.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("roadtooni.in");
ofstream cout("roadtooni.out");
int n , p , r , a[50][2020];
int main()
{
    cin >> n ;
    for (int i = 1 ; i <= n ; i++)
    {
        cin >> p ;
        for (int j = 1 ; j <= p ; j++)
        {
            cin >> r ;
            a[i][r]=1 ;
        }
        for (int j = 1 ; j <= 1000 ; j++)
           if((a[i][j]==0) &amp;&amp; (a[i][2017-j]==0))
             {
                 cout << 2 << " " << j << " " << 2017-j << endl ;
                 break ;
             }
    }return 0;
}</pre>
