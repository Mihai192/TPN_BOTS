<p>Pentru transmiterea unui mesaj format exclusiv din litere mici ale alfabetului englez, se utilizează un aparat electronic care are anumite limitări tehnice. Astfel, el poate transmite mesaje formate doar din litere vecine din alfabet sau formate din aceeași literă. De exemplu mesajul: <code>defffedcbab</code> poate fi transmis, iar mesajul <code>accded</code> nu poate fi transmis deoarece literele <code>a</code> și <code>c</code> nu sunt vecine în alfabetul englez.</p>

<p>Din acest motiv mesajul ce urmează să fie transmis trebuie codificat pentru a fi compatibil cu aparatul.</p>

<p>Pentru codificare, mesajul este prelucrat în etape până satisface limitările aparatului. O etapă de prelucrare presupune inserarea între fiecare două litere vecine ale mesajului a literei mijlocii. Litera mijlocie este acea litera situată la jumătatea secvenței din alfabet ce are capete literele vecine. Dacă nu există se ia în considerare litera mai mică. </p>

<table class="table table-bordered">
		<tbody><tr>
			<td> Literele vecine </td>
			<td> Litera mijlocie </td>
			<td> Explicații </td>
		</tr>
		<tr>
			<td> <code>dd</code> </td>
			<td> <code>d</code> </td>
			<td> </td>
		</tr>
		<tr>
			<td> <code>ae</code> </td>
			<td> <code>c</code> </td>
			<td> Secvența <code>abcde</code> are litera <code>c</code> la mijloc </td>
		</tr>
		<tr>
			<td> <code>af</code> </td>
			<td> <code>c</code> </td>
			<td> Secvența <code>abcdef</code> are la mijloc literele <code>cd</code>, din care alegem <code>c</code> </td>
		</tr>
		<tr>
			<td> <code>ha</code> </td>
			<td> <code>d</code> </td>
			<td> Secvența este tratată la fel ca și <code>ah</code> deci <code>abcdefgh</code> </td>
		</tr>
</tbody></table>


<h1>Cerința</h1>

<p>Determinați numărul de etape de prelucrare necesare pentru codificarea mesajului și lungimea finală a mesajului.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>abba.in</code> conține pe prima linie un șir <code>s</code> de litere mici ale alfabetului englez.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>abba.out</code> va conţine o singură linie cu două numere naturale separate printr-un spațiu, care reprezintă numărul de etape de prelucrare și lungimea finală a mesajului.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>2 ≤</code> lungime șir <code>s ≤ 50000</code></li>
	<li>Mesajul va suferi cel puțin o etapă de prelucrare.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357093&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1562%2Fabba&amp;flash=0&amp;wgl=1&amp;dt=1595357093127&amp;bpp=3&amp;bdt=201&amp;idt=217&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2879604545973&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357093&amp;ga_hid=1811269541&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1501&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1754562637239665&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1580%2Fschimb&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=Uj9yQKJuwF&amp;p=https%3A//www.pbinfo.ro&amp;dtd=224" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CIbR3aaA3-oCFTRI5QodtG4E1w"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>abba.in</code></p>

<pre contenteditable="true" editable="true">oli</pre>

<p><code>abba.out</code></p>

<pre contenteditable="true" editable="true">2 9</pre>

<h3>Explicație</h3>

<p>În prima etapă între <code>ol</code> se introduce  <code>m</code> și între <code>li</code> se introduce <code>j</code>. Mesajul devine <code>omlji</code>.</p>

<p>În etapa a doua se inserează literele <code>n l k i</code> și se obține <code>onmllkjii</code> care  are  <code>9</code> litere.</p>

<p>Nu se continuă mai departe prelucrarea mesajului, el poate fi transmis de aparatul electronic fiindcă oricare două litere alăturate în mesaj sunt fie identice fie vecine în alfabet.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cmath>
#include <cstring>
using namespace std;

ifstream cin("abba.in");
ofstream cout("abba.out");

char s[50001];

int p2(int n)
{
    if(n == 1)
        return 2;
    else
        return 2 * p2(n-1);
}

int log2n(int n)
{
    int cnt = 0;
    while(n)
        n/=2 , cnt++;
    return cnt;
}

int main()
{
    cin >> s;
    int i = 1;
    int max = 0;
    while(s[i])
    {
        if(abs((int)s[i] - (int)s[i-1]) - 1 > max)
            max = abs((int)s[i] - (int)s[i-1]) - 1;
        i++;
    }
    cout << log2n(max) << ' ' << i + (i-1)*(p2(log2n(max))-1);
    return 0;
}</pre>
