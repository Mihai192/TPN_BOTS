<h1>Cerința</h1>

<p>Se dă o expresie cu necunoscutele <code>x y z</code> și coeficienți întregi. Să se reducă termenii asemenea și să se determine termenul din expresia rezultat cu coeficientul maxim.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură un șir de caractere reprezentând expresia.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran un șir de caractere cu următorul conținut: <code>coeficient necunoscută</code>, fără spații între ele.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>șirul citit va avea cel mult <code>255</code> caractere și poate conține litere <code>x y z</code>, cifre, semnele <code>+ -</code> și spații.</li>
	<li>coeficienții din expresie vor fi numere întregi. Se garantează că pe parcursul reducerii termenilor asemenea valoarea absolută a rezultatelor nu depășește <code>2.000.000.000</code></li>
	<li>se garantează că expresia dată este matematic corectă</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356928&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F858%2Fexpresie6&amp;flash=0&amp;wgl=1&amp;dt=1595356928411&amp;bpp=8&amp;bdt=222&amp;idt=130&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2885236859498&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356928&amp;ga_hid=935190615&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1066839682197196&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F859%2Frime&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=2Pbpe1ztLM&amp;p=https%3A//www.pbinfo.ro&amp;dtd=136" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COWnlNj_3uoCFelAkQUdxaEAsg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">2x+3y+x-15y-6x</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">-3x</pre>

<h1>Explicație</h1>

<p>După reducerea termenilor asemenea expresia devine <code>-3x-12y</code> coeficientul maxim este <code>-3</code>, pentru necunoscuta <code>x</code>;</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cstring>
using namespace std;

char s[256];
int f[300];

int numar(char ch)
{
    return ch >= '0' &amp;&amp; ch <= '9';
}

int main()
{
    cin.getline(s , 256);
    int i = 0;
    bool sgn = 1;
    int nr = 0;
    while(s[i]!='\0')
    {
        while(numar(s[i]))
        {
            nr=nr*10+(int)s[i]-'0';
            i++;
        }
        if(s[i]=='-')
            sgn = false;
        if(s[i]=='+')
            sgn = true;
        if(s[i]=='x' || s[i]=='y' || s[i]=='z')
            {
                if(nr == 0)
                {
                    if(sgn)
                        f[s[i]]++ , nr = 0;
                    else
                        f[s[i]]-- , nr = 0;
                }
                if(sgn)
                    f[s[i]]+=nr , nr = 0;
                else
                    f[s[i]]-=nr , nr = 0;
            }
        i++;
    }
    char rez;
    int max = -2000000001;
    for(char i = 'x' ; i <= 'z' ; ++i)
    {
        if(f[i]>max &amp;&amp; f[i]!=0)
            max=f[i] , rez = i;
    }
    cout << max << rez;
    return 0;
}</pre>
