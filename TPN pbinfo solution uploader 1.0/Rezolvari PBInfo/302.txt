<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere  naturale cu cel mult două cifre fiecare. Determinaţi cel mai mare număr prim de două cifre care nu apare printre numerele date.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>cautaprim.in</code> conţine pe prima linie numărul <code>n</code>; urmează cele <code>n</code> numere, dispuse pe mai multe linii şi separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Fişierul de ieşire <code>cautaprim.out</code> va conţine pe prima linie cel mai mare număr prim de două cifre care nu apare printre numerele date. Dacă printre numerele date se află toate numerele prime de două cifre, în fişier se va scrie valoarea <code>0</code>.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361219&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F302%2Fcautaprim&amp;flash=0&amp;wgl=1&amp;dt=1595361219740&amp;bpp=19&amp;bdt=217&amp;idt=148&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=848958404925&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361220&amp;ga_hid=2105796754&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1022&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3294193336755661&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2329%2Fprim007&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=TvXS3kIOEh&amp;p=https%3A//www.pbinfo.ro&amp;dtd=156" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJ_Rs9aP3-oCFWnGuwgdL4sKYQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>cautaprim.in</code></p>

<pre contenteditable="true" editable="true">8
3 19 3 65 3 97 14 3</pre>

<p><code>cautaprim.out</code></p>

<pre contenteditable="true" editable="true">89</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream fin("cautaprim.in");
ofstream fout("cautaprim.out");

int prim(int n)
{
    int cnt=1;
    int d=2;
    while(n>1)
    {
        int p=0;
        while(n%d==0)
        {
            n/=d;
            p++;
        }
        if(p>0)
        {
            cnt*=(p+1);    
        }
        d++;
        if(d*d>n)
        d=n;
    }
    if(cnt==2)
    return 1;
    else
    return 0;
}

int main()
{
    int n;
    fin >> n;
    int f[100]={0};
    int cnt=0;
    int tmp;
    for(int i = 0 ; i < n ; ++i)
    {
        fin >> tmp;
        f[tmp]++;
    }
    for(int i = 99 ; i > 0 ; --i)
    {
        if(f[i]==0 &amp;&amp; prim(i))
        {
        fout << i << ' ';
        cnt++;
        break;
        }
    }
    if(cnt==0)
    {
        fout << "NU EXISTA";    
    }
}</pre>
