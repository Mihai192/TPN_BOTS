<h1>Cerința</h1>

<p>Fișierul de intrare conține cel mult <code>1.000.000</code> de numere întregi. Se cere să se afișeze în fișierul de ieșire cel mai mic număr din intervalul <code>[-100,100]</code> care nu apare în fișierul de intrare.</p>

<p>Dacă nu există un astfel de număr se va afișa mesajul <code>nu exista</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>nrlipsa2.in</code> conține cel mult <code>1.000.000</code> de numere întregi, separate prin câte un spațiu, dispuse pe mai multe linii.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>nrlipsa2.out</code> va conține pe prima linie valoarea cerută, sau mesajul <code>nu exista</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>numerele din fișierul de intrare vor fi din intervalul <code>[-1.000.000, 1.000.000]</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361328&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1744%2Fnrlipsa2&amp;flash=0&amp;wgl=1&amp;dt=1595361328129&amp;bpp=5&amp;bdt=222&amp;idt=167&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=1494371134412&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361328&amp;ga_hid=1633694750&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1032&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066623%2C44717728&amp;oid=3&amp;pvsid=2050990328945559&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F276%2Fpareimpare&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=pZT5AWllKx&amp;p=https%3A//www.pbinfo.ro&amp;dtd=172" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJzFjYqQ3-oCFUnisgodBw0L-g"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>nrlipsa2.in</code></p>

<pre contenteditable="true" editable="true">80 -190 -149 165 -58 150 -8 -100 -99 65 </pre>

<p><code>nrlipsa2.out</code></p>

<pre contenteditable="true" editable="true">-98</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream fin("nrlipsa2.in");
ofstream fout("nrlipsa2.out");

int main()
{
    int f[150]={0} , v[150]={0};
    int x;
    int ok=0;
    while(fin >> x)
    {
        if(x<0 &amp;&amp; x>=-100)
            f[x*(-1)]++;
        else if(x<=100 &amp;&amp; x>=0)
            v[x]++;
    }
    for(int i = 100 ; i > 0 ; --i)
    {
        if(f[i]==0)
        {
            fout <<i*(-1);
            ok++;
            break;
        }
    }
    if(ok==0)
    {
        for(int i = 0 ; i <= 100 ; i++)
        {
            if(v[i]==0)
            {
                fout << i;
                ok++;
                break;
            }
        }
    }
    if(ok==0)
        fout << "nu exista";
    
    return 0;
}</pre>
