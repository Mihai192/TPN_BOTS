<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <vector>

using namespace std;

ifstream cin ("varf.in");
ofstream cout ("varf.out");

int a[12], n, rez[12], cnt;
vector< vector<int> > nextmin, nextmax;

void afis(int n)
{
    cnt ++;
    for (int i = 1; i <= n; ++ i)
        cout << rez[i] << ' ';
    cout << '\n';
}
void backt(int i, int ind, int varf)
{
    if (ind == 0)
    {
        for (int i = 1; i <= n; i ++)
        {
            rez[ind + 1] = a[i];
            backt(i, ind + 1, varf);
        }
    }
    else if (varf == 0)
    {
        if (ind != 1)
        {
            for (int j = i + 1; j <= n; j ++)
            {
                rez[ind + 1] = a[j];
                if (a[i] < a[j])backt(j, ind + 1, 0);
                else backt(j, ind + 1, 1);
            }
        }
        else
        {
            for (int j = 0; j < nextmax[i].size(); j ++)
            {
                rez[ind + 1] = a[nextmax[i][j]];
                backt(nextmax[i][j], ind + 1, varf);
            }
        }
    }
    else
    {
        afis(ind);
        for (int j = 0; j < nextmin[i].size(); j ++)
        {
            rez[ind + 1] = a[nextmin[i][j]];
            backt(nextmin[i][j], ind + 1, varf);
        }
    }
}
int main()
{
    cin >> n;
    for (int i = 1; i <= n; i ++)
        cin >> a[i];

    nextmin = nextmax = vector< vector<int> >(n + 1);

    for (int i = 1; i <= n; i ++)
        for (int j = i + 1; j <= n; j ++)
            if (a[i] < a[j])nextmax[i].push_back(j);
            else if (a[i] > a[j])nextmin[i].push_back(j);

    backt(1, 0, 0);
    if (cnt == 0)cout << '0';
    return 0;
}</pre>
