<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale. Să se afișeze acestea în ordinea crescătoare a numărului de divizori ai fiecăruia, la același număr de divizori crescător după cifra de control, la aceeași cifră de control crescător după prima cifră, iar dacă și prima cifră este aceeași atunci numerele se vor afișa în ordinea crescătoare a valorii lor.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>sort_div.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>sort_div.out</code> va conține pe prima linie cele <code>n</code> numere separate prin câte un spațiu, ordonate crescător pe baza criteriilor din enunț.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 10000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi distincte și mai mici decât <code>1.000.000</code></li>
	<li>cifra de control a unui număr se obţine efectuând suma cifrelor sale, apoi suma cifrelor acestei sume etc. până se obţine o sumă formată dintr-o singură cifră. De exemplu, cifra de control a numărului <code>645</code> este <code>6</code>. (<code>6+4+5=15, 1+5=6</code>)</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356788&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3481%2Fsort-div&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595356788162&amp;bpp=13&amp;bdt=252&amp;idt=177&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=1165546577625&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356788&amp;ga_hid=1678238725&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1088&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066392%2C21066623&amp;oid=3&amp;pvsid=2608700008478147&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3164%2Fqclasa&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=se83aYjcd7&amp;p=https%3A//www.pbinfo.ro&amp;dtd=186" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKLGp5X_3uoCFUjLsgodBcECbw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>sort_div.in</code></p>

<pre contenteditable="true" editable="true">5
6 8 3 10 5</pre>

<p><code>sort_div.out</code></p>

<pre contenteditable="true" editable="true">3 5 10 6 8</pre>

<h3>Explicație</h3>

<p><code>3</code> și <code>5</code> au ambele <code>2</code> divizori, deci se afișează în ordine crescătoare după cifra de control. La fel și <code>6</code>, <code>8</code> și <code>10</code> care au fiecare câte <code>4</code> divizori.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("sort_div.in");
ofstream cout("sort_div.out");

int n;
struct poz
{
    int val , nrdiv , control , primacif;
}a[10001];

int div(int n)
{
    int d = 2 , P = 1;
    while(n > 1)
    {
        int p = 0;
        while(n % d == 0) p++ , n /= d;
        if(p) P *= (p + 1);
        d++;
        if(d * d > n) d = n;
    }
    return P;
}

int Pcif(int n)
{
    while(n > 9) n /= 10;
    return n;
}

int comp(poz a , poz b)
{
    if(a.nrdiv < b.nrdiv) return 1;
    else if(a.nrdiv == b.nrdiv &amp;&amp; a.control < b.control) return 1;
    else if(a.nrdiv == b.nrdiv &amp;&amp; a.control == b.control &amp;&amp; a.primacif < b.primacif) return 1;
    else if(a.nrdiv == b.nrdiv &amp;&amp; a.control == b.control &amp;&amp; a.primacif == b.primacif &amp;&amp; a.val < b.val) return 1;
    else return 0;
}

int main()
{
    cin >> n;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> a[i].val;
        a[i].nrdiv = div(a[i].val);
        a[i].control = a[i].val % 9;
        if(a[i].control == 0) a[i].control = 9;
        a[i].primacif = Pcif(a[i].val);
    }
    sort(a + 1 , a + n + 1 , comp);
    for(int i = 1 ; i <= n ; i++)
        cout << a[i].val << " ";
}</pre>
