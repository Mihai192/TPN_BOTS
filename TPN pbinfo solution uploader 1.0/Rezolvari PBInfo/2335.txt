<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale. Fiecare număr dat se transformă în baza 2 şi se formează toate numerele de două cifre din scrierea acestuia binară, scriind cele două cifre în ordinea în care apar în scrierea binară. Toate aceste numere de două cifre binare se trec în baza 10 şi se face suma numerelor obţinute. Să se afle, pentru fiecare dintre cele <code>n</code> numere naturale date, această sumă. </p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>bibinar.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>bibinar.out</code> va conține pe prima linie cele <code>n</code> sume obţinute, separate prin spaţiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100.000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi mai mici decât <code>1.000.000.000</code> şi mai mari decât <code>1</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595362235&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2335%2Fbibinar&amp;flash=0&amp;wgl=1&amp;dt=1595362235496&amp;bpp=29&amp;bdt=237&amp;idt=142&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5741833126545&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595362236&amp;ga_hid=1346877836&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3554249296590426&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1300%2Fhex&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=LpYDJBtCkl&amp;p=https%3A//www.pbinfo.ro&amp;dtd=149" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COL13bqT3-oCFbfRuwgdSV8C9Q"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>bibinar.in</code></p>

<pre contenteditable="true" editable="true">2
5 85</pre>

<p><code>bibinar.out</code></p>

<pre contenteditable="true" editable="true">6 36</pre>

<h3>Explicație</h3>

<p>Avem <code>5=101</code><sub><code>(2)</code></sub>, iar numerele de două cifre binare care se pot forma sunt <code>10,11,01</code>. Transformate în baza 10 şi însumate, obţinem <code>2+3+1=6</code>.  Avem <code>85=1010101</code><sub><code>(2)</code></sub>, iar numerele de două cifre binare care se pot forma sunt <code>10,11,10,11,10,11,01,00,01,00,01,10,11,10,11,01,00,01,10,11,01</code>. Transformate în baza 10 şi însumate, obţinem <code>2+3+2+3+2+3+1+0+1+0+1+2+3+2+3+1+0+1+2+3+1=36</code>.  </p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("bibinar.in");
ofstream cout("bibinar.out");

int r[100000];

int main()
{
    int n;
    cin >> n;
    int x;
    for(int i = 0 ; i < n ; ++i)
    {
        cin >> x;
        int cnt1=0 , cnt0=0;
        int v[100];
        int p = 0;
        while(x)
        {
            v[p]=x%2;
            p++;
            x/=2;
        }
        for(int j = p-1 ; j >= 0 ; --j)
        {
            if(v[j]==1)
            {
                r[i]+=cnt1*3+cnt0;
                cnt1++;
            }
            else
            {
                r[i]+=cnt1*2;
                cnt0++;
            }
        }
    }
    for(int i = 0 ; i < n ; ++i)
        cout << r[i] << ' ';
    return 0;    
}</pre>
