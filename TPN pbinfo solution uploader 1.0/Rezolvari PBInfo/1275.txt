<h1>Cerința</h1>

<p>Jaina se află în Theramore Isle și trebuie să ajungă la mentorul ei, Antonidas. Aceștia se află într-o matrice pătratică de dimensiune <code>n x n</code>, în poziții de coordonate cunoscute.</p>

<p>Jaina se poate deplasa în oricare dintre cele <code>8</code> direcții. Astfel, dacă inițial ea se găsește în celula de coordonate <code>(x, y)</code>, poate ajunge în oricare dintre celulele <code>(x-1, y-1)</code>, <code>(x-1, y)</code>, <code>(x-1, y + 1)</code>, <code>(x, y + 1)</code>, <code>(x + 1, y + 1)</code>, <code>(x + 1, y)</code>, <code>(x + 1, y - 1)</code> sau <code>(x, y - 1)</code> făcând exact un pas. </p>

<p>În anumite celule se află câte o sursă de energie. Fiecare sursă emite raze în patru direcții <code>(N, E, S, V)</code>, fiecare rază ajungând până la marginea matricei. </p>

<p>Când Jaina pășește pe o astfel de rază, ea se teleportează <strong>obligatoriu</strong> în celula sursei razei respective, deci nu este posibilă trecerea dincolo de aceste raze decât prin punctul sursă. Teleportarea este automată și instantanee și nu se consideră ca fiind un pas al Jainei.</p>

<p>Antonidas vă roagă să o ajutați pe Jaina să ajungă la el, efectuând un număr minim de pași!</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>jaina.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>4</code> numere naturale separate prin spații, care semnifică coordonatele celulei în care se află Jaina și coordonatele celulei în care se află Antonidas. ( 2 perechi linie-coloană )</p>

<p>A treia linie conține numărul <code>m</code> de surse de energie.</p>

<p>Pe următoarele <code>m</code> linii se află câte două numere naturale <code>x y</code>, reprezentând coordonatele fiecărei surse.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>jaina.out</code> va conține pe prima linie numărul <code>nrp</code>, reprezentând numărul minim de pași pe care Jaina trebuie să-i efectueze pentru a ajunge la Antonidas.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100</code></li>
	<li><code>1 ≤ m ≤ 10</code></li>
	<li>Orice celulă are dimensiunea <code>1x1</code></li>
	<li>În cazul în care Jaina se află la intersecția a două raze de surse diferite, aceasta se va teleporta la sursa de linie minimă.</li>
	<li>Nu există două surse care să se afle pe aceeași linie sau pe aceeași coloană.</li>
	<li>Se garantează că există soluție pentru toate testele.</li>
	<li>Antonidas promite că o să fiți răsplătiți cu o minge de foc dacă găsiți răspunsul corect la această problemă.</li>
	<li>Deoarece Jaina este disperată, limitele de memorie sunt foarte mari, însă pe viitor nu este garantat acest lucru!</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595356547&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1275%2Fjaina&amp;flash=0&amp;wgl=1&amp;dt=1595356546844&amp;bpp=63&amp;bdt=588&amp;idt=172&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=5906269160138&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356547&amp;ga_hid=1932807101&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=12&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1478&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2681292538672778&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1337%2Fsusan&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=MDhIUHTKXC&amp;p=https%3A//www.pbinfo.ro&amp;dtd=177" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CL6RnaL-3uoCFVFEkQUdbv4HTg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>jaina.in</code></p>

<pre contenteditable="true" editable="true">4
2 1 4 4 
1
3 3</pre>

<p><code>jaina.out</code></p>

<pre contenteditable="true" editable="true">2</pre>

<h3>Explicație</h3>

<p>Numărul de pași necesari în acest caz este 2.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <queue>
using namespace std;

ifstream cin("jaina.in");
ofstream cout("jaina.out");

const int di[] = {-1, -1, -1, 0, 0, 1, 1, 1};
const int dj[] = {-1, 0, 1, -1, 1, -1, 0, 1};

int n , ip , jp , is , js , t , ii , jj;
int a[101][101] , b[101][101];

struct poz
{
    int i , j;
}v[11];

queue <poz> Q;
int inside(int i , int j)
{
    return i >= 1 &amp;&amp; i <= n &amp;&amp; j >= 1 &amp;&amp; j <= n;
}

void lee()
{
    poz r;
    r.i = ip;
    r.j = jp;
    Q.push(r);
    a[ip][jp] = 1;
    while(!Q.empty())
    {
        r = Q.front();
        for(int d = 0 ; d < 8 ; d++)
        {
            int inou = r.i + di[d];
            int jnou = r.j + dj[d];
            if(inside(inou,jnou))
                if(b[inou][jnou] == 0)
                    if(a[inou][jnou] == 0)
                    {
                        Q.push({inou , jnou});
                        a[inou][jnou] = a[r.i][r.j] + 1;
                    }
                    else;
                else
                {
                    int raza = b[inou][jnou];
                    if(a[v[raza].i][v[raza].j] == 0)
                    {
                        Q.push({v[raza].i , v[raza].j});
                        a[v[raza].i][v[raza].j] = a[r.i][r.j] + 1;
                    }
                }
        }
        Q.pop();
    }
}

int main()
{
    cin >> n >> ip >> jp >> is >> js >> t;
    for(int i = 1 ; i <= t ; i++)
        cin >> v[i].i >> v[i].j;
    for(int i = 1 ; i <= t ; i++)
    {
        for(int k = 1 ; k <= n ; k++)
        {
            if(b[v[i].i][k] == 0) b[v[i].i][k] = i;
            if(b[k][v[i].j] == 0) b[k][v[i].j] = i;
        }
    }
    lee();
    cout << a[is][js] - 1;
}</pre>
