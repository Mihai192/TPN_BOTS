<h1>Cerința</h1>

<p>Vi se dau <code>n</code> perechi de numere naturale <code>(i, j)</code>, cu <code>i ≤ j</code>. Pentru fiecare pereche trebuie să aflați suma divizorilor tuturor numerelor din șirul <code>i, i + 1, ..., j</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>eratostene0.in</code> conține pe prima linie numărul <code>n</code>, iar pe următoarele <code>n</code> linii câte două numere naturale <code>i</code><sub><code>1</code></sub> <code>j</code><sub><code>1</code></sub>, <code>i</code><sub><code>2</code></sub> <code>j</code><sub><code>2</code></sub>, …, <code>i</code><sub><code>n</code></sub> <code>j</code><sub><code>n</code></sub>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>eratostene0.out</code> va conține <code>n</code> linii, pe fiecare linie <code>L</code>, <code>L = 1..n</code>, aflându-se un singur număr natural reprezentând suma divizorilor tuturor numerelor corespunzătoare perechii <code>i</code><sub><code>L</code></sub> <code>j</code><sub><code>L</code></sub>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 200.000</code></li>
	<li><code>1 ≤ i ≤ j ≤ 1.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361281&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3324%2Feratostene0&amp;flash=0&amp;wgl=1&amp;dt=1595361281457&amp;bpp=5&amp;bdt=234&amp;idt=133&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=314442364408&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361282&amp;ga_hid=1767958275&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066716&amp;oid=3&amp;pvsid=2521255850516815&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3313%2Feratostene2&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=CSeTil2w05&amp;p=https%3A//www.pbinfo.ro&amp;dtd=140" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKKO6fOP3-oCFfrKuwgdW7gPow"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>eratostene0.in</code></p>

<pre contenteditable="true" editable="true">4
1 6
3 7
2 5
8 8</pre>

<p><code>eratostene0.out</code></p>

<pre contenteditable="true" editable="true">33
37
20
15</pre>

<h3>Explicație</h3>

<p><code>1</code> are suma divizorilor <code>1</code>.<br>
<code>2</code> are suma divizorilor <code>3</code>.<br>
<code>3</code> are suma divizorilor <code>4</code>.<br>
<code>4</code> are suma divizorilor <code>7</code>.<br>
<code>5</code> are suma divizorilor <code>6</code>.<br>
<code>6</code> are suma divizorilor <code>12</code>.<br>
<code>7</code> are suma divizorilor <code>8</code>.<br>
<code>8</code> are suma divizorilor <code>15</code>.</p>

<p>Pentru perechea <code>1 6</code> trebuie să aflăm suma divizorilor tuturor numerelor din șirul <code>1,2,3,4,5,6</code>. Această sumă este <code>33</code>.<br>
Pentru perechea <code>3 7</code> trebuie să aflăm suma divizorilor tuturor numerelor din șirul <code>3,4,5,6,7</code>. Această sumă este <code>37</code>.<br>
Pentru perechea <code>2 5</code> trebuie să aflăm suma divizorilor tuturor numerelor din șirul <code>2,3,4,5</code>. Această sumă este <code>20</code>.<br>
Pentru perechea <code>8 8</code> trebuie să aflăm suma divizorilor tuturor numerelor din șirul format doar din <code>8</code>. Această sumă este <code>15</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("eratostene0.in");
ofstream cout("eratostene0.out");

long long  S[1000001];

int main(){
    int n;
    cin >> n;
    S[1] = 1;
    for(int i = 2; i <= 1000000; ++i)
        S[i] = i + 1;
    for(int i = 2; i * i <= 1000000; ++i){
        S[i * i] = S[i * i] + i;
        for(int j = i + 1; j * i <= 1000000; j++)
            S[i * j] = S[i * j] + i + j;
    }
    for(int i = 1; i <= 1000000; ++i)
        S[i] += S[i-1];
    int x, y;
    for(int i = 1; i <= n; ++i){
        cin >> x >> y;
        cout << S[y] - S[x-1] << '\n';
    }
    return 0;
}</pre>
