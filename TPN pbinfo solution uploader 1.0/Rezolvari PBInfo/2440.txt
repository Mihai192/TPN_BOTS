<p>Mihai a primit de ziua lui un joc de puzzle. Jocul are <code>N</code> piese confecţionate prin lipirea unor bucăţi de dimensiune <code>1x1</code> (ilustrate în figurile de mai jos prin <code>X</code>); aceste bucăţi le vom numi în continuare, pe scurt, <code>X</code>-uri. Pentru confecţionarea unei piese se respectă următoarele reguli:<br>
1. <code>X</code>-urile sunt aşezate unul peste altul, formând coloane ce pot avea înălţimi diferite, apoi coloanele se aliniază în partea de jos şi se lipesc între ele, una după cealaltă, de la stânga spre dreapta;<br>
2. pe o coloană sunt cel mult nouă <code>X</code>-uri;<br>
3. toate piesele au acelaşi număr de coloane.<br>
Exemple:</p>

<p><img alt="" src="/resurse/16a4b0/puzzle.jpg"></p>

<p>În figurile 1, 2, 3, 4 sunt piese de puzzle care respectă regulile descrise, iar în figura 5 și în figura 6 NU sunt piese de puzzle, pentru că nu pot fi obţinute prin lipirea unor coloane de <code>X</code>-uri, una după cealaltă, de la stânga spre dreapta.<br>
Fiind mic, Mihai nu poate rezolva puzzle-ul, dar poate face o singură operaţie: alege două piese şi le îmbină în dreptul laturilor de sus, răsturnând una dintre piese sus-jos (fără să o rotească sau să o răstoarne stânga-dreapta). Dacă în urma acestei operaţii el obţine un dreptunghi format din coloane complete de <code>X</code>-uri, toate coloanele având aceeaşi înălţime, este mulţumit. De exemplu, piesa din figura 1 și cea din figura 2 pot fi îmbinate în modul descris.<br>
În figura 7 este piesa din figura 2 răsturnată sus-jos. În figura 8 este ilustrat dreptunghiul care se obţine din piesa din figura 1 şi piesa din figura 2 răsturnată sus-jos.<br>
Observaţi că, dacă am roti piesa din figura 4, am putea să o îmbinăm cu piesa din figura 1, dar rotaţia nu este permisă.<br>
Vom codifica o piesă printr-un număr natural, fiecare cifră din număr reprezentând (în ordine de la stânga la dreapta) câte <code>X</code>-uri se află pe coloana corespunzătoare din piesă.<br>
De exemplu:<br>
– piesa din figura 1 este codificată <code>4232</code>;<br>
– piesa din figura 2 este codificată <code>1323</code>;<br>
– piesa din figura 3 este codificată <code>4444</code>;<br>
– piesa din figura 4 este codificată <code>3231</code>.</p>

<h1>Cerința</h1>

<p>Determinați care este numărul de moduri în care Mihai poate alege câte două piese dintre cele <code>N</code> pentru a face o operaţie în modul descris mai sus.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>puzzle.in</code> conține pe prima linie un număr natural <code>N</code> ce reprezintă numărul de piese din joc. Pe linia a doua se găsesc <code>N</code> numere naturale, separate prin câte un singur spațiu, reprezentând codificările celor <code>N</code> piese.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>puzzle.out</code> va conține o singură linie pe care va fi scris numărul cerut.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>2 ≤ N ≤ 100 000</code></li>
	<li>Numerele care reprezintă codificările pieselor au acelaşi număr de cifre (cel mult <code>5</code>) și nu conțin cifra <code>0</code>.</li>
	<li>Într-o operaţie nu contează care dintre piese este răsturnată, ca urmare perechea formată din piesa <code>a</code> şi piesa <code>b</code> este considerată ca fiind aceeaşi cu perechea formată din piesa <code>b</code> şi piesa <code>a</code>.</li>
	<li>Dreptunghiul obţinut în urma unei operaţii poate avea înălţimea mai mare decât <code>9</code>.</li>
	<li>Pentru teste valorând <code>30</code> de puncte <code>N ≤ 1000</code>.</li>
	<li>În concurs s-au acordat <code>10</code> puncte din oficiu. Aici se acordă punctele pentru exemplul din enunț.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595361070&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2440%2Fpuzzle&amp;flash=0&amp;wgl=1&amp;dt=1595361070299&amp;bpp=4&amp;bdt=287&amp;idt=204&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2125207197514&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361070&amp;ga_hid=1978073388&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1830&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=4148711357520851&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2897%2Fnumere26&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=G7bgqOU6nt&amp;p=https%3A//www.pbinfo.ro&amp;dtd=209" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CJbPlY-P3-oCFQfhuwgdJNIB3Q"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>puzzle.in</code></p>

<pre contenteditable="true" editable="true">5
222 432 234 123 111</pre>

<p><code>puzzle.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h3>Explicație</h3>

<p>Se pot îmbina <code>3</code> perechi de piese: piesa <code>1</code> cu piesa <code>5</code>, piesa <code>2</code> cu piesa <code>3</code>, piesa <code>2</code> cu piesa <code>4</code>. Piesele <code>3</code> și <code>4</code> s-ar putea îmbina corect dacă una dintre ele ar fi răsturnată stânga-dreapta sau rotită, dar acest lucru nu e permis.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream fin("puzzle.in");
ofstream fout("puzzle.out");

long long int f[100001] , v[100001] , frecv[12];
long long int rez , n , k;

int fa(int numar)
{
    long long int t = 0, mi = 9;
    while (numar)
    {
        frecv[++t] = numar % 10;
        numar /= 10;
        if (frecv[t] < mi)
            mi = frecv[t];
    }
    long long int r = 0;
    for (int i = t ; i >= 1 ; i--)
        r = r * 10 + (frecv[i] - mi);
    return r;
}

int intoarce(int code, int k)
{
    long long int t = 0 , aux = code , ma = 0;
    for (int i = 1 ; i <= k ; i++)
    {
        frecv[++t] = aux%10;
        aux /= 10;
        ma = max(ma, frecv[t]);
    }
    long long int r = 0;
    for (int i = t; i >= 1; i--)
        r = r * 10 + (ma - frecv[i]);
    return r;
}

int lungime_nr(int n)
{
    long long int cnt = 0;
    while (n)
        cnt++ , n /= 10;
    return cnt;
}

int main ()
{
    fin >> n;
    for (int i = 1 ; i <= n ; i++)
    {
        fin >> v[i];
        if (i == 1)
            k = lungime_nr(v[i]);
        f[fa(v[i])]++;
    }
    rez = 0;
    for (int i = 1 ; i <= 100000 ; i++)
        rez += 1LL * f[i] * f[intoarce(i, k)];
    rez /= 2;
    rez += 1LL * f[0] * (f[0] - 1) / 2;
    fout << rez << endl;
    return 0;
}</pre>
