<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale. Pentru fiecare număr  <code>k</code> dat, să se afle cea mai lungă secvenţă de numere naturale consecutive din şirul  <code>1,2,3,...,k</code>, astfel încât orice număr din secvenţă să nu fie prim.  </p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>prim997.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>prim997.out</code> va conține pe linia  <code>i</code>, primul număr din secvenţă şi lungimea secvenţei, pentru cel de-al <code>i</code>-lea număr de pe linia a doua a fişierului de intrare.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100.000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi mai mici decât <code>10.000.000</code></li>
	<li>dacă sunt mai multe secvenţe de lungime maximă cu numere consecutive neprime, se va afişa cea cu primul număr din secvenţă minim</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361188&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2327%2Fprim997&amp;flash=0&amp;wgl=1&amp;dt=1595361188733&amp;bpp=16&amp;bdt=231&amp;idt=143&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=8120585210928&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361189&amp;ga_hid=1339102395&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1066&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066715&amp;oid=3&amp;pvsid=2128464540440278&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2330%2Fprim023&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=sktFPIqdzM&amp;p=https%3A//www.pbinfo.ro&amp;dtd=150" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNiwz8eP3-oCFRbwsgodcf8FYA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>prim997.in</code></p>

<pre contenteditable="true" editable="true">3
4 11 30</pre>

<p><code>prim997.out</code></p>

<pre contenteditable="true" editable="true">1 1
8 3
24 5</pre>

<h3>Explicație</h3>

<p>În şirul  <code>1,2,3,4</code> secvenţa de lungime maximă cu numere neprime este  <code>1</code>, în şirul  <code>1,2,3,4,5,6,7,8,9,10,11</code> secvenţa este  <code>8,9,10</code>, iar în şirul  <code>1,2,3,4,...,30</code> este <code>24,25,26,27,28</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("prim997.in");
ofstream cout("prim997.out");
int st[10001001] , l[10001101] ;
bool a[10001001];
int n;

int main()
{
    int max=10001001;
    for(int i = 2 ; i <= max ; i++) a[i] = 1;
    for(int i = 2 ; i*i <= max ; i++)
        if(a[i] == 1)
            for(int j = i*i; j <= max; j += i) a[j]=0;
    int lun = 0 , lmax=0;
    for(int i = 1 ; i <= 10000000 ; ++i)
    {
        l[i]=l[i-1] , st[i]=st[i-1];
        if(a[i]==0)
        {
            lun++;
            if(lun>lmax)
                lmax=lun , l[i]=lmax , st[i]=i-lmax+1;
        }
        if(a[i]==1)
            lun=0;
    }
    cin >> n;
    for(int i = 0 ; i < n ; ++i)
    {
        int x;
        cin >> x;
        cout << st[x] << ' ' << l[x] << endl;
    }
    return 0;
}</pre>
