<p>Se consideră un șir binar <code>a[1]</code>, <code>a[2]</code>, …, <code>a[n]</code>. Asupra șirului se poate efectua operația <code>swap(i, j)</code> prin care se interschimbă valorile <code>a[i]</code> și <code>a[j]</code>. </p>

<h1>Cerința</h1>

<p>Să se determine numărul minim de operații <code>swap</code> care pot fi efectuate astfel încât toate valorile de <code>1</code> să apară pe poziții consecutive în șir.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere naturale, separate prin spații reprezentând elementele șirului binar.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul minim de operații  <code>swap</code> care pot fi efectuate astfel încât toate valorile de <code>1</code> să apară pe poziții consecutive în șir.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100 000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361526&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2236%2Fswap01&amp;flash=0&amp;wgl=1&amp;dt=1595361526795&amp;bpp=4&amp;bdt=222&amp;idt=150&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=1173670281033&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361527&amp;ga_hid=1065466926&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066717&amp;oid=3&amp;pvsid=2338541816746831&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F310%2Fsecvpal&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=zOF8oD2r0R&amp;p=https%3A//www.pbinfo.ro&amp;dtd=155" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPqC6eiQ3-oCFetGkQUdtoQHBw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">14
1 0 0 1 0 1 1 0 1 0 0 0 1 0</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">2</pre>

<h3>Explicație</h3>

<p>Se efectuează de exemplu <code>swap(1,5)</code> și <code>swap(13, 8)</code> și astfel șirul devine <code>0 0 0 1 1 1 1 1 1 0 0 0 0 0</code>, deci valorile de <code>1</code> ocupă o zonă continuă. Nu există posibilitatea ca printr-o singură operație să se obțină o secvență continuă de valori de <code>1</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

int sp[100001];  // a[0], a[1], a[2], a[3]...., a[999];
int n;
int k;     // nr de cifre 1 din sir

int main()
{
    int x;
    // citirea sirului
    cin >> n;
    for (int i = 1; i <= n; ++i)
    {
        cin >> x;
        sp[i] = sp[i - 1] + x;
    }
    
    k = sp[n];
    
    int smax = 0;
    for (int i = k; i <= n; ++i)
        if (sp[i] - sp[i - k] > smax)
            smax = sp[i] - sp[i - k];
            
    cout << k - smax;
    
    return 0;
    
}</pre>
