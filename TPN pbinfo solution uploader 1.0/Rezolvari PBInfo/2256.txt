<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("colier.in");
ofstream cout("colier.out");

struct poz
{
    int val , culoare , grad;
}a[15];
int x[15] , s[15] , maxi , n , m , rez[15] , p[15];

void back(int k , int sp)
{
    for(int i = 1 ; i <= n ; i++)
    if(!p[i])
    {
        x[k] = i;
        p[i] = 1;
        sp += a[x[k]].grad;
        if(k == 1 || a[x[k]].culoare != a[x[k - 1]].culoare)
        if(k <= m)
        {
            if(k == m)
            {
                if(sp > maxi &amp;&amp; a[x[1]].culoare != a[x[m]].culoare)
                {
                    maxi = sp;
                    for(int j = 1 ; j <= m ; j++)
                        rez[j] = a[x[j]].val;
                }
            }
            else back(k + 1 , sp);
        }
        sp -= a[x[k]].grad;
        p[i] = 0;
    }
}

int main()
{
    cin >> n >> m;
    for(int i = 1 ; i <= n ; i++)
    {
        a[i].val = i;
        cin >> a[i].culoare >> a[i].grad;
    }
    back(1 , 0);
    for(int i = 1 ; i <= m ; i++)
        cout << rez[i] << " ";
}</pre>
