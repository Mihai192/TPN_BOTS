<h1>Cerința</h1>

<p>Se citesc pe rând numere naturale nenule. Să se determine câte din numerele citite sunt termeni ai șirului lui Fibonacci.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>cautafibo.in</code> conține numere naturale nenule, separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>cautafibo.out</code> va conține o singură valoare, reprezentând numărul termenilor Fibonacci care se regăsesc în fișierul de intrare.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>numerele din fișierul de intrare vor avea cel mult <code>10</code> cifre</li>
	<li>fișierul de intrare va conține cel mult <code>100.000</code> de numere naturale nenule</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595360411&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2969%2Fcautafibo&amp;flash=0&amp;wgl=1&amp;dt=1595360411046&amp;bpp=5&amp;bdt=200&amp;idt=139&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=6471570973761&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595360411&amp;ga_hid=1127437875&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1010&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2835870144591313&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2241%2Finspectorat&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=gWgKZ8mA4M&amp;p=https%3A//www.pbinfo.ro&amp;dtd=144" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="COD15dSM3-oCFW9GkQUdNWcOXw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>cautafibo.in</code></p>

<pre contenteditable="true" editable="true">5 10 89 1 7 9 8 1 6 55 19 13 55</pre>

<p><code>cautafibo.out</code></p>

<pre contenteditable="true" editable="true">8</pre>

<h3>Explicație</h3>

<p>Numerele Fibonacci din fișierul de intrare sunt: <code>5 89 1 8 1 55 13 55</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <algorithm>
using namespace std;

ifstream cin("cautafibo.in");
ofstream cout("cautafibo.out");

unsigned long long a[55] , cnt;
int n;

void fib()
{
    a[1] = 1 , a[2] = 1;
    for(n = 3 ; a[n - 1] <= 10000000001ll ; n++)
        a[n] = a[n - 1] + a[n - 2];
}

int main()
{
    fib();
    long long x;
    while(cin >> x)
    {
        unsigned long long st = 0 , dr = n - 1 , poz = -1;
        while(st <= dr)
        {
            int m =(st + dr)/2;
            if(x <= a[m])
            {
                 poz = m;
                 dr = m - 1;
            }
            else st = m + 1;
        }
        if(a[poz] == x) cnt++;
    }
    cout << cnt;
}</pre>
