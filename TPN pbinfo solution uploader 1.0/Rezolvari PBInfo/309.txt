<p>Se numeşte permutare a unei mulţimi finite orice rearanjare a tuturor elementelor acelei mulţimi.</p>

<h1>Cerinţa</h1>

<p>Se dă un şir cu <code>n</code> elemente, numere  naturale. Să se verifice dacă reprezintă o permutare a mulţimii <code>{1,2,...,n}</code>.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi cele <code>n</code> elemente ale şirului, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran mesajul <code>DA</code>, dacă şirul reprezintă o permutare a mulţimii <code>{1,2,...,n}</code>, respectiv <code>NU</code> în caz contrar.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100</code></li>
</ul>


<h1>Exemplul 1:</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
2 5 4 3 1</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">DA</pre>

<h1>Exemplul 2:</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
2 5 4 3 9</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">NU</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int a[101];
    for(int i = 1 ; i <= n ; ++i)
    cin >> a[i];
    sort(a+1, a+n+1);
    bool dif=true;
    for(int i = 1 ; i <= n ; ++i)
    {
        if(a[i]!=i)
        dif=false;
    }
    if(dif)
    cout << "DA";
    else
    cout << "NU";
    return 0;    
}</pre>
