<p>Maria are în camera sa <code>N</code> mărgele așezate una lângă alta. Pe fiecare dintre ele este scris un număr natural format din cifre nenule distincte. Pentru fiecare mărgea, Maria șterge numărul și în locul său scrie altul, având doar  două cifre, respectiv cifra minimă și cifra maximă din numărul scris inițial, în ordinea în care aceste cifre apăreau înainte de ștergere. Acum Maria consideră că mărgelele sunt de două tipuri, în funcție de numărul de două cifre scris pe ele: tipul <code>1</code> (cele care au cifra zecilor mai mică decât cifra unităților) și tipul <code>2</code> (celelalte). Folosind mărgelele, fetița dorește ca prin eliminarea unora dintre ele (dar fără să le schimbe ordinea celorlalte) să obțină un colier <strong>circular</strong> cât mai lung care să respecte proprietatea că oricare două mărgele vecine ale sale sunt de tipuri diferite. În colierul format cu mărgelele rămase după eliminare se consideră că prima mărgea este vecină cu ultima.</p>

<h1>Cerințe</h1>

<p>1) determinați numărul de mărgele de tipul <code>1</code>;<br>
2) determinați numărul maxim de mărgele pe care le poate avea colierul; </p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>colier.in</code> conține pe prima linie un număr natural <code>T</code>. Pe linia a doua se găsește un număr natural <code>N</code>. Pe linia a treia sunt <code>N</code> numere naturale ce reprezintă, în ordine, valorile scrise inițial pe mărgele. Aceste numere sunt separate prin câte un spațiu.</p>

<h1>Date de ieșire</h1>

<ul>
	<li>Dacă valoarea lui <code>T</code> este <code>1</code>, se va rezolva numai punctul 1) din cerințe. În acest caz, fişierul de ieşire <code>colier.out</code> va conține pe prima linie un număr natural reprezentând răspunsul la cerinţa 1).</li>
	<li>Dacă valoarea lui <code>T</code> este <code>2</code>, se va rezolva numai punctul 2) din cerințe. În acest caz, fişierul de ieşire <code>colier.out</code> va conține pe prima linie un număr natural reprezentând răspunsul la cerinţa 2).</li>
</ul>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N ≤ 50 000</code>;</li>
	<li>Numerele scrise inițial pe mărgele au cifrele distincte, nu conțin cifra <code>0</code> și sunt cuprinse între <code>12</code> și <code>987654321</code>;</li>
	<li><code>T</code> va fi <code>1</code> sau <code>2</code>;</li>
	<li>Pentru obținerea colierului, Maria poate decide să nu elimine nicio mărgea;</li>
	<li>Colierul obținut poate fi format și dintr-o singură mărgea;</li>
	<li>Pentru teste în valoare de 20 de puncte avem <code>T = 1</code> și toate numerele scrise inițial pe mărgele au două cifre;<br>
Pentru teste în valoare de 30 de puncte avem <code>T = 1</code> și dintre numerele scrise inițial pe mărgele sunt și unele cu mai mult de două cifre;<br>
Pentru teste în valoare de 50 de puncte avem <code>T = 2</code>.</li>
</ul>

<h1>Exemplul 1</h1>

<p><code>colier.in</code></p>

<pre contenteditable="true" editable="true">1
5
12 678 312 24 938</pre>

<p><code>colier.out</code></p>

<pre contenteditable="true" editable="true">3</pre>

<h3>Explicație</h3>

<p>Numerele scrise de Maria pe mărgele vor fi, în ordine: <code>12 68 31 24 93</code>. Trei dintre ele (<code>12</code>, <code>68</code> și <code>24</code>) sunt de tipul <code>1</code>. (<code>T</code> fiind <code>1</code> se rezolvă doar cerința 1)</p>

<h1>Exemplul 2</h1>

<p><code>colier.in</code></p>

<pre contenteditable="true" editable="true">2
5
12 678 312 24 938</pre>

<p><code>colier.out</code></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p>Numerele scrise de Maria pe mărgele vor fi, în ordine: <code>12 68 31 24 93</code>. Eliminând mărgeaua de pe poziția <code>1</code> sau pe cea de pe poziția <code>2</code> și așezându-le pe celelalte circular obținem un colier  cu <code>4</code> mărgele în care oricare două vecine sunt de tipuri diferite. (<code>T</code> fiind <code>2</code> se rezolvă doar cerința 2). Maria este obligată să elimine una din cele două mărgele, altfel ar exista mărgele vecine de același tip.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("colier.in");
ofstream cout("colier.out");
int minmax(int n)
{
    int v[100] , p = 0 , mini = 10 , maxi = 0 , nr = 0 , cntmin = 0 , cntmax = 0;
    while(n != 0)
    {
        v[p]=n%10;
        if(n%10<mini) mini=n%10;
        if(n%10>maxi) maxi=n%10;
        p++;
        n/=10;
    }
    for(int i = p-1 ; i >= 0 ; --i)
    {
        if(v[i]==mini &amp;&amp; cntmin==0)
        {
            nr=nr*10+mini;
            cntmin++;
        }
        if(v[i]==maxi &amp;&amp; cntmax==0)
        {
            nr=nr*10+maxi;
            cntmax++;
        }
    }
    return nr;
}

int main()
{
    int t , n , a[50001] , tip[50001] , x , cnt = 0;
    cin >> t >> n;
    for(int i = 1 ; i <= n ; ++i)
    {
        cin >> x;
        a[i]=minmax(x);
    }
    for(int i = 1 ; i <= n ; ++i)
    {
        if(a[i]/10 < a[i]%10)
        {
            cnt++;
            tip[i]=1;
        }
        else tip[i]=2;
    }
    if(t==1) cout << cnt;
    if(t==2)
    {
        cnt=n;
        for(int i = 1 ; i <= n ; ++i)
        {
            if(tip[i]!=tip[i%n+1])
                cnt--;
        }
        cout << n-cnt;
    }
    return 0;
}</pre>
