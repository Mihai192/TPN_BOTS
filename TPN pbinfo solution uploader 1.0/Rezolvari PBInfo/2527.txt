<p><strong>Turnurile din Hanoi</strong> este un joc matematic sau, dacă vreți, un puzzle. Este format din trei tije <code>A</code>, <code>B</code> și <code>C</code> și un număr variabil de discuri, de diferite diametre. Inițial discurile sunt așezate în ordine descrescătoare a diametrelor pe tija <code>A</code>, de la vârf către bază, astfel încât să formeze un turn. <br>
Scopul jocului este acela de a muta toate discurile de pe tija <code>A</code> pe tija <code>C</code> folosind ca tijă intermediară tija <code>B</code>, respectând următoarele reguli:</p>

<ul>
	<li>la un moment dat doar un singur disc poate fi mutat</li>
	<li>fiecare mutare constă în luarea celui mai de sus disc de pe o tija și mutarea acestuia pe o altă tijă</li>
	<li>un disc cu diametrul mai mare nu poate fi poziționat deasupra unui disc cu diametrul mai mic.</li>
</ul>

<h1>Cerința</h1>

<p>Dacă se cunoaște numărul <code>n</code> de discuri aflate pe tija <code>A</code>, să se determine șirul mutărilor necesare pentru ca toate discurile să fie mutate pe tija <code>C</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>hanoi.in</code> conține pe prima linie numărul natural nenul <code>n</code>, ce reprezintă numărul de discuri aflat pe tija <code>A</code>.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>hanoi.out</code> va conține pe prima linie numărul <code>m</code>, ce reprezintă numărul minim de mutări ce se efectuează. Pe următoarele <code>m</code> linii vor fi scrise mutările sub forma: <em>tija sursă-&gt;tija destinație</em>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 15</code></li>
	<li>mutările vor fi scrise câte una pe linie, fără spații</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357684&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2527%2Fhanoi&amp;flash=0&amp;wgl=1&amp;dt=1595357683923&amp;bpp=4&amp;bdt=256&amp;idt=130&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=1246000879348&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357684&amp;ga_hid=1467903221&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1208&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066358&amp;oid=3&amp;pvsid=3145460684419814&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F1155%2Fcautarebinara&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=hzJfim49EM&amp;p=https%3A//www.pbinfo.ro&amp;dtd=135" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CPmUtcCC3-oCFanGuwgdfW8Onw"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>hanoi.in</code></p>

<pre contenteditable="true" editable="true">2</pre>

<p><code>hanoi.out</code></p>

<pre contenteditable="true" editable="true">3
A-&gt;B
A-&gt;C
B-&gt;C</pre>

<h3>Explicație</h3>

<p><img alt="" src="https://www.pbinfo.ro/resurse/d7bfda/disk2.jpg"></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("hanoi.in");
ofstream cout("hanoi.out");

void hanoi(int n , char a , char b , char c)
{
    if(n > 0)
    {
        hanoi(n - 1 , a , c , b);
        cout << a << "->" << c << '\n';
        hanoi(n - 1 , b , a , c);
    }
}

int main()
{
    int n;
    cin >> n;
    char a = 'A' , b = 'B' , c = 'C';
    int put = 1;
    for(int i = 0 ; i < n ; ++i)
        put *= 2;
    cout << put-1 << endl;
    hanoi(n , a , b , c);
    return 0;
}</pre>
