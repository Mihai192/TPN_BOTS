<h1>Cerința</h1>

<p>Se consideră un text cu cel mult <code>100</code> de caractere, în care cuvintele sunt formate din litere mari ale alfabetului englez și sunt separate prin câte un spațiu.</p>

<p>Scrieți un program care citește de la tastatură un text de tipul menționat mai sus și afișează pe ecran, pe câte un rând, cuvintele care cuprind cel puțin o notă muzicală. Dacă nu există astfel de cuvinte, se afișează pe ecran mesajul <code>nu exista</code>.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură un text de tipul menționat.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran, pe câte un rând, cuvintele care cuprind cel puțin o notă muzicală. Dacă nu există astfel de cuvinte, se afișează pe ecran mesajul <code>nu exista</code>.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li>cuvintele vor fi afișate în ordinea din text</li>
	<li>notele muzicale sunt <code>DO</code>, <code>RE</code>, <code>MI</code>, <code>FA</code>, <code>SOL</code>, <code>LA</code>, <code>SI</code>.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595357307&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2813%2Fnote&amp;flash=0&amp;wgl=1&amp;dt=1595357306988&amp;bpp=5&amp;bdt=428&amp;idt=152&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=2578997635118&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595357307&amp;ga_hid=1183801826&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1098&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066357%2C21066392&amp;oid=3&amp;pvsid=1744009069834270&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F89%2Fpalindrompropozitie&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=hFnW34lp7N&amp;p=https%3A//www.pbinfo.ro&amp;dtd=158" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKXY14yB3-oCFQamsgodiAABfA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">REMI DOMINO SI KHANHOO SUNT DENUMIRI DE JOCURI CE AU ASPECTE SIMILARE</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">REMI
DOMINO
SI
DENUMIRI
SIMILARE</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
using namespace std;

char s[101] , m[101][101];

bool DO(char a , char b)
{
    if(a=='D' &amp;&amp; b=='O')
        return 1;
    return 0;
}

bool RE(char a , char b)
{
    if(a=='R' &amp;&amp; b=='E')
        return 1;
    return 0;
}

bool MI(char a , char b)
{
    if(a=='M' &amp;&amp; b=='I')
        return 1;
    return 0;
}

bool FA(char a , char b)
{
    if(a=='F' &amp;&amp; b=='A')
        return 1;
    return 0;
}

bool SOL(char a , char b)
{
    if(a=='S' &amp;&amp; b=='O')
        return 1;
    return 0;
}

bool LA(char a , char b)
{
    if(a=='L' &amp;&amp; b=='A')
        return 1;
    return 0;
}

bool SI(char a , char b)
{
    if(a=='S' &amp;&amp; b=='I')
        return 1;
    return 0;
}

bool oke(int i)
{
    int j = 1;
    while(m[i][j]!='\0')
    {
        if(RE(m[i][j-1] , m[i][j]))
            return 1;
        if(DO(m[i][j-1] , m[i][j]))
            return 1;
        if(MI(m[i][j-1] , m[i][j]))
            return 1;
        if(FA(m[i][j-1] , m[i][j]))
            return 1;
        if(SOL(m[i][j-1] , m[i][j]) &amp;&amp; m[i][j+1] == 'L')
            return 1;
        if(LA(m[i][j-1] , m[i][j]))
            return 1;
        if(SI(m[i][j-1] , m[i][j]))
            return 1;
        j++;
    }
}

int main()
{
    cin.getline(s , 101);
    bool ok = true;
    int cnt = 1 , j = 0;
    int i = 0;
    while(s[i]!='\0')
    {
        if(s[i]==' ' &amp;&amp; s[i-1]!=' ')
        {
            cnt++;
            j=0;
        }
        else
            m[cnt][j]=s[i] , j++;
        i++;
    }
    int r = 0;
    for(int i = 1 ; i <= cnt ; ++i)
    {
        if(oke(i))
            cout << m[i] << endl , r++;
    }
    if(!r)
        cout << "nu exista";
    return 0;
}</pre>
