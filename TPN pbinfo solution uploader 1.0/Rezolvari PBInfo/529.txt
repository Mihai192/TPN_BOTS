<h1>Cerința</h1>

<p>Se dau <code>n</code> numere naturale. Afișați cifrele care apar în scrierea zecimală a acestor numere, în ordinea crescătoare a numărului de apariții. Dacă două cifre au același număr de apariții, se va afișa mai întâi cifra mai mică,</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere naturale.</p>

<h1>Date de ieșire</h1>

<p>Programul va afișa pe ecran numărul cifrele care apar în scrierea zecimală a numerelor citite, în ordinea cerută, separate prin exact un spațiu.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595361384&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F529%2Fcifre4&amp;flash=0&amp;wgl=1&amp;dt=1595361384597&amp;bpp=5&amp;bdt=214&amp;idt=176&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=8138680965635&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361385&amp;ga_hid=1343408826&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;eid=21066533&amp;oid=3&amp;pvsid=1769476368758613&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F239%2Fnrlipsa&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=Pq8gVdrh5K&amp;p=https%3A//www.pbinfo.ro&amp;dtd=183" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKLehKWQ3-oCFZvMsgodY_YEcQ"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5
124 229 1322 4 534</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">5 9 1 3 4 2</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iostream>
#include <cmath>
using namespace std;

int f[11];

int main()
{
    int n;
    cin >> n;
    int rez[11], ind = 0;
    int x;
    for(int i = 1; i <= n; ++i){
        cin >> x;
        while(x){
            f[x % 10] ++;
            x/=10;
        }
    }
    int max = 1;
    while(max){
        max = 0;
        for(int j = 0; j <= 9; ++j)
            if(f[j] > max)
                max = f[j];
        for(int j = 9; j >= 0; --j)
            if(f[j] == max &amp;&amp; f[j] != 0)
                rez[++ind] = j, f[j] = 0;
    }

    for(int i = ind; i >= 1; --i)
        cout << rez[i] << ' ';
}</pre>
