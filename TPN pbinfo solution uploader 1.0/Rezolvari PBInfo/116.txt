<h1>Cerinţa</h1>

<p>Să se scrie un program care citeşte de la tastatură un număr natural <code>n</code> şi apoi un şir de <code>n</code> numere naturale şi determină media aritmetică a celor prime.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere naturale.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>M</code>, reprezentând media aritmetică a valorilor prime.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>0 &lt; n &lt; 1000</code>;</li>
	<li>cele <code>n</code> numere citite vor fi mai mici decât <code>10000</code>;</li>
	<li>rezultatul se va afişa cu cel puțin două zecimale exacte;</li>
	<li>în toate testele, printre cele <code>n</code> numere va exista cel puțin un număr prim.</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=3283908322&amp;w=728&amp;lmt=1595359221&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F116%2Fmedieprime&amp;flash=0&amp;wgl=1&amp;dt=1595359221583&amp;bpp=5&amp;bdt=285&amp;idt=234&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=2898659698002&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595359222&amp;ga_hid=1830843888&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1044&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2559581499656493&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3081%2Ftruncatableleft&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=1xykipUARO&amp;p=https%3A//www.pbinfo.ro&amp;dtd=241" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CNay1p2I3-oCFT3huwgdOxsJQg"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Intrare</strong></p>

<pre contenteditable="true" editable="true">5
8 7 5 9 11</pre>

<p><strong>Ieșire</strong></p>

<pre contenteditable="true" editable="true">7.66</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <iomanip>
#include <iostream>
using namespace std;

bool prim(int n)
{
    int cnt = 0;
    for(int d = 1 ; d * d <= n ; ++d)
    {
        if(n % d == 0)
            cnt+=2;
        if(d * d == n)
            cnt--;
    }
    if(cnt == 2)
        return 1;
    return 0;
}

int main()
{
    int n;
    cin >> n;
    int x , cntp=0 , sp=0;
    for(int i = 1 ; i <= n ; ++i)
    {
        cin >> x;
        if(prim(x))
            sp+=x , cntp++;
    }
    cout << fixed << setprecision(2) << (double)(sp*100/cntp)*0.01;
    return 0;
}</pre>
