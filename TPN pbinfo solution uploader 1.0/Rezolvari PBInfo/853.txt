<h1>Cerința</h1>

<p>Elevii clasei a X-a s-au implicat în strângerea de cadouri pentru Crăciun. Fiecare elev a adus mai multe cadouri, și a trimis prin email șefului clasei o urare, însoțită de lista cadourilor. Fiecare email are forma: <br>
<code>urare lista_cadouri</code><br>
<code>urare</code> este un text care nu conţine cifre. Lista cadourilor constă într-o enumerare a cadourilor: <br>
<code>numar_cadouri denumire_cadou</code><br>
(<code>numar_cadouri</code> este un număr natural, iar <code>denumire_cadou</code> este un cuvânt scris cu litere mici ale alfabetului englez; <code>numar_cadouri</code> şi <code>denumire_cadou</code> sunt separate prin cel puţin un spaţiu), cadourile din listă fiind separate prin spaţii şi/sau  diverse semne de punctuaţie</p>

<p>Şeful clasei trebuie să centralizeze listele primite. Ajutaţi-l să construiască o listă a care să conţină denumirea fiecărui cadou şi numărul total de cadouri de acel tip (cantitatea). Lista va fi ordonată descrescător după cantitate.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>cadouri.in</code> conține pe prima linie numărul <code>n</code> de elevi din clasa a X-a; fiecare dintre următoarele <code>n</code> linii, conţine câte un email.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>cadouri.out</code> va conține pe prima linie numărul de cadouri diferite <code>C</code>; următoarele <code>C</code> linii vor conţine câte un cadou şi cantitatea totală, separate prin exact un spaţiu. Lista cadouri va fi ordonată descrescător după cantitate. Dacă există mai multe cadouri cu aceeaşi cantitate, se va afişa mai întâi cadoul cu denumirea mai mică din punct de vedere lexicografic.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100</code></li>
	<li>fiecare linie a fişierului de intrare conţine cel mult <code>255</code> caractere</li>
	<li>sunt cel mult <code>500</code> de cadouri diferite cu denumirea de cel mult <code>20</code> de litere ale afabetului englez</li>
	<li>cantitatea din fiecare cadou este cel mult <code>100.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=1958414068&amp;w=728&amp;lmt=1595356955&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F853%2Fcadouri&amp;flash=0&amp;wgl=1&amp;dt=1595356955747&amp;bpp=14&amp;bdt=223&amp;idt=191&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=915747535130&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595356956&amp;ga_hid=499212051&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1296&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=3417552218504138&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2F%3Fpagina%3Dprobleme-cautare%26what%3D1752-2%26denumire%3Don&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=CrxCt56MGk&amp;p=https%3A//www.pbinfo.ro&amp;dtd=196" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CN-hneX_3uoCFRmdsgodm8kK_Q"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>cadouri.in</code></p>

<pre contenteditable="true" editable="true">3
La multi ani! 4 papusi, 15 ciocolate , 20 sosete.
Sarbatori fericite :) ! 3 ciocolate , 10 biscuiti, 5 papusi
Salut. 2 ciocolate , 1 papusi. 1 ciocolate!</pre>

<p><code>cadouri.out</code></p>

<pre contenteditable="true" editable="true">4
ciocolate 21
sosete 20
biscuiti 10
papusi 10</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <map>
#include <algorithm>
using namespace std;

ifstream cin("cadouri.in");
ofstream cout("cadouri.out");

map <string , int> M;
char s[1001];

bool nr(char ch)
{
    return ch >= '0' &amp;&amp; ch <= '9';
}

bool lit(char ch)
{
    return (ch >='a' &amp;&amp; ch <= 'z') || (ch >= 'A' &amp;&amp; ch <= 'Z');
}

int main()
{
    int n;
    cin >> n;
    cin.get();
    for(int k = 1 ; k <= n ; ++k)
    {
        cin.getline(s , 1000);
        int i = 0;
        int num = 0;
        while(s[i]!='\0')
        {
            while(nr(s[i]))
            {
                num=num*10+(int)s[i]-48;
                i++;
            }
            if(num)
            {
            while(!lit(s[i]) &amp;&amp; num)
                i++;
            if(lit(s[i]) &amp;&amp; num)
            {
                int j = 0;
                char ch[255];
                while(lit(s[i]) &amp;&amp; s[i])
                {
                    ch[j]=s[i];
                    j++;
                    i++;
                }
                ch[j]='\0';
                string p = ch;
                M[p]+=num;
                num=0;
            }
            i--;
            }
            i++;
        }
    }
    int cnt = 0;
    for(auto x:M)
        cnt++;
    cout << cnt << endl;
    int v[1001] , p = 0;
    for(auto x:M)
    {
        v[p] = x.second;
        p++;
    }
    sort(v , v+p);
    for(int i = p-1 ; i >= 0 ; --i)
    {
        for(auto x:M)
        {
            if(x.second == v[i])
            {
                cout << x.first << ' ' << x.second << '\n';
                M[x.first]=-1;
                break;
            }
        }
    }
    return 0;
}</pre>
