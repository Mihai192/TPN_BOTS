<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;
ifstream cin("regine.in");
ofstream cout("regine.out");
const int di[]={-1,-1,-1, 0, 0, 1, 1, 1};
const int dj[]={-1, 0, 1,-1, 1,-1, 0, 1};

int a[105][105], n, m , i , j , p , q;
int main()
{
    cin  >> n >> m ;
    for(int k = 1 ; k <= m ; ++k)
    {
        cin >> i >> j;
        a[i][j] = 1;
    }
    
    for(int i =1 ; i <= n ; ++i)
        for(int j =1 ; j <= n ; ++j)
            if(a[i][j] == 1)
            {
                int cnt = 0;
                for(int k = 0 ; k < 8 ; k ++)
                {
                    int x = 1;
                    while(i + di[k] * x > 0 &amp;&amp; i + di[k] * x <= n &amp;&amp; j + dj[k] * x > 0 &amp;&amp; j + dj[k] * x <= n &amp;&amp; a[i + di[k] * x][j + dj[k] * x] == 0)
                        x ++;
                    if(a[i + di[k] * x][j + dj[k] * x] == 1)  
                        cnt ++;
                }
                if(cnt > p) 
                    p = cnt, q = 1;
                else if(cnt == p) 
                    q ++;
            }
    
    cout << p << " " << q << endl;
    return 0;
}</pre>
