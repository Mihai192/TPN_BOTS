<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <vector>
#include <algorithm>
using namespace std;

ifstream cin("cifre5.in");
ofstream cout("cifre5.out");

int n , v[100001] , ok , d , poz , poz2 , sum , i2 , k , A[10001] , cnt;

int main()
{
    cin >> n >> k;
    for(int i = 1 ; i <= n ; i++)
        cin >> v[i];
    sort(v + 1, v + n + 1);
    while(v[poz] == 0) poz++;
    if(poz == 1) poz -= k;
    poz += k - 1;
    poz2 = n; d = -1;
    i2 = 1;
    while (sum > 0 || i2 <= n)
    {
        for(int i = 1 ; i <= k &amp;&amp; i2 <= n ; i++)
        {
            if(poz2 == poz &amp;&amp; ok == 0 ) d = 1 , poz2 = 1 , ok = 1;
            else if (poz2 == poz - k + 1 &amp;&amp; ok == 1) d = -1 , poz2 = poz , ok = 2;
            sum += v[poz2];
            poz2 += d;
            i2++;
        }
        A[++cnt] = sum % 10;
        sum /= 10;
    }
    for(int i = cnt ; i >= 1 ; i--)
        cout << A[i];
    return 0;
}</pre>
