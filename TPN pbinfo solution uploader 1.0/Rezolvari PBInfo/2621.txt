<p>Un număr natural <code>M</code> se numește număr <strong><em>spower2</em></strong> dacă poate fi descompus astfel: <code>M=2</code><sup><code>x</code></sup><code>+2</code><sup><code>y</code></sup>, cu <code>x≠y</code>. Exemplu: <code>6</code> este un număr <strong><em>spower2</em></strong> (<code>6=2+4</code>), pe când <code>8</code> nu este.</p>

<h1>Cerința</h1>

<p>Se consideră un șir <code>A</code> de <code>n</code> numere naturale. Pentru fiecare element al șirului <code>A</code><sub><code>i</code></sub> să se determine cel mai apropiat număr <strong><em>spower2</em></strong> mai mare sau egal cu <code>A</code><sub><code>i</code></sub>, unde <code>1≤i≤n</code>.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>spower2.in</code> conține pe prima linie numărul <code>n</code>, iar pe a doua linie <code>n</code> numere naturale separate prin spații.</p>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>spower2.out</code> va conține pe prima linie <code>n</code> numere naturale, separate prin spațiu, ce reprezintă numerele <strong><em>spower2</em></strong> asociate numerelor citite din fișier conform cerinței.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 100 000</code></li>
	<li>numerele de pe a doua linie a fișierului de intrare vor fi mai mici decât <code>1.000.000.000</code></li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=1958414068&amp;w=728&amp;lmt=1595361689&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2621%2Fspower2&amp;flash=0&amp;wgl=1&amp;dt=1595361689777&amp;bpp=7&amp;bdt=190&amp;idt=167&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280%2C0x0&amp;nras=1&amp;correlator=4583101042614&amp;frm=20&amp;pv=1&amp;ga_vid=704522989.1595356494&amp;ga_sid=1595361690&amp;ga_hid=581980578&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=816&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1088&amp;biw=1200&amp;bih=649&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=2988515453398372&amp;pem=564&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F3163%2Fsecvmaxval&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C772%2C1200%2C649&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=1&amp;fsb=1&amp;xpc=VhJ6KDeE0I&amp;p=https%3A//www.pbinfo.ro&amp;dtd=174" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CKnQxLaR3-oCFavluwgdoocKow"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>spower2.in</code></p>

<pre contenteditable="true" editable="true">6
14 8 5 19 1 6</pre>

<p><code>spower2.out</code></p>

<pre contenteditable="true" editable="true">17 9 5 20 3 6</pre>

<h3>Explicație</h3>

<p><code>17=1+16</code>, <code>9=1+8</code>, <code>5=1+4</code>, <code>20=4+16</code>, <code>3=1+2</code>, <code>6=2+4</code>.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("spower2.in");
ofstream cout("spower2.out");

int CB(int a[] , int n , int x)
{
    int st = 1 , dr = n;
    while(st <= dr)
    {
        int mij = (st + dr) / 2;
        if(a[mij] >= x) dr = mij - 1;
        else st = mij + 1;
    }
    return st;
}

int main()
{
    int P[1001]={0} , p = 0 , n , x;
    for(int i = 1 ; i <= 30 ; ++i)
        for(int j = 0 ; j < i ; ++j)
            P[++p]=(1<<i)+(1<<j);
    cin >> n;
    for(int i = 1 ; i <= n ; ++i)
    {
        cin >> x;
        cout << P[CB(P , p , x)] << ' ';
    }
    return 0;
}</pre>
