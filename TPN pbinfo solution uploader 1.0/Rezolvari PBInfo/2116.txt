<p>Pentru a exprima starea de spirit în comunicarea online sunt utilizate emoticonurile (cunoscute şi sub denumirea de smileys). În mod text, un <code>smiley</code> este reprezentat ca o secvenţă de caractere. În problema noastră, un smiley este o secvenţă care îndeplineşte simultan următoarele condiţii:</p>

<ul>
	<li>secvenţa începe cu un caracter din mulţimea <code>{′:′,′;′,′&gt;′,′8′}</code></li>
	<li>urmează zero, unul sau mai multe caractere <code>′-′ (minus)</code></li>
	<li>se termină cu unul, două sau mai multe caractere identice din mulţimea <code>{′(′, ′)′, ′[′, ′]′, ′D′, ′P′, ′O′, ′X′, ′3′}</code></li>
</ul>

<p>De exemplu, fiecare dintre următoarele secvenţe este un smiley:<br>
<code>:)</code><br>
<code>:-(((</code><br>
<code>;------------]</code><br>
<code>:-O</code> <br>
Următoarele secvenţe nu reprezintă un smiley (deşi e posibil să conţină un smiley):<br>
<code>:-)] (parantezele finale nu sunt identice)</code> <br>
<code>-) (lipseşte caracterul de început</code> <br>
<code>::-[ (are două caractere : la început)</code></p>

<h1>Cerința</h1>

<p>Dat fiind un text, să se determine numărul de smileys care apar în text.</p>

<h1>Date de intrare</h1>

<p>Fişierul de intrare <code>smiley.in</code> conţine un text scris pe una sau mai multe linii.</p>

<h1>Date de ieșire</h1>

<p>Fişierul de ieşire <code>smiley.out</code> va conţine o singură linie pe care va fi scris un singur număr natural reprezentând numărul de smileys care apar în text.</p>

<h1>Restricții și precizări</h1>

<p>• Orice linie din fişierul de intrare conţine cel mult <code>250</code> de caractere.<br>
• Textul conţine cel mult <code>10000</code> de caractere.</p>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0;width:728px;height:15px;" sandbox="allow-forms allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="728" height="15" frameborder="0" src="https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-7152921241438800&amp;output=html&amp;h=15&amp;slotname=6421896419&amp;adk=1130877403&amp;adf=872686288&amp;w=728&amp;lmt=1595353184&amp;psa=1&amp;guci=1.2.0.0.2.2.0.0&amp;url=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2116%2Fsmiley&amp;flash=0&amp;wgl=1&amp;adsid=NT&amp;dt=1595353184371&amp;bpp=55&amp;bdt=232&amp;idt=286&amp;shv=r20200716&amp;cbv=r20190131&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;prev_fmts=336x280&amp;correlator=3015188278491&amp;frm=20&amp;pv=1&amp;ga_vid=1744050990.1595352838&amp;ga_sid=1595353185&amp;ga_hid=1573979127&amp;ga_fc=0&amp;iag=0&amp;icsg=17380323360767&amp;dssz=47&amp;mdo=0&amp;mso=0&amp;u_tz=180&amp;u_his=50&amp;u_java=0&amp;u_h=900&amp;u_w=1440&amp;u_ah=814&amp;u_aw=1440&amp;u_cd=30&amp;u_nplug=3&amp;u_nmime=4&amp;adx=41&amp;ady=1518&amp;biw=1200&amp;bih=647&amp;scr_x=0&amp;scr_y=0&amp;oid=3&amp;pvsid=1390833879462271&amp;pem=168&amp;ref=https%3A%2F%2Fwww.pbinfo.ro%2Fprobleme%2F2352%2Fcareu&amp;rx=0&amp;eae=0&amp;fc=896&amp;brdim=22%2C45%2C22%2C45%2C1440%2C23%2C1200%2C770%2C1200%2C647&amp;vis=1&amp;rsz=%7Co%7CeEbr%7C&amp;abl=NS&amp;pfx=0&amp;fu=8192&amp;bc=31&amp;ifi=2&amp;uci=a!2&amp;btvi=2&amp;fsb=1&amp;xpc=9gHGfnhwRp&amp;p=https%3A//www.pbinfo.ro&amp;dtd=293" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" data-google-container-id="a!2" data-load-complete="true" data-google-query-id="CImF-N7x3uoCFRbwsgodcf8FYA"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><code>smiley.in</code></p>

<pre contenteditable="true" editable="true">Salut! :) Ce mai faci? :----)))
Ai aflat noutatile? ;-P
-(eu ieri am aflat)
&gt;))))))!!!!!!!!</pre>

<p><code>smiley.out</code></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p>Cele <code>4</code> secvenţe smiley din text sunt:<br>
<code>:)</code><br>
<code>:----)))</code><br>
<code>;-P</code><br>
<code>&gt;))))))</code></p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
#include <cstring>
using namespace std;
ifstream cin("smiley.in");
ofstream cout("smiley.out");
int main()
{
    int cnt = 0;
    char s[256] , a[] = "′:;>8" , b[] = "()[]DPOX3";
    while(cin.getline(s , 256))
    {
        for(int i = 0 ; s[i]; i++)
        {
            if(strchr(a , s[i]))
            {
                i++;
                while(s[i] == '-')
                    i++;
                if(s[i] &amp;&amp; strchr(b , s[i])) cnt++;
                else i--;
            }
        }
    }
    cout << cnt;
}</pre>
