<h1>Cerinţa</h1>

<p>Se dau <code>n</code> numere întregi. Calculaţi cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Date de intrare</h1>

<p>Programul citește de la tastatură numărul <code>n</code>, iar apoi <code>n</code> numere întregi, separate prin spaţii.</p>

<h1>Date de ieşire</h1>

<p>Programul afișează pe ecran numărul <code>MIN</code>, reprezentând cel mai mic dintre cele <code>n</code> numere date.</p>

<h1>Restricţii şi precizări</h1>

<ul>
	<li><code>1 ≤ n ≤ 1000</code></li>
	<li>cele <code>n</code> numere citite vor avea cel mult <code>9</code> cifre</li>
</ul>

<br><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-unit -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:15px" data-ad-client="ca-pub-7152921241438800" data-ad-slot="6421896419" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:15px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><h1>Exemplu</h1>

<p><strong>Date de intrare</strong></p>

<pre contenteditable="true" editable="true">5
7 6 9 6 8</pre>

<p><strong>Date de ieșire</strong></p>

<pre contenteditable="true" editable="true">6</pre>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("sclmprime.in");
ofstream cout("sclmprime.out");

int n , a[1002] , L[1002] , l , lmax , ne , b;

int prim(int n)
{
    if(n == 0 || n == 1) return 0;
    else if(n == 2) return 1;
    else if(n % 2 == 0) return 0;
    else for(int i = 3 ; i * i <= n ; i += 2)
        if(n % i == 0) return 0;
    return 1;
}

int main()
{
    cin >> ne;
    for(int i = 1 ; i <= ne ; i++)
    {
        cin >> b;
        if(prim(b)) a[++n] = b;
    }
    L[n] = 1;
    for(int i = n ; i >= 1 ; i--)
    {
        L[i] = 1;
        for(int j = i + 1 ; j <= n ; j++)
            if(a[i] <= a[j] &amp;&amp; L[i] < L[j] + 1)
                L[i] = L[j] + 1;
        if(L[i] > lmax) lmax = L[i];
    }
    cout << lmax << '\n';
    int poz = 0 , mini = 2000000000 , lpoz = 0;
    a[lpoz] = -1 ;
    for(int k = lmax ; k > 0 ; k--)
    {
        mini = 2000000000;
        for(int i = lpoz + 1 ; i <= n ; i++)
            if(L[i] == k &amp;&amp; a[i] < mini &amp;&amp; a[i] >= a[lpoz])
                {
                    mini = a[i];
                    poz = i;
                }
        cout << a[poz] << " ";
        lpoz =poz;
    }
    return 0;
}</pre>
