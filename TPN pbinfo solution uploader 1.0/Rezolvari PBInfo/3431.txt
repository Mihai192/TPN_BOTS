<p>Ionel are <code>N</code> cartonașe. Fiecare cartonaș are înscrise două numere (un număr, <code>s</code>, în partea stângă, și celălalt număr, <code>d</code>, în partea dreaptă). El a așezat cartonașele într-un șir, lipite unul de celălalt, astfel încât numărul din partea dreaptă a primului cartonaș este lipit de numărul din partea stângă a celui de-al doilea cartonaș, numărul din partea dreaptă a celui de al doilea cartonaș este lipit de numărul din partea stângă a celui de-al treilea cartonaș etc. Spunem că două cartonașe alăturate “se potrivesc” dacă numărul din dreapta al primului cartonaș este egal cu numărul din stânga al celui de al doilea cartonaș.</p>

<p>Ionel observă că sunt perechi de cartonașe alăturate care “se potrivesc” și chiar secvențe de mai multe cartonașe alăturate, în care primul “se potrivește” cu al doilea, al doilea “se potrivește” cu al treilea etc.</p>

<h1>Cerința</h1>

<p>Scrieți un program care să citească numărul <code>N</code> de cartonașe, numerele înscrise pe fiecare cartonaș și determină:</p>

<p>1) Numărul de perechi de cartonașe care “se potrivesc”.<br>
2) Numărul de cartonașe din cea mai lungă secvență în care fiecare două cartonașe alăturate “se<br>
potrivesc”.<br>
3) Numărul de secvențe cu număr maxim de cartonașe care “se potrivesc”.</p>

<h1>Date de intrare</h1>

<p>Fișierul de intrare <code>cartonase.in</code> conține doar numere naturale nenule:</p>

<ul>
	<li>pe prima linie se găsește numărul <code>C</code> care poate avea doar valorile <code>1</code>, <code>2</code> sau <code>3</code> și reprezintă cerința<br>
care urmează a fi rezolvată. Pe a doua linie a fișierului se găsește numărul natural <code>N</code>, cu semnificația din enunț.</li>
	<li>pe fiecare dintre următoarele <code>N</code> linii se află, în acestă ordine, câte două numere naturale <code>s</code> și <code>d</code>,<br>
separate printr-un spațiu, cu semnificația din enunț pentru un cartonaș. Perechile de numere sunt date în ordinea în care cartonașele corespunzătoare lor apar în șirul lui Ionel.</li>
</ul>

<h1>Date de ieșire</h1>

<p>Fișierul de ieșire <code>cartonase.out</code> va conține pe prima linie un număr natural reprezentând răspunsul la<br>
cerința specificată.</p>

<h1>Restricții și precizări</h1>

<ul>
	<li><code>1 ≤ N ≤ 500</code>; <code>1 ≤ s ≤ 10000</code>; <code>1 ≤ d ≤10000</code><br>
• În concurs, pentru rezolvarea fiecărei cerințe se obțin câte 30 de puncte. Pe site se acordă 10 puncte pentru exemple.</li>
</ul>

<h1>Exemplul 1</h1>

<p><code>cartonase.in</code></p>

<pre contenteditable="true" editable="true">1
5
2 10
10 5
10 2
2 10
37 5</pre>

<p><code>cartonase.out</code></p>

<pre contenteditable="true" editable="true">2</pre>

<h3>Explicație</h3>

<p>Sunt <code>2</code> perechi de cartonașe alăturate care “se potrivesc”:</p>

<ul>
	<li>primul cu al doilea (<code>2 10</code> și <code>10 5</code>)</li>
	<li>al treilea cu al patrulea (<code>10 2</code> și <code>2 10</code>)</li>
</ul>

<h1>Exemplul 2</h1>

<p><code>cartonase.in</code></p>

<pre contenteditable="true" editable="true">2
5
2 10
10 5
5 2
2 10
37 5</pre>

<p><code>cartonase.out</code></p>

<pre contenteditable="true" editable="true">4</pre>

<h3>Explicație</h3>

<p>Primele patru cartonase formează o secvență în care fiecare două cartonașe alăturate “se potrivesc”:</p>

<ul>
	<li>primul cartonaș cu al doilea (<code>2 10</code> și <code>10 5</code>)</li>
	<li>al doilea cartonaș cu al treilea (<code>10 5</code> și <code>5 2</code>)</li>
	<li>al treilea cartonaș cu al patrulea (<code>5 2</code> și <code>2 10</code>)</li>
</ul>

<h1>Exemplul 3</h1>

<p><code>cartonase.in</code></p>

<pre contenteditable="true" editable="true">3
6
2 10
10 5
2 8
6 2
2 10
37 5</pre>

<p><code>cartonase.out</code></p>

<pre contenteditable="true" editable="true">2</pre>

<h3>Explicație</h3>

<p>Sunt maximum doua cartonașe alăturate care se potrivesc. În fisier există două secvențe de câte două cartonașe care “se potrivesc”: primele două cartonașe și al patrulea cu al cincilea cartonaș.</p>						
<pre class="EnlighterJSRAW" data-enlighter-language="cpp">#include <fstream>
using namespace std;

ifstream cin("cartonase.in");
ofstream cout("cartonase.out");

int n , x , y , cer , st , dr  , cnt , p , lmax , cate;

int main()
{
    cin >> cer >> n;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> x >> y;
        if(x == dr)
        {
            cate++;
            cnt++;
        }
        else
        {
            if(cnt > lmax) lmax = cnt , p = 0;
            else if(cnt == lmax) p++;
            cnt = 0;
        }
        st = x , dr = y;
    }
    if(cnt > 0)
    {
        if(cnt > lmax) lmax = cnt;
        else if(cnt == lmax) p++;
    }
    if(cer == 1)cout << cate;
    else if(cer == 2) cout << lmax + 1;
    else cout << p + 1;
    return 0;
}</pre>
